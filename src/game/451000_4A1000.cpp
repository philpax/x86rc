// clang-format off
// Disable unused labels warning
#pragma warning(disable: 4102)

#include "x86/insn.hpp"
#include "x86/thread_state.hpp"
#include "game/stubs.hpp"
#include "game/functions.hpp"

namespace game {

using namespace x86::insn;

void sub_450FC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->edi, ts->ecx);
	game::sub_48B1E0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4510AB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	add(&ts->eax, 0x44);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4510AB;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4510AB;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4510AA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), 0x12);
	if (!ts->eflags.zero) {
        goto loc_4510AA;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C78, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x3F800000);
	game::sub_44FE80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4462A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_443D50(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x4);
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	game::sub_5748B0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4510AA:
	pop(mv, &ts->esp, ts->esi);

loc_4510AB:
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4510C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_44CDB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4510D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4510D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4510E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_44B170(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4510F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4510F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4511D8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x4D);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x4E);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x4F);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x50);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x51);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x52);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x53);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x54);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x44B8D0);
	push(mv, &ts->esp, 0x55);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x1);

loc_4511D8:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4511E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_44C250(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4511F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4511F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x90, 4));
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));
	mov(mv, x86::mem(ts->ecx + 0xE0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xE8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, x86::mem(ts->ecx + 0xF0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, x86::mem(ts->ecx + 0xF4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xF8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x100, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x110, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x114, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x118, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x120, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x124, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ecx + 0x128, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x130, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx + 0x134, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_44D190(ts, mv);
	retn(mv, &ts->esp, 0x2C);
}

void sub_4512F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_44D390(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_451308;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_451308:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->ebp + 0x10, 1));
	movzx(&ts->eax, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x7EC510);
	game::sub_40C840(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->eax, 0xFFFFFFAA);
	cmp(&ts->eflags, ts->eax, 0x13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_451351;
    }
	jmp(x86::mem(0x4515E4, 4));

loc_451358:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0x2AF8);
	mov(mv, x86::mem(ts->edx + 0x3C, 2), ts->bx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_45136F:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0xFFFFD508);
	mov(mv, x86::mem(ts->eax + 0x3C, 2), ts->bx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451386:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787144, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x3C, 2), ts->ax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4513A4:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0xFFFFD508);
	mov(mv, x86::mem(ts->edx + 0x3E, 2), ts->bx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4513BB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0x2AF8);
	mov(mv, x86::mem(ts->eax + 0x3E, 2), ts->bx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4513D2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787144, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x3E, 2), ts->ax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4513EE:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_45140A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x2C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_45140A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_45141A:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_451436;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451436:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x2C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451446:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_451482;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, x86::mem(ts->eax + 0x34, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451463:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_451482;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, x86::mem(ts->eax + 0x34, 4), 0x0);
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451482:
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451490:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787140, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4514A8:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4514BE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4514BE:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x38, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4514CE:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4514E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787148, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4514E6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4514F6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787140, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x38, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_45150E:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x828668, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451520:
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x82866C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451533:
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x828670, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451546:
	push(mv, &ts->esp, 0x1);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451556:
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_451566:
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto def_451351;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8286A0, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4D0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8286A4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4D4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8286A8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4D8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_43CF10(ts, mv);
	push(mv, &ts->esp, 0x41200000);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x7EC4D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_5FBD60(ts, mv);

def_451351:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_451640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_44DC50(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_451658;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_451658:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772152);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x158);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x14, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x18, 1));
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->ebp + 0x1C, 1));
	mov(mv, x86::mem(ts->esi + 0x51, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x53, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(0x787154, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x787F28);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x52, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->ecx, x86::mem(0x7EC610, 4));
	mov(mv, x86::mem(ts->esp + 0x174, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	game::sub_446DC0(ts, mv);
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45172D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(0x787150, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), 0x1);
	goto loc_45172F;

loc_45172D:
	xor_(&ts->eax, ts->eax);

loc_45172F:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45175A;
    }
	mov(mv, &ts->ecx, x86::mem(0x787150, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_45175C;

loc_45175A:
	xor_(&ts->eax, ts->eax);

loc_45175C:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_451787;
    }
	mov(mv, &ts->ecx, x86::mem(0x787150, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_451789;

loc_451787:
	xor_(&ts->eax, ts->eax);

loc_451789:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4517B7;
    }
	mov(mv, &ts->ecx, x86::mem(0x787150, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_441A20(ts, mv);
	goto loc_4517B9;

loc_4517B7:
	xor_(&ts->eax, ts->eax);

loc_4517B9:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4517E7;
    }
	mov(mv, &ts->ecx, x86::mem(0x787150, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_441A20(ts, mv);
	goto loc_4517E9;

loc_4517E7:
	xor_(&ts->eax, ts->eax);

loc_4517E9:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x16C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_451811;
    }
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_446E70(ts, mv);
	goto loc_451813;

loc_451811:
	xor_(&ts->eax, ts->eax);

loc_451813:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x170, 1), ts->bl);
	game::sub_5ECCA0(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_44DE90(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BAF90(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4518AC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));

loc_4518AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	add(&ts->edi, 0x70);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_444910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_444980(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_444A70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78714C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4519A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x5C, 2), ts->bx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8C, 2), ts->bx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x5C, 2), ts->bx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8C, 2), ts->bx);

loc_4519A4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x164, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x18);

loc_772130:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x104, 4));
	goto sub_44CDB0;

loc_77213B:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7880CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x158, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_451660:
	mov(&ts->eax, 0x7DE620);
	goto ___CxxFrameHandler;
}

void filebuf___scalar_deleting_destructor__uint_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::filebuf___filebuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4519D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4519D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4519E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77216B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x13);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esp + 0xA0, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x787F78);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_451A64;
    }
	mov(mv, &ts->ecx, x86::mem(0x787220, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->di);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), 0x1);
	goto loc_451A66;

loc_451A64:
	xor_(&ts->eax, ts->eax);

loc_451A66:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_451A91;
    }
	mov(mv, &ts->edx, x86::mem(0x787224, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_451A93;

loc_451A91:
	xor_(&ts->eax, ts->eax);

loc_451A93:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_451ABE;
    }
	mov(mv, &ts->ecx, x86::mem(0x787228, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_451AC0;

loc_451ABE:
	xor_(&ts->eax, ts->eax);

loc_451AC0:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_44E320(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_444910(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	add(&ts->edx, 0x70);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_444980(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	add(&ts->edx, 0x70);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_444A70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_772160:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x94, 4));
	goto sub_44CDB0;

SEH_4519E0:
	mov(&ts->eax, 0x7DE644);
	goto ___CxxFrameHandler;
}

void sub_451B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::filebuf___filebuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_451B48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_451B48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__ios_base___ios_base_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_451B68;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_451B68:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_451B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x354);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_451BAD;
    }
	mov(mv, &ts->eax, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_451BAD;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_442DE0(ts, mv);
	goto loc_451BCA;

loc_451BAD:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x828770);
	game::sub_44FE80(ts, mv);

loc_451BCA:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0xC, 1));
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1F, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_451BE9;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45250A;
    }
	goto loc_451BED;

loc_451BE9:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_451C0D;
    }

loc_451BED:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_451C0D;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_451C0D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x828770);
	game::sub_44A160(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_451C0D;
    }
	mov(&ts->cl, 0x1);
	goto loc_451C16;

loc_451C0D:
	mov(mv, x86::mem(ts->esp + 0x1E, 1), 0x0);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x1E, 1));

loc_451C16:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_451C2C;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_451C2C;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_451C2C;
    }
	mov(&ts->eax, 0x1);
	goto loc_451C2E;

loc_451C2C:
	xor_(&ts->eax, ts->eax);

loc_451C2E:
	or_(&ts->cl, ts->al);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_451C46;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_451C46;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_451C46;
    }
	mov(&ts->eax, 0x1);
	goto loc_451C48;

loc_451C46:
	xor_(&ts->eax, ts->eax);

loc_451C48:
	or_(&ts->cl, ts->al);
	mov(mv, x86::mem(ts->esp + 0x1E, 1), ts->cl);
	if (ts->eflags.zero) {
        goto loc_451C55;
    }
	game::___setargv_0(ts, mv);

loc_451C55:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_45250A;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x4, 1));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x5, 1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xE0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_447A30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xF0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_447A30(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_447A80(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x110, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_447A80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x828770);
	game::sub_450040(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x144, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x828770);
	game::sub_450040(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574C90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	game::sub_574CB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xF0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x130, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574CF0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	game::sub_574C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x110, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574CD0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	game::sub_574CF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870A8, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870AC, 4));
	mov(&ts->eax, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E6D0(ts, mv);
	add(&ts->esp, 0x8);
	shl(&ts->eax, 0x1);
	movzx(&ts->ecx, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_451DC0;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_451DC0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_443D80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x8);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_451DE7;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_451DE7:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870A8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870AC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	add(&ts->esp, 0x8);
	shl(&ts->eax, 0x1);
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_451E2B;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_451E2B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_443D80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x26, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_451E6C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C780(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_401340(ts, mv);
	add(&ts->esp, 0x10);

loc_451E6C:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45218A;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45218A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x328, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_401340(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x32C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x150, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BAF90(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x198, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BAF90(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x25C, 4));
	game::sub_4419A0(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1CC, 4));
	game::sub_4419A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->eax, 0x3);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x6C, 2), ts->bx);
	mov(mv, x86::mem(ts->esp + 0x6E, 2), 0x1);
	if (ts->eflags.zero) {
        goto loc_451F48;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x78, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_451F84;
    }

loc_451F48:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x827B88);
	game::sub_4324D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_451F84;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_451F84;
    }
	add(&ts->eax, 0xE0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2E4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ebx, x86::mem(ts->esp + 0x2E8, 4));
	game::sub_5BAF90(ts, mv);
	add(&ts->esp, 0x8);

loc_451F84:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_451FA7;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_451F9E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_451F9A;
    }
	xor_(&ts->edx, ts->edx);
	goto loc_451FAE;

loc_451F9A:
	mov(&ts->edx, ts->ebx);
	goto loc_451FAE;

loc_451F9E:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x180, 4));
	goto loc_451FAE;

loc_451FA7:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));

loc_451FAE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_451FCB;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_451FC2;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_451FD2;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_451FD2;

loc_451FC2:
	lea(mv, &ts->ebx, x86::mem(ts->esp + 0x180, 4));
	goto loc_451FD2;

loc_451FCB:
	lea(mv, &ts->ebx, x86::mem(ts->esp + 0x140, 4));

loc_451FD2:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_451FDE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->eax, 0x70);
	goto loc_451FE0;

loc_451FDE:
	xor_(&ts->eax, ts->eax);

loc_451FE0:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x258, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_444980(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_452000;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->eax, 0x70);
	goto loc_452002;

loc_452000:
	xor_(&ts->eax, ts->eax);

loc_452002:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_444A70(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_444910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x828770);
	game::sub_442C80(ts, mv);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x6C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4520EF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	game::sub_574D30(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	game::sub_574D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574C90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	game::sub_574CB0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C4, 4));
	game::sub_574D30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C4, 4));
	game::sub_574D50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	game::sub_574C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_441940(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	game::sub_441960(ts, mv);
	goto loc_45218A;

loc_4520EF:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	game::sub_574D30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	game::sub_574D50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	game::sub_574CD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CF0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C4, 4));
	game::sub_574D30(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C4, 4));
	game::sub_574D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574CF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	game::sub_441980(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);

loc_45218A:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x60, 4));
	game::sub_574830(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x34, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x60, 4));
	game::sub_574830(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	game::sub_574830(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(&ts->ebx, 0x2);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4521E1;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_4521E1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4521F7;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_4521F7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	game::sub_574830(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452215;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452215:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_45222B;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_45222B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	game::sub_574830(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452249;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452249:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_45225F;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_45225F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	game::sub_574830(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_45227D;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_45227D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452293;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452293:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x70, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4522BA;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_4522BA:
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x71, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4522D9;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_4522D9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x72, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452300;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452300:
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x73, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_45231F;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_45231F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x74, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452346;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452346:
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x75, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_452365;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->bx);

loc_452365:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x76, 1));
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x77, 1));
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x78, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x79, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x7A, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x7B, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	game::sub_574C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574CD0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x58, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x60, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x7C, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x7D, 1));
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x7E, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x7F, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_574B10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574B90(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x5C, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_574830(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	game::sub_574830(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x80, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4524A9;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_4524A9:
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x81, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4524CD;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_4524CD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	game::sub_574830(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45250A;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45250A;
    }
	mov(mv, &ts->eax, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4524F4;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_45250A;
    }

loc_4524F4:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x84, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45250A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->edi);
	game::nullsub_3(ts, mv);

loc_45250A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_452520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772068);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x14);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x7880D8);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x270, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(0x7FB708, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x27C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_452585;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x280, 4), ts->ecx);

loc_452585:
	mov(mv, &ts->ecx, x86::mem(0x78722C, 4));
	mov(mv, &ts->edx, x86::mem(0x787230, 4));
	mov(mv, &ts->eax, x86::mem(0x787234, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7EC7A0, 4));
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7EC7A4, 4));
	mov(mv, &ts->ecx, x86::mem(0x787238, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x7EC7A8, 4));
	mov(mv, &ts->edx, x86::mem(0x78723C, 4));
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x787240, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_44EF60(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_446400(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_772060:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_44CDB0;

SEH_44F1E0:
	mov(&ts->eax, 0x7DE550);
	goto ___CxxFrameHandler;
}

void sub_452600(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77218B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xFC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x15);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(&ts->eax, 0x40E66666);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(&ts->eax, 0x70A0);
	mov(mv, x86::mem(ts->esi, 4), 0x788070);
	mov(mv, x86::mem(ts->esi + 0x38, 4), 0x40A00000);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x40, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x4E, 2), 0xFFFF8150);
	mov(mv, x86::mem(ts->esi + 0x50, 2), 0xFFFFE270);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x18);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10C, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4526D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x280, 4), ts->edi);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4526D0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x284, 4), ts->edi);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4526D0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0xC4, 2), 0x32DC);

loc_4526D0:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edi);
	game::sub_44F2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4529C8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	add(&ts->eax, 0xD0);
	fchs(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x7C, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x78, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	fchs(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	game::sub_5BAF80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x88, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, ts->edx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x10);

loc_4529C8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x104, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_772180:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xF8, 4));
	goto sub_44CDB0;

SEH_452600:
	mov(&ts->eax, 0x7DE668);
	goto ___CxxFrameHandler;
}

void sub_4529E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__ios_base___ios_base_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4529F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4529F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_452A00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->esi*2) - 0x3, 4));
	shl(&ts->eax, 0x3);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx) + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ecx) + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + (ts->ecx), 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5DD360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->ecx, ts->ebx);
	sub(&ts->ecx, 0x8C);
	mov(&ts->eax, 0x92492493);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 2));
	sar(&ts->edx, 0x5);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_452AEB;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_44F480(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_452AA0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_452AA0:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->esi*2), 4));
	shl(&ts->esi, 0x3);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->esi) + 0x4, 4));
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0x18, 2));
	add(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0x1A, 2));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x828734, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x828734, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_452B39;

loc_452AEB:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	imul(&ts->edx, ts->edx, 0x38);
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->esi*2), 4));
	shl(&ts->esi, 0x3);
	mov(mv, x86::mem(ts->esi + (ts->eax), 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx) + 0xC4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + (ts->edx) + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_452B1D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_452B29;

loc_452B1D:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edx) + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_401C40(ts, mv);

loc_452B29:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->eax) + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x14, 4), 0x0);

loc_452B39:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->esi) + 0xC, 4));
	add(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5DD360(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmulp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ecx) + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->edx) + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_452BA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x3);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_452BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_452BE9;
    }
	goto loc_452BD0;

loc_452BD0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_452BD0;
    }

loc_452BE9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_452BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_452C20;
    }
	nop();

loc_452C00:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x11, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_452C1C;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_452C1C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_452C00;
    }

loc_452C20:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_452D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x8003B200);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ebx, 0x3);
	if (ts->eflags.zero) {
        goto loc_452D81;
    }
	cmp(&ts->eflags, ts->eax, 0x8003B201);
	if (ts->eflags.zero) {
        goto loc_452D7D;
    }
	cmp(&ts->eflags, ts->eax, 0x8003B202);
	if (!ts->eflags.zero) {
        goto loc_452D86;
    }
	mov(&ts->ebx, 0x2);
	goto loc_452D86;

loc_452D7D:
	xor_(&ts->ebx, ts->ebx);
	goto loc_452D86;

loc_452D81:
	mov(&ts->ebx, 0x1);

loc_452D86:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_452E1D;
    }

loc_452D98:
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->ebx);
	xor_(&ts->ecx, ts->ecx);
	sub(&ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_452DB8;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_452DB0;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_452DBE;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	goto loc_452DBE;

loc_452DB0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	goto loc_452DBE;

loc_452DB8:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));

loc_452DBE:
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_452E07;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));

loc_452DC7:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->eax, 4));
	if (ts->eflags.zero) {
        goto loc_452DD5;
    }
	inc(&ts->edx);
	add(&ts->eax, 0x14);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_452DC7;
    }
	goto loc_452E03;

loc_452DD5:
	lea(mv, &ts->esi, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_452E03;
    }

loc_452DE3:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x11, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_452DFF;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_452DFF:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_452DE3;
    }

loc_452E03:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));

loc_452E07:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edx + (ts->ebp) + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_452D98;
    }

loc_452E1D:
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	sub(&ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_452E3D;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_452E35;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_452E43;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	goto loc_452E43;

loc_452E35:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	goto loc_452E43;

loc_452E3D:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));

loc_452E43:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_452E83;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0xC, 4));
	mov(&ts->ebp, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_452E50:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_452E7D;
    }

loc_452E56:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x11, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	if (ts->eflags.zero) {
        goto loc_452E77;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->edi - 0x4, 4), ts->eax);

loc_452E77:
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(&ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_452E56;
    }

loc_452E7D:
	add(&ts->edi, 0x14);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_452E50;
    }

loc_452E83:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_452E90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x8003B200);
	if (ts->eflags.carry) {
        goto loc_452EB5;
    }
	cmp(&ts->eflags, ts->eax, 0x8003B202);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_452EB5;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x828770);
	game::sub_452D50(ts, mv);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_452EB5:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void unknown_libname_2(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x828770);
	goto loc_452C30;

loc_452C30:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7721DC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1404);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_452C89;
    }
	push(mv, &ts->esp, 0x452BC0);
	push(mv, &ts->esp, 0x452BA0);
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x100);
	game::sub_75C461(ts, mv);
	goto loc_452C8B;

loc_452C89:
	xor_(&ts->esi, ts->esi);

loc_452C8B:
	push(mv, &ts->esp, 0xEA64);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->esi);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_452CD5;
    }
	push(mv, &ts->esp, 0x452BC0);
	push(mv, &ts->esp, 0x452BA0);
	push(mv, &ts->esp, 0xBB8);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0xBB8);
	game::sub_75C461(ts, mv);
	goto loc_452CD7;

loc_452CD5:
	xor_(&ts->esi, ts->esi);

loc_452CD7:
	push(mv, &ts->esp, 0x7D4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->esi);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_452D30;
    }
	push(mv, &ts->esp, 0x452BC0);
	push(mv, &ts->esp, 0x452BA0);
	push(mv, &ts->esp, 0x64);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x64);
	game::sub_75C461(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_452D30:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7721A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x788144);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7721B4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x788134);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7721C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x788124);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7721DC:
	mov(&ts->eax, 0x7DE69C);
	goto ___CxxFrameHandler;
}

void sub_452ED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x68);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_452EF2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));

loc_452EF2:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), 0x5);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x7EC430);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x430, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_446D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x394, 4));
	imul(&ts->eax, ts->eax, 0x98);
	add(&ts->eax, 0x800EE0);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x398, 4));
	imul(&ts->eax, ts->eax, 0x98);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->eax, 0x800EE0);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x39C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	imul(&ts->eax, ts->eax, 0x98);
	add(&ts->eax, 0x800EE0);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3A0, 4));
	imul(&ts->eax, ts->eax, 0x98);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->eax, 0x800EE0);
	test(&ts->eflags, ts->ecx, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870BC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_453008;
    }
	game::sub_59FA30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_453008;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5ECDB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_453008;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870B0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870B4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_453008:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0x70);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC480, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC484, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC488, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC48C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC490, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC494, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC498, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC49C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x80, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8C, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4A0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0x80);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4A4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0x90);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4A8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4B0, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4B4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4B8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4BC, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->eax, 0xA0);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_441340(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4531A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772068);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xF230);
	mov(mv, x86::mem(ts->esi + 0x32, 2), ts->cx);
	mov(mv, x86::mem(ts->esi + 0x34, 2), ts->cx);
	mov(&ts->edx, 0x40A00000);
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x787D40);
	mov(mv, x86::mem(ts->esi + 0x30, 2), 0x6590);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x447A0000);
	mov(mv, x86::mem(ts->esi + 0x54, 2), 0xFFFFC738);
	mov(mv, x86::mem(ts->esi + 0x56, 2), 0xFFFFF8F4);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x3ECCCCCD);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x18);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45328C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x280, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45328C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0x284, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45328C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->dx, x86::mem(0x7EB5D0, 2));
	mov(mv, x86::mem(ts->ecx + 0xC4, 2), ts->dx);

loc_45328C:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	game::sub_451100(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_772060:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_44CDB0;

SEH_44F1E0:
	mov(&ts->eax, 0x7DE550);
	goto ___CxxFrameHandler;
}

void sub_4532B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x30, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4532C5;
    }
	mov(mv, &ts->eax, x86::mem(0x787110, 4));
	mov(mv, x86::mem(ts->ecx + 0x150, 4), ts->eax);
	goto loc_4532D1;

loc_4532C5:
	mov(mv, &ts->edx, x86::mem(0x787118, 4));
	mov(mv, x86::mem(ts->ecx + 0x150, 4), ts->edx);

loc_4532D1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x30, 4), 0x1);
	game::sub_451200(ts, mv);
	retn(mv, &ts->esp, 0x30);
}

void sub_453320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_453373;
    }
	mov(mv, &ts->eax, x86::mem(0x787114, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45336C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_451200(ts, mv);

loc_45336C:
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0x0);

loc_453373:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_453380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_451200(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4533B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x154, 1), 0x1);
	game::sub_451200(ts, mv);
	retn(mv, &ts->esp, 0x24);
}

void sub_4533F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_453568;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x56);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x57);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x58);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x59);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5B);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5C);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5D);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5E);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x5F);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x60);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x61);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x62);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x63);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x65);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x66);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x67);
	push(mv, &ts->esp, ts->edx);
	game::sub_579410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x68);
	push(mv, &ts->esp, ts->eax);
	game::sub_579410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x451310);
	push(mv, &ts->esp, 0x69);
	push(mv, &ts->esp, ts->ecx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x1);

loc_453568:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_453570(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x1A4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_453594;
    }
	game::sub_5EAC70(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);

loc_453594:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x48, 4));
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (ts->eflags.zero) {
        goto loc_4535A5;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4536F4;
    }

loc_4535A5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4535E2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	game::sub_5ED290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4535DB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	game::sub_5ED300(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4535DB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4535E2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x424, 4), 0x2);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4535E2;
    }

loc_4535DB:
	mov(mv, x86::mem(ts->esp + 0x1A, 1), 0x1);
	goto loc_4535E7;

loc_4535E2:
	mov(mv, x86::mem(ts->esp + 0x1A, 1), 0x0);

loc_4535E7:
	mov(&ts->ecx, ts->esi);
	game::sub_445FC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1B, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_453609;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x54, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4536D0;
    }

loc_453609:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4536D0;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4536D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_453688;
    }
	add(&ts->ecx, 0x110);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C9C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	add(&ts->esp, 0xC);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_453688:
	mov(mv, &ts->ecx, x86::mem(0x78715C, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x5C4, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0xB0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F000000);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5D39F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4536E4;
    }

loc_4536D0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x52, 1));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->edx, ts->edx);
	setnz(ts->eflags, &ts->al);
	or_(&ts->cl, ts->al);
	mov(mv, x86::mem(ts->esi + 0x52, 1), ts->cl);
	goto loc_4536F4;

loc_4536E4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x52, 1));
	test(&ts->eflags, ts->ecx, ts->ecx);
	setz(ts->eflags, &ts->cl);
	or_(&ts->al, ts->cl);
	mov(mv, x86::mem(ts->esi + 0x52, 1), ts->al);

loc_4536F4:
	mov(mv, &ts->edx, x86::mem(0x787154, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ebx*4), 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(0x7EC610, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	game::sub_446DC0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_453739;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_453739;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_453739;
    }
	mov(mv, &ts->eax, x86::mem(0x890100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45375A;
    }

loc_453739:
	mov(mv, x86::mem(ts->esp + 0x100, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x104, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x108, 4), 0x0);

loc_45375A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->ecx, 0x80);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_446F10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xCC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x84, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x84, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x160, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_574D10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45380E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	game::sub_5ED290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4537F9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	game::sub_5ED300(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4537F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45380E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x424, 4), 0x2);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45380E;
    }

loc_4537F9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787210, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	goto loc_453822;

loc_45380E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);

loc_453822:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	push(mv, &ts->esp, 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(0x865154, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_574DF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865154, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5749E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865154, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	game::sub_574DF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x865154, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_574DF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865154, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_574DF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	game::sub_5ECCA0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->edi, 2));
	cmp(&ts->eflags, ts->ax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4538BE;
    }
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_4538BE;
    }
	cmp(&ts->eflags, ts->ax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4538BE;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4538B9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4538C0;
    }

loc_4538B9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	goto loc_4538C2;

loc_4538BE:
	mov(&ts->bl, 0x1);

loc_4538C0:
	xor_(&ts->eax, ts->eax);

loc_4538C2:
	mov(mv, &ts->ecx, x86::mem(0x828640, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4538D5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0x280, 4), ts->eax);

loc_4538D5:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4538E3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB5B0, 4));
	goto loc_4538E9;

loc_4538E3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));

loc_4538E9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->ecx, 0x60);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->edx, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_43CE10(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x828640, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453923;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(0x828640, 4));
	goto loc_453925;

loc_453923:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_453925:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x53, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_453957;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453975;
    }
	mov(mv, &ts->eax, x86::mem(0x78707C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0xB4, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453975;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(0x787078, 4));
	mov(mv, x86::mem(ts->ecx + 0xB8, 4), ts->edx);
	goto loc_453975;

loc_453957:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453975;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453975;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0xB8, 4), ts->ecx);

loc_453975:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x52, 1));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x170, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_44DE90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x52, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4539BD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4539BD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4539B5;
    }
	game::sub_5EB520(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4539BD;
    }

loc_4539B5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	goto loc_4539C3;

loc_4539BD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4539C3:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x3F800000);
	if (!ts->eflags.zero) {
        goto loc_453A07;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xF4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xF8, 4));
	add(&ts->eax, 0xF0);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));

loc_453A07:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	game::sub_43C9C0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x180, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C9C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78721C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78721C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78721C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	game::__ftol2(ts, mv);
	xor_(&ts->edi, ts->edi);
	mov(&ts->di, ts->ax);
	shr(&ts->di, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_43C2B0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43C370(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(0x78721C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x828640, 4));
	add(&ts->esp, 0x28);
	shl(&ts->eax, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_453B2D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0xC4, 2), ts->ax);

loc_453B2D:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BA9A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_572A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	shl(&ts->eax, 0x2);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x7EBE90, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x7EBEA8, 4));
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_453B97;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_453B97;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870B8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_453B97:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_452ED0(ts, mv);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_453BE2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_444530(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_44B040(ts, mv);

loc_453BE2:
	mov(mv, &ts->eax, x86::mem(0x865154, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	game::sub_447280(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_453C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77220C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x12);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x788018);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_453C59;
    }
	mov(mv, x86::mem(ts->eax + 0x280, 4), ts->ebx);

loc_453C59:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x270, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x7FB708, 4));
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->eax + 0x27C, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->edi, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_453C9D;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453C9F;

loc_453C9D:
	xor_(&ts->eax, ts->eax);

loc_453C9F:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453CBF;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_453CC1;

loc_453CBF:
	xor_(&ts->eax, ts->eax);

loc_453CC1:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453CE1;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_453CE3;

loc_453CE1:
	xor_(&ts->eax, ts->eax);

loc_453CE3:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453D0F;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453D11;

loc_453D0F:
	xor_(&ts->eax, ts->eax);

loc_453D11:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453D3D;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453D3F;

loc_453D3D:
	xor_(&ts->eax, ts->eax);

loc_453D3F:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453D6B;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453D6D;

loc_453D6B:
	xor_(&ts->eax, ts->eax);

loc_453D6D:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453D99;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453D9B;

loc_453D99:
	xor_(&ts->eax, ts->eax);

loc_453D9B:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453DC7;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453DC9;

loc_453DC7:
	xor_(&ts->eax, ts->eax);

loc_453DC9:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453DF5;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453DF7;

loc_453DF5:
	xor_(&ts->eax, ts->eax);

loc_453DF7:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453E23;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453E25;

loc_453E23:
	xor_(&ts->eax, ts->eax);

loc_453E25:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453E45;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_453E47;

loc_453E45:
	xor_(&ts->eax, ts->eax);

loc_453E47:
	push(mv, &ts->esp, 0x60);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453E8D;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x5C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x5E, 2), ts->bx);
	goto loc_453E8F;

loc_453E8D:
	xor_(&ts->eax, ts->eax);

loc_453E8F:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453EBB;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	goto loc_453EBD;

loc_453EBB:
	xor_(&ts->eax, ts->eax);

loc_453EBD:
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_453EE2;
    }
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_446E70(ts, mv);
	goto loc_453EE4;

loc_453EE2:
	xor_(&ts->eax, ts->eax);

loc_453EE4:
	push(mv, &ts->esp, 0x90);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453F09;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4419A0(ts, mv);
	goto loc_453F0B;

loc_453F09:
	xor_(&ts->eax, ts->eax);

loc_453F0B:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 1), ts->bl);
	game::sub_43C780(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_451B70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_7721F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_44CDB0;

loc_7721F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7880CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_453C00:
	mov(&ts->eax, 0x7DE6C8);
	goto ___CxxFrameHandler;
}

void sub_453F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x1B4);
	mov(mv, &ts->al, x86::mem(0x828654, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_453FD7;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82A3A4, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_453F9A;
    }
	mov(&ts->ecx, 0x828770);
	game::sub_442A10(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453F96;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x82A3A8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE60(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_453FA0;
    }

loc_453F96:
	xor_(&ts->eax, ts->eax);
	goto loc_453FA0;

loc_453F9A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));

loc_453FA0:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453FA9;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_453FAB;

loc_453FA9:
	xor_(&ts->eax, ts->eax);

loc_453FAB:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_453FC2;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_443BD0(ts, mv);
	goto loc_453FD7;

loc_453FC2:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, 0x7873D0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x8);

loc_453FD7:
	mov(&ts->ecx, 0x865480);
	game::sub_571250(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_454780;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454006;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454000;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_454006;
    }

loc_454000:
	mov(mv, x86::mem(0x828649, 1), ts->bl);

loc_454006:
	mov(mv, x86::mem(ts->esi + 0x84, 1), ts->bl);
	mov(mv, &ts->al, x86::mem(0x82879B, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(0x82879B, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_454028;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82A3A4, 4), 0x7);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_454028;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45402D;

loc_454028:
	mov(&ts->eax, 0x1);

loc_45402D:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_451B70(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x180, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43C780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(&ts->eax, 0x3);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_454057;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x78, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_454094;
    }

loc_454057:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x827B88);
	game::sub_4324D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454780;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454780;
    }
	add(&ts->eax, 0xE0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x184, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x8);

loc_454094:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4540A9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_442B70(ts, mv);
	goto loc_4540B7;

loc_4540A9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x828770);
	game::sub_442C80(ts, mv);

loc_4540B7:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(&ts->ecx, 0x828770);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	game::sub_4438C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xBC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4462A0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_454118;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0xC4, 2), ts->ax);

loc_454118:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_446180(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_446210(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454156;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_454156;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->edx, 0x60);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x148, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_45416B;

loc_454156:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x148, 4));
	push(mv, &ts->esp, ts->eax);

loc_45416B:
	game::sub_401340(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	add(&ts->esp, 0xC);
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4541BB;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45418B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4541D5;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x180, 4));
	goto loc_4541C2;

loc_45418B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	add(&ts->eax, 0x60);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_4541D5;

loc_4541BB:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));

loc_4541C2:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C9C0(ts, mv);
	add(&ts->esp, 0xC);

loc_4541D5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45421D;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4541ED;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_454237;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x180, 4));
	goto loc_454224;

loc_4541ED:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	add(&ts->eax, 0x60);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_454237;

loc_45421D:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));

loc_454224:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C9C0(ts, mv);
	add(&ts->esp, 0xC);

loc_454237:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454312;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x9, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_454312;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->ecx, 0x80);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_446F10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	add(&ts->edx, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_574CD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865154, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_574DF0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	game::sub_574D30(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC790, 4));
	push(mv, &ts->esp, 0x7EC780);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x7EC770);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC794, 4));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC798, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	game::sub_443F70(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));

loc_454312:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x74, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x78, 4), 0x3F800000);
	game::sub_5BA9A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82A3A4, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786F7C, 4));
	mov(mv, &ts->edi, x86::mem(0x82A3A4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45438B;
    }
	mov(&ts->ecx, 0x828770);
	game::sub_441920(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45438B;
    }
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.zero) {
        goto loc_45438B;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);

loc_45438B:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786F80, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78815C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->edx);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->eax + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->ebx);
	mov(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x74, 4), ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788158, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xA4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x98, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x9C, 4), ts->ebx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_441340(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4544C6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45447E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_45447E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_444530(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 1), ts->al);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_45450E;

loc_45447E:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4544C6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4544C6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4544C6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4544B7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x7, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4544B7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4544B7;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_444530(ts, mv);

loc_4544B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_45450E;

loc_4544C6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4544EE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x7, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4544EE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4544EE;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_444530(ts, mv);

loc_4544EE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454515;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_454515;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_454515;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->edx);

loc_45450E:
	mov(&ts->ecx, ts->esi);
	game::sub_44B040(ts, mv);

loc_454515:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CE10(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x828640, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45453B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xB0, 4));
	goto loc_45453D;

loc_45453B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_45453D:
	mov(mv, &ts->eax, x86::mem(0x865154, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	game::sub_447280(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7870A4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_574870(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788154, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45467D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4545AD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));

loc_4545AD:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_4462A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_443D50(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	game::sub_443DF0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788150, 4));
	add(&ts->esp, 0x8);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x47C35000);
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7845A0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45463F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_45463F:
	mov(mv, &ts->eax, x86::mem(0x828640, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45469F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(0x828640, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45469F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xB8, 4));
	goto loc_45469F;

loc_45467D:
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45469F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(0x828640, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45469F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0xB8, 4), ts->ebx);

loc_45469F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_574870(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_454780;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_48B1E0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_574D70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0xC0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0xC8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC8, 4), ts->eax);
	game::sub_574870(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_574C30(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45476F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x11C, 4), 0x3F000000);
	push(mv, &ts->esp, 0x3);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x11C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	game::sub_5D75E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_45476F:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5D75E0(ts, mv);

loc_454780:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_454790(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784554, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->eax, 0x3);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8D8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4547E2;
    }
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	goto loc_4547EE;

loc_4547E2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);

loc_4547EE:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	game::sub_5B5330(ts, mv);
	mov(&ts->ecx, ts->edi);
	movsx(&ts->ebx, ts->al);
	game::sub_5EC0A0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_5EC0B0(ts, mv);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_454859;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_454859;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_446BC0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_454872;
    }

loc_454838:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_454859:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_44F480(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_454838;
    }

loc_454872:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0x18, 2));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x1A, 2));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x828734, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x828734, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	mov(&ts->edi, 0x1);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4548F8;
    }
	mov(&ts->ebp, 0x18);

loc_4548C3:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_452A00(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4548F8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4548F8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->edi);
	add(&ts->ebp, 0x18);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4548C3;
    }

loc_4548F8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_454910(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	game::sub_442A10(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_454965;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C38, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE60(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_454949;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_454949;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	dec(mv, x86::mem(ts->esi + 0x8, 4));
	goto loc_454950;

loc_454949:
	mov(&ts->ecx, ts->esi);
	game::sub_452BF0(ts, mv);

loc_454950:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C38, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45495F;
    }
	mov(&ts->eax, ts->esi);

loc_45495F:
	mov(mv, x86::mem(ts->ebx + 0x1C38, 4), ts->eax);

loc_454965:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_454970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C34, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_454988;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x4558F8, 4));

loc_45498F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2D);
	cmp(&ts->eflags, ts->eax, 0x25);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x455970, 1));
	jmp(x86::mem(0x455934, 4));

loc_4549AF:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, 0x7EC3F0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4132C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C94, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4549DD:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, 0x7EC3F0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4132C0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB474, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB474, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_454A2E;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x7EB474, 4), 0x3F800000);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454A2E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB474, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x7EB474, 4), 0x41A00000);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454A56:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454A72:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	push(mv, &ts->esp, 0xA);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454A8E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_448820(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454AA5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_450790(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454ABC:
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454ACC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	sub(mv, &ts->edx, x86::mem(ts->esi + 0xCC, 4));
	neg(&ts->edx);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0xFFFFFFFE);
	add(&ts->edx, 0x3);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454AF1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_442FA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454B06:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1D, 1), ts->cl);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x3);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x8C);
	game::sub_447970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x19C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4479D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_442FD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454B58:
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454B68:
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1CD5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1CC0, 4), ts->ebx);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454B86:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1CD5, 1));
	pop(mv, &ts->esp, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CD5, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454B9E:
	mov(&ts->ecx, ts->esi);
	game::sub_450C90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454BAC:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2B);
	cmp(&ts->eflags, ts->eax, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x4559AC, 1));
	jmp(x86::mem(0x455998, 4));

loc_454BDA:
	dec(mv, x86::mem(ts->esi + 0x1C4C, 4));
	if (!ts->eflags.sign) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C4C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454BF7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C4C, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0x1C4C, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C4C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454C1C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C4C, 4));
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454C3B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_454910(ts, mv);

loc_454C34:
	mov(&ts->ecx, ts->esi);
	game::sub_44A4D0(ts, mv);

loc_454C3B:
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454C4B:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2B);
	cmp(&ts->eflags, ts->eax, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x4559D0, 1));
	jmp(x86::mem(0x4559BC, 4));

loc_454C79:
	dec(mv, x86::mem(ts->esi + 0x1C48, 4));
	if (!ts->eflags.sign) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C48, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454C96:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C48, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esi + 0x1C48, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C48, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454CBB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C48, 4));
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454CEA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_454C34;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_442950(ts, mv);

loc_454CDA:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454CEA:
	mov(&ts->ecx, ts->esi);
	game::sub_450ED0(ts, mv);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454D01:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2B);
	cmp(&ts->eflags, ts->eax, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4559F4, 1));
	jmp(x86::mem(0x4559E0, 4));

loc_454D2F:
	dec(mv, x86::mem(ts->esi + 0x1C54, 4));
	if (!ts->eflags.sign) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C54, 4), 0x6);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454D4C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C54, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x7);
	mov(mv, x86::mem(ts->esi + 0x1C54, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C54, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454D71:
	mov(mv, &ts->ecx, x86::mem(0x82A594, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_448A40(ts, mv);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454D96:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0xD5, 4));
	cmp(&ts->eflags, ts->ecx, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x455A14, 1));
	jmp(x86::mem(0x455A04, 4));

loc_454DC5:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1C40, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, 0xD5);
	setnz(ts->eflags, &ts->dl);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edx) - 0x1, 4));
	add(&ts->edx, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43C280(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C40, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454DF3:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xD7);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C40, 4));
	setnz(ts->eflags, &ts->cl);
	sub(&ts->eax, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx) - 0x1, 4));
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_454E88;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_454E58;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_442A10(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454E27;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_454E29;

loc_454E27:
	xor_(&ts->eax, ts->eax);

loc_454E29:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C38, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edx, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_43C280(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C38, 4), ts->eax);
	game::sub_44A4D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454E58:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x1C3C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_44A530(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C3C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C38, 4), ts->ebx);
	game::sub_44A4D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454E88:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C50, 4));
	add(&ts->eax, ts->edi);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C280(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x1C50, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_454EBB;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_44A450(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_44A4D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454EBB:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C38, 4), ts->ebx);
	game::sub_44A4D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454ED5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C40, 4));
	sub(&ts->eax, 0x3);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_455079;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45506D;
    }
	mov(mv, x86::mem(ts->esi + 0x1CCC, 4), 0x20);
	mov(mv, x86::mem(ts->esi + 0x1CD0, 4), ts->ebx);
	game::sub_442A10(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45503D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C50, 4));
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45504E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_454F9B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_443750(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_441FA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C38, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4436F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C70, 4), 0x3F800000);
	game::sub_448030(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454F6D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C70, 4));

loc_454F6D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	push(mv, &ts->esp, 0x7);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C70, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CD0, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_454F9B:
	mov(&ts->ecx, ts->esi);
	game::sub_443750(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_454FB2;
    }
	mov(mv, &ts->eax, x86::mem(0x88A334, 4));
	goto loc_454FB4;

loc_454FB2:
	xor_(&ts->eax, ts->eax);

loc_454FB4:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C80, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_45503D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x70, 4));
	shr(&ts->ecx, 0x1);
	and_(&ts->cl, 0x1);
	movzx(&ts->dx, ts->cl);
	cmp(mv, &ts->eflags, ts->dx, x86::mem(ts->edi + 0x2, 2));
	if (!ts->eflags.zero) {
        goto loc_45503D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5330(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C80, 4));
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_447DC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x1C64, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45502D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788160, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));

loc_45502D:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45503D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CD0, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45504E:
	mov(&ts->ecx, ts->esi);
	game::sub_443750(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C38, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4436F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45506D:
	game::sub_44A7A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455079:
	game::sub_442A10(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4549A8;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C4C, 4), ts->ebx);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4550A5:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0xD5, 4));
	cmp(&ts->eflags, ts->ecx, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x455A38, 1));
	jmp(x86::mem(0x455A24, 4));

loc_4550D4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C44, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, 0xD7);
	setnz(ts->eflags, &ts->dl);
	cmp(&ts->eflags, ts->ecx, 0xA);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edx) - 0x1, 4));
	mov(&ts->eax, ts->edx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	jmp(x86::mem(0x455A48, 4));

loc_4550FA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	movzx(mv, &ts->edi, x86::mem(ts->eax + (ts->esi) + 0x19C, 1));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x19C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x2);
	mov(mv, x86::mem(ts->esp + 0x1E, 2), 0x8);
	and_(&ts->ecx, 0x12);
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x21, 1), ts->dl);
	game::sub_447970(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_447A10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455152:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	movzx(mv, &ts->edi, x86::mem(ts->ecx + (ts->esi) + 0x1A0, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_443830(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4498A0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x6);
	mov(mv, x86::mem(ts->esp + 0x21, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x8);
	game::sub_447970(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_447A10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4551AF:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x88);
	movzx(mv, &ts->edi, x86::mem(ts->edx + (ts->esi) + 0x1A1, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_443830(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_449D00(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1D, 1), ts->cl);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x7);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x8);
	game::sub_447970(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_447A10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45520C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x19E, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x9);

loc_455224:
	xor_(mv, x86::mem(ts->eax, 1), 0x1);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1D, 1), ts->cl);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x4);
	game::sub_447970(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45524B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x19F, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xA);
	goto loc_455224;

loc_455265:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x19D, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x8);
	goto loc_455224;

loc_45527F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x1A2, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xB);
	goto loc_455224;

loc_455299:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C50, 4), 0x2);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x1A3, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xC);
	goto loc_455224;

loc_4552C3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x1A4, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xD);
	goto loc_455224;

loc_4552E0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x1A5, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xE);
	goto loc_455224;

loc_4552FD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	add(&ts->ecx, 0x4);
	imul(&ts->ecx, ts->ecx, 0x88);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->esi), 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_443880(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	add(&ts->edx, 0x4);
	imul(&ts->edx, ts->edx, 0x88);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->esi), 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455331:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->esi) + 0x19C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45534C;
    }
	dec(mv, x86::mem(ts->esi + 0x1C44, 4));

loc_45534C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C44, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C44, 4), 0xA);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455369:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->esi) + 0x19C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_455384;
    }
	inc(mv, x86::mem(ts->esi + 0x1C44, 4));

loc_455384:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C44, 4), 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C44, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45539E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	imul(&ts->edx, ts->edx, 0x88);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->edx + (ts->esi), 4));
	if (ts->eflags.zero) {
        goto loc_4553DC;
    }
	mov(mv, x86::mem(ts->esp + 0x1D, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x10);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x8);
	game::sub_447970(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_447A10(ts, mv);

loc_4553DC:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4553EC:
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, 0xA);
	mov(&ts->ebx, 0x0);
	if (ts->eflags.zero) {
        goto loc_455406;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_455406;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_455406;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_45540B;

loc_455406:
	mov(&ts->edi, 0x1);

loc_45540B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2D);
	cmp(&ts->eflags, ts->eax, 0x25);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x455A98, 1));
	jmp(x86::mem(0x455A74, 4));

loc_45542B:
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, 0x7EC3F0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4132C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C94, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455459:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, 0x7EC3F0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4132C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C98, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455487:
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82A594, 4), ts->edi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45549D:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1C30, 1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x3);
	mov(mv, x86::mem(ts->esp + 0x21, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x22, 2), 0x8C);
	game::sub_447970(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi) + 0x19C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4479D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_450470(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4554F0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->esi) + 0x19C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	setnz(ts->eflags, &ts->dl);
	mov(&ts->ecx, ts->esi);
	add(&ts->edx, 0xB);
	push(mv, &ts->esp, ts->edx);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455522:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->esi) + 0x19C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	setnz(ts->eflags, &ts->cl);
	add(&ts->ecx, 0xD);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455554:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	cmp(&ts->eflags, ts->ecx, 0x9);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455577:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45559A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xFFFFFF2D);
	cmp(&ts->eflags, ts->eax, 0xF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4549A8;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x455AD4, 1));
	jmp(x86::mem(0x455AC0, 4));

loc_4555BA:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1CD4, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4555D5:
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (ts->eflags.zero) {
        goto loc_45566F;
    }
	cmp(&ts->eflags, ts->ecx, 0xC);
	if (ts->eflags.zero) {
        goto loc_45566F;
    }
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, 0x1);
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C34, 4));
	sub(&ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_455617;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_455617;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_455617;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45561C;

loc_455617:
	mov(&ts->eax, 0x1);

loc_45561C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->edi, ts->edi, 0x88);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	add(&ts->edi, ts->ecx);
	mov(&ts->dl, 0x80);
	mov(mv, x86::mem(ts->edi + (ts->esi) + 0x212, 1), ts->dl);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ebx, ts->ebx, 0x88);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->esi) + 0xB1, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->eax*2) + 0x162, 4));
	mov(mv, x86::mem(ts->ebx + (ts->eax), 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x214, 1), ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45566F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1CD6, 1));
	pop(mv, &ts->esp, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	setz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CD6, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_455687:
	cmp(&ts->eflags, ts->ecx, 0xD);
	if (ts->eflags.zero) {
        goto loc_455695;
    }
	cmp(&ts->eflags, ts->ecx, 0xE);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }

loc_455695:
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, 0x1);
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C34, 4));
	sub(&ts->eax, 0xA);
	mov(&ts->ebx, 0x0);
	if (ts->eflags.zero) {
        goto loc_4556CA;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4556CA;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4556CA;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4556CF;

loc_4556CA:
	mov(&ts->edi, 0x1);

loc_4556CF:
	push(mv, &ts->esp, 0x1);
	game::sub_48B1E0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4557ED;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x178, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x17C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x188, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x180, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x210, 1), ts->al);
	lea(mv, &ts->ebx, x86::mem(ts->edi + (ts->edi*2), 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	imul(&ts->edx, ts->edx, 0x88);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	add(&ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->esi) + 0x212, 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	imul(&ts->edx, ts->edx, 0x88);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi) + 0xB1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*2) + 0x162, 4));
	mov(mv, x86::mem(ts->edx + (ts->ecx), 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x88);
	add(&ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->esi) + 0x214, 1), ts->al);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x44);
	add(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + (ts->ecx*2) + 0x218, 1), ts->al);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x44);
	add(&ts->edx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + (ts->edx*2) + 0x219, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4557ED:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	add(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x210, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->edi*2), 4));
	add(&ts->ecx, ts->eax);
	mov(&ts->dl, 0x80);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x212, 1), ts->dl);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ebp, ts->ebp, 0x88);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi) + 0xB1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*2) + 0x162, 4));
	mov(mv, x86::mem(ts->ecx + (ts->ebp), 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x214, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x44);
	add(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esi + (ts->edx*2) + 0x218, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x44);
	add(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + (ts->eax*2) + 0x219, 1), 0x32);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_45587A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	sub(&ts->eax, 0xDA);
	if (ts->eflags.zero) {
        goto loc_4558E0;
    }
	sub(&ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto def_4549A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C50, 4));
	xor_(&ts->ebx, ts->ebx);
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45589F;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_454CDA;
    }

loc_45589F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C5C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_454CDA;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4307D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_454CDA;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_439120(ts, mv);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_455C80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4558E0:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1CD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0x1CD5, 1), ts->dl);

def_4549A8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

def_454988:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_455AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x828770);
	game::sub_454970(ts, mv);
	retn(mv, &ts->esp);
}

void sub_455B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772068);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_44AB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x787E88);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x3E, 2), ts->ax);
	mov(mv, x86::mem(0x828668, 4), ts->eax);
	mov(mv, x86::mem(0x82866C, 4), ts->eax);
	mov(mv, x86::mem(0x828670, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4D4, 4));
	mov(mv, x86::mem(0x7EC4D0, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC4D8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(0x8286A0, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8286A4, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8286A8, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	game::sub_4533F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_772060:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_44CDB0;

SEH_44F1E0:
	mov(&ts->eax, 0x7DE550);
	goto ___CxxFrameHandler;
}

void sub_455BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77222B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_455C28;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787298, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787290, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x787294, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_454790(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_455C2A;

loc_455C28:
	xor_(&ts->esi, ts->esi);

loc_455C2A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_455C4B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0x4);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_455C66;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_455C4B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_455C4B:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_455C66:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_51:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_455C80:
	mov(&ts->eax, 0x7DE6EC);
	goto ___CxxFrameHandler;
}

void sub_455C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77222B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C34, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4568A5;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_455CBD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C6C, 4));
	mov(mv, x86::mem(ts->ebp + 0x1C64, 4), ts->ecx);

loc_455CBD:
	cmp(&ts->eflags, ts->eax, 0xF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_455CCD;
    }
	jmp(x86::mem(0x4568B8, 4));

loc_455CD4:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x827B88);
	game::sub_43B380(ts, mv);
	game::sub_437660(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x890080, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	xor_(&ts->esi, ts->esi);
	mov(&ts->eax, 0x3F800000);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x1C78, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x1C64, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x1C70, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C74, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C68, 4), ts->esi);
	game::sub_5F46A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	game::sub_5930F0(ts, mv);
	push(mv, &ts->esp, 0x1000);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, 0xC8);
	mov(mv, x86::mem(ts->ebp + 0xC4, 4), ts->eax);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, 0x490);
	mov(mv, x86::mem(ts->ebp + 0xBC, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_455D79;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->ecx, 0x5C4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5A93A0(ts, mv);
	goto loc_455D7B;

loc_455D79:
	xor_(&ts->eax, ts->eax);

loc_455D7B:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1C78, 4));
	add(&ts->esi, 0x40);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0xC0, 4), ts->eax);
	mov(&ts->ecx, 0x124);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x1C50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_455DAA;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_44A450(ts, mv);

loc_455DAA:
	mov(&ts->ecx, ts->ebp);
	game::sub_44A4D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	goto def_455CCD;

loc_455DBA:
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x28);
	goto def_455CCD;

loc_455DF9:
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x30);
	goto def_455CCD;

loc_455E43:
	push(mv, &ts->esp, 0xDF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x10);
	goto def_455CCD;

loc_455E61:
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0xDE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDD);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDB);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x38);
	cmp(&ts->eflags, ts->esi, 0x5);
	if (ts->eflags.zero) {
        goto def_455CCD;
    }
	mov(mv, x86::mem(ts->ebp + 0x1CD5, 1), ts->bl);
	goto def_455CCD;

loc_455F20:
	mov(&ts->ecx, ts->ebp);
	game::sub_44A1B0(ts, mv);
	game::sub_44A3A0(ts, mv);
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD3);

loc_455F47:
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDD);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	goto def_455CCD;

loc_455F8C:
	mov(&ts->ecx, ts->ebp);
	game::sub_44A1B0(ts, mv);
	game::sub_44A3A0(ts, mv);
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD4);
	goto loc_455F47;

loc_455FB5:
	mov(&ts->ecx, ts->ebp);
	game::sub_44A310(ts, mv);
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5794E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_455FDC;
    }
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

loc_455FDC:
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5794E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_455FFC;
    }
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

loc_455FFC:
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x10);
	goto def_455CCD;

loc_4560D0:
	mov(&ts->ecx, ts->ebp);
	game::sub_44A310(ts, mv);
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5794E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4560F7;
    }
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

loc_4560F7:
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5794E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_456117;
    }
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

loc_456117:
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEC);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEB);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xEE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xF4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDB);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

def_455CCD:
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, 0xA);
	mov(mv, x86::mem(ts->ebp + 0x1C34, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4561F8;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4561F8;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4561F8;
    }
	xor_(&ts->edi, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	goto loc_4561FC;

loc_4561F8:
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->edi, ts->edi);

loc_4561FC:
	cmp(&ts->eflags, ts->esi, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45626A;
    }
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1C64, 4));
	mov(mv, x86::mem(ts->ebp + 0x1C6C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_45621B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786F94, 4));
	fchs(&ts->fp, x86::fp_index(0));
	goto loc_456221;

loc_45621B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_456221:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C30, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C2C, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	setle(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456241;
    }
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);

loc_456241:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_456252;
    }
	imul(&ts->eax, ts->eax, 0x88);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ebp) + 0x1A8, 4));
	goto loc_456258;

loc_456252:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_456258:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	xor_(&ts->edi, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C64, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_45626A:
	cmp(&ts->eflags, ts->esi, 0xF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_456273;
    }
	jmp(x86::mem(0x4568F8, 4));

loc_45627A:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1C7C, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45629A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5774A0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x1C7C, 4), ts->edi);

loc_45629A:
	mov(&ts->ecx, ts->ebp);
	game::sub_443750(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C78, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_5F46A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_593100(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C64, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_456311;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3EC, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cx, x86::mem(ts->eax + 0x3CC, 2));
	push(mv, &ts->esp, ts->edi);
	add(&ts->eax, 0x20);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5FBD60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x1C78, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC0, 4));
	add(&ts->edi, 0x40);
	mov(&ts->ecx, 0x124);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	xor_(&ts->edi, ts->edi);

loc_456311:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC4, 4));
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xBC, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0xC4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp + 0xBC, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp + 0xC0, 4), ts->edi);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x8650A0, 4), ts->edi);
	goto def_456273;

loc_456355:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE3);
	goto loc_45688A;

loc_456398:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1C7C, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4563B8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5774A0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x1C7C, 4), ts->edi);

loc_4563B8:
	mov(mv, x86::mem(ts->ebp + 0x1CBC, 4), 0x64);

loc_4563C2:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x20);
	goto def_456273;

loc_45642F:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x20);
	goto def_456273;

loc_456459:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDD);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDB);

loc_45654A:
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x30);
	goto def_456273;

loc_456565:
	mov(&ts->ecx, ts->ebp);
	game::sub_443690(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x88);
	mov(mv, &ts->al, x86::mem(ts->edx + (ts->ebp) + 0x19C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4563C2;
    }
	mov(mv, x86::mem(ts->ebp + 0x1C44, 4), ts->edi);
	goto loc_4563C2;

loc_456592:
	mov(&ts->ecx, ts->ebp);
	game::sub_4435C0(ts, mv);
	game::sub_4436C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD3);

loc_4565CB:
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDD);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	goto def_456273;

loc_45662D:
	mov(&ts->ecx, ts->ebp);
	game::sub_4435C0(ts, mv);
	game::sub_4436C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xF8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xD4);
	goto loc_4565CB;

loc_45666B:
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x1CC4, 4), ts->ebx);
	game::sub_449430(ts, mv);
	mov(&ts->ecx, ts->ebp);
	game::sub_443690(ts, mv);
	mov(&ts->ecx, ts->ebp);
	game::sub_442AA0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1C34, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, 0xB);
	setnz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x1CD4, 1), ts->bl);
	add(&ts->eax, 0xD3);
	mov(&ts->esi, ts->eax);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEF);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDA);
	goto loc_45654A;

loc_45679E:
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x1CC4, 4), ts->ebx);
	game::sub_443690(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xE2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF6);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEC);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEB);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xEE);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF2);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDB);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x455AF0);
	push(mv, &ts->esp, 0xDA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xE4);

loc_45688A:
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xD9);
	push(mv, &ts->esp, ts->ebx);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x10);

def_456273:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4568A5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_51:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_455C80:
	mov(&ts->eax, 0x7DE6EC);
	goto ___CxxFrameHandler;
}

void sub_456940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77224B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x3E8);
	mov(mv, &ts->eax, x86::mem(0x828644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_456989;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_456980;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_455C80(ts, mv);

loc_456980:
	mov(mv, &ts->eax, x86::mem(0x828644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4569A0;
    }

loc_456989:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45794B;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_455C80(ts, mv);

loc_4569A0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45794B;
    }
	mov(mv, x86::mem(0x8650A0, 4), 0x1);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1CD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4569D0;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_441FD0(ts, mv);
	add(&ts->esp, 0x4);

loc_4569D0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4569E2;
    }
	jmp(x86::mem(0x457960, 4));

loc_4569E9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB474, 4));
	push(mv, &ts->esp, 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C94, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C2C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456A58;
    }
	mov(&ts->edx, ts->ecx);
	imul(&ts->edx, ts->edx, 0x88);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ebx) + 0x1A8, 4));
	mov(&ts->edi, ts->edi);

loc_456A40:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_456A58;
    }
	dec(&ts->ecx);
	sub(&ts->edx, 0x88);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_456A40;
    }

loc_456A58:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1CD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebx + 0x1C30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto def_4569E2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C5C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_456A88;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_450FC0(ts, mv);
	goto def_4569E2;

loc_456A88:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_450FC0(ts, mv);
	goto def_4569E2;

loc_456A9B:
	mov(&ts->ecx, ts->ebx);
	game::sub_442A10(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto def_4569E2;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_448030(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_443BD0(ts, mv);
	goto def_4569E2;

loc_456AC6:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C58, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827B88);
	game::sub_435D30(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_456BF2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C38, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x827B88);
	game::sub_43B8E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827B88);
	mov(mv, x86::mem(ts->ebx + 0x1C5C, 4), ts->eax);
	game::sub_438E70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4307D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_456B35;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_439120(ts, mv);

loc_456B35:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x110, 4));
	game::sub_5E0B40(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE4, 4));
	mov(mv, x86::mem(ts->esp + 0x408, 4), 0x0);
	game::sub_5E6FA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE8, 4));
	game::sub_5E7E70(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C60, 4));
	mov(mv, x86::mem(ts->ebx + 0x1C64, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C70, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_456BD0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C50, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_456BD2;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_448030(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_456BD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C70, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	goto loc_456BD2;

loc_456BD0:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_456BD2:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->ebx);
	game::sub_455C80(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	mov(mv, x86::mem(ts->esp + 0x3FC, 4), 0xFFFFFFFF);
	game::sub_5E0BF0(ts, mv);

loc_456BF2:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1CC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456C08;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x1CC8, 4), ts->eax);
	goto def_4569E2;

loc_456C08:
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x1CD0, 4), 0x2);
	game::sub_455C80(ts, mv);
	goto def_4569E2;

loc_456C20:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C50, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_456C39;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_456CC5;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_4569E2;
    }

loc_456C39:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C5C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto def_4569E2;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4307D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_456C66;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_439160(ts, mv);

loc_456C66:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x2C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_456CA4;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x1C64, 4), 0x0);
	game::sub_4307D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_456C9B;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_439120(ts, mv);

loc_456C9B:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->ebx);
	game::sub_455C80(ts, mv);

loc_456CA4:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1CD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4569E2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_450FC0(ts, mv);
	goto def_4569E2;

loc_456CC5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto def_4569E2;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x1C64, 4), 0x0);
	game::sub_455C80(ts, mv);
	goto def_4569E2;

loc_456D06:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1CC0, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_456D26;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_456D26;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x1CD5, 1), 0x1);
	game::sub_455C80(ts, mv);

loc_456D26:
	inc(mv, x86::mem(ts->ebx + 0x1CC0, 4));
	goto def_4569E2;

loc_456D31:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebx), 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x19C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto def_4569E2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C50, 4), 0x2);
	if (!ts->eflags.zero) {
        goto def_4569E2;
    }
	mov(mv, x86::mem(ts->eax + 0x1A3, 1), 0x1);
	goto def_4569E2;

loc_456D67:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456D8F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786FE8, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C94, 4));
	mov(&ts->ecx, ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_443190(ts, mv);

loc_456D8F:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x1C2C, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	setle(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456DAD;
    }
	mov(&ts->ecx, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);

loc_456DAD:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_456DBE;
    }
	imul(&ts->ecx, ts->ecx, 0x88);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->ebx) + 0x1A8, 4));
	goto loc_456DC4;

loc_456DBE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_456DC4:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786FEC, 4));
	mov(&ts->ecx, ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_443210(ts, mv);
	goto def_4569E2;

loc_456DEF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786FE8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1C30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C94, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C2C, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_456E23;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_443190(ts, mv);

loc_456E23:
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x1C2C, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_456E75;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C50, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_456E75;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C70, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_456E63;
    }
	mov(mv, x86::mem(ts->ebx + 0x1C70, 4), 0x3F800000);

loc_456E63:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EB470, 4));

loc_456E75:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1C30, 4));
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	setle(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_456E90;
    }
	mov(&ts->eax, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);

loc_456E90:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_456EA1;
    }
	imul(&ts->eax, ts->eax, 0x88);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ebx) + 0x1A8, 4));
	goto loc_456EA7;

loc_456EA1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_456EA7:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786F94, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786FEC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_443210(ts, mv);
	goto def_4569E2;

loc_456ED8:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1CC4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_456EEE;
    }
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x1CC4, 4), ts->ecx);
	goto def_4569E2;

loc_456EEE:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x1CD4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto def_4569E2;
    }
	sub(&ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_456F0F;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_456F0F;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_456F0F;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_456F14;

loc_456F0F:
	mov(&ts->esi, 0x1);

loc_456F14:
	push(mv, &ts->esp, 0xF2);
	game::sub_450F80(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(0x78703C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_401020(ts, mv);
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	push(mv, &ts->esp, 0xF1);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	game::sub_450F80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x787038, 4));
	fchs(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_401020(ts, mv);
	movzx(&ts->edx, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, 0x1);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_456FB4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_456FB4:
	push(mv, &ts->esp, 0xF3);
	game::sub_450F80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787024, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	push(mv, &ts->esp, 0xF4);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_450F80(ts, mv);
	fchs(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, 0xE4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787024, 4));
	push(mv, &ts->esp, 0x1);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45703D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x22);
	add(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + (ts->eax*4) + 0x204, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_45703D:
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C84, 2));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x787034, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x1C84, 2), ts->ax);
	game::sub_401020(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x787030, 4));
	movsx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_401020(ts, mv);
	movsx(&ts->edx, ts->ax);
	movsx(mv, &ts->eax, x86::mem(ts->ebx + 0x1C86, 2));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78702C, 4));
	mov(mv, &ts->edx, x86::mem(0x787028, 4));
	push(mv, &ts->esp, 0xF0);
	push(mv, &ts->esp, 0xEF);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1CA0, 4));
	mov(mv, x86::mem(ts->ebx + 0x1C86, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(0x787024, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1CA0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	imul(&ts->eax, ts->eax, 0x88);
	mov(&ts->ecx, ts->ebx);
	add(&ts->ecx, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esi + (ts->esi*2) + 0x75, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->edx, x86::mem(0x78702C, 4));
	mov(mv, &ts->ecx, x86::mem(0x787024, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, 0xEE);
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(0x787028, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C9C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x787044, 4));
	mov(mv, &ts->ecx, x86::mem(0x787040, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78700C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C88, 4));
	mov(mv, &ts->eax, x86::mem(0x787008, 4));
	mov(mv, &ts->ecx, x86::mem(0x787004, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C8C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(mv, &ts->ecx, x86::mem(0x787000, 4));
	imul(&ts->eax, ts->eax, 0x22);
	mov(mv, &ts->edx, x86::mem(0x786FFC, 4));
	add(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->eax*4) + 0x1E4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	imul(&ts->eax, ts->eax, 0x22);
	add(&ts->esp, 0xC);
	add(&ts->eax, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->eax*4) + 0x204, 4));
	push(mv, &ts->esp, 0x47C35000);
	push(mv, &ts->esp, 0x0);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	push(mv, &ts->esp, 0xE4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4572B6;
    }
	mov(mv, &ts->ecx, x86::mem(0x787050, 4));
	mov(mv, &ts->edx, x86::mem(0x78704C, 4));
	mov(mv, &ts->eax, x86::mem(0x787048, 4));
	push(mv, &ts->esp, 0xE9);
	push(mv, &ts->esp, 0xEA);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1CA4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1CA4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_457284;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x88);
	add(&ts->edx, ts->esi);
	mov(mv, &ts->al, x86::mem(ts->edx + (ts->ebx) + 0x20C, 1));
	cmp(&ts->eflags, ts->al, 0x25);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx) + 0x20C, 4));
	if (!ts->eflags.carry) {
        goto loc_457284;
    }
	inc(&ts->al);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	goto loc_45731D;

loc_457284:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45731D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	add(&ts->eax, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebx) + 0x20C, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_45731D;
    }
	dec(&ts->al);
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	goto loc_45731D;

loc_4572B6:
	mov(mv, &ts->ecx, x86::mem(0x787020, 4));
	mov(mv, &ts->edx, x86::mem(0x78701C, 4));
	mov(mv, &ts->eax, x86::mem(0x787018, 4));
	push(mv, &ts->esp, 0xE5);
	push(mv, &ts->esp, 0xE6);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C90, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C90, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(mv, &ts->eax, x86::mem(0x787014, 4));
	imul(&ts->edx, ts->edx, 0x22);
	mov(mv, &ts->ecx, x86::mem(0x787010, 4));
	add(&ts->edx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->edx*4) + 0x1EC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	add(&ts->esp, 0xC);

loc_45731D:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ebx + 0x1C84, 2));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C390(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2C, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	fchs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	if (ts->eflags.zero) {
        goto loc_457384;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->edx, ts->edx, 0x88);
	mov(mv, &ts->al, x86::mem(ts->edx + (ts->ebx) + 0x1A0, 1));
	goto loc_457397;

loc_457384:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->ebx) + 0x1A1, 1));

loc_457397:
	movzx(&ts->eax, ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4573DA;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_457445;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C5C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x827B88);
	game::sub_432490(ts, mv);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BAF90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	goto loc_457402;

loc_4573DA:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C78, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BAF90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));

loc_457402:
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));

loc_457445:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x20, 1));
	imul(&ts->edx, ts->edx, 0x88);
	add(&ts->edx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->esi*2), 4));
	if (ts->eflags.zero) {
        goto loc_45748C;
    }
	shl(&ts->eax, 0x2);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax) + 0x1B4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax) + 0x1B4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax) + 0x1B8, 4));
	goto loc_4574B4;

loc_45748C:
	shl(&ts->eax, 0x2);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax) + 0x1CC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax) + 0x1CC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax) + 0x1D0, 4));

loc_4574B4:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	game::sub_449520(ts, mv);
	goto def_4569E2;

loc_4574C9:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1CC4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4574DF;
    }
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x1CC4, 4), ts->ecx);
	goto def_4569E2;

loc_4574DF:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x1CD4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto def_4569E2;
    }
	sub(&ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_457500;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_457500;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_457500;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_457505;

loc_457500:
	mov(&ts->edi, 0x1);

loc_457505:
	push(mv, &ts->esp, 0xE4);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	mov(mv, x86::mem(0x828648, 1), 0x0);
	game::sub_571A00(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_457827;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x88);
	mov(&ts->ecx, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	add(&ts->edx, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*2) + 0x213, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	add(&ts->edx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ecx), 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x212, 1));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->edx + 0x214, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + (ts->ebx), 1));
	mov(mv, x86::mem(0x828648, 1), 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	game::sub_442120(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_442280(ts, mv);
	push(mv, &ts->esp, 0xF2);
	game::sub_450F80(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, 0x3F800000);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0xBF800000);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	push(mv, &ts->esp, 0xF1);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	game::sub_450F80(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x3F800000);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0xBF800000);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78700C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(0x787008, 4));
	mov(mv, &ts->eax, x86::mem(0x787004, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0xE8);
	push(mv, &ts->esp, 0xE7);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C8C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3DCCCCCD);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x44, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	game::sub_4422D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x58, 4));
	game::sub_442180(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x68, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	add(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ecx + (ts->ebx) + 0x212, 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x64, 4));
	imul(&ts->edx, ts->edx, 0x88);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	add(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->edx + (ts->ebx), 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0xF4);
	mov(mv, x86::mem(ts->ecx + (ts->ebx) + 0x214, 1), ts->al);
	game::sub_450F80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x48, 4));
	imul(&ts->edx, ts->edx, 0x88);
	fchs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	add(&ts->edx, ts->esi);
	movzx(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx) + 0x210, 1));
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->ebx) + 0x210, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x3F800000);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0xF3);
	mov(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_450F80(ts, mv);
	fchs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x44);
	add(&ts->esp, 0x10);
	add(&ts->ecx, ts->esi);
	movzx(mv, &ts->edx, x86::mem(ts->ebx + (ts->ecx*2) + 0x218, 1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->ecx*2) + 0x218, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edx);
	push(mv, &ts->esp, 0x3F800000);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	add(&ts->esp, 0xC);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x787058, 4));
	mov(mv, &ts->edx, x86::mem(0x787054, 4));
	push(mv, &ts->esp, 0xED);
	push(mv, &ts->esp, 0xEE);
	mov(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(0x78705C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1CAC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_443AC0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1CAC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ebx) + 0x21C, 4));
	goto loc_457910;

loc_457827:
	push(mv, &ts->esp, 0xF5);
	game::sub_450F80(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	push(mv, &ts->esp, 0xF6);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_450F80(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->eax, ts->eax, 0x22);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->edi), 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + (ts->esi*4) + 0x1FC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + (ts->esi*4) + 0x1F4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + (ts->esi*4) + 0x1F4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_401090(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C30, 4));
	mov(mv, &ts->eax, x86::mem(0x78705C, 4));
	imul(&ts->edx, ts->edx, 0x22);
	mov(mv, &ts->ecx, x86::mem(0x787058, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0xEB);
	push(mv, &ts->esp, 0xEC);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edx, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + (ts->edx*4) + 0x1FC, 4));
	mov(mv, &ts->edx, x86::mem(0x787054, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1CA8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_443AC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C30, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1CA8, 4));
	add(&ts->ecx, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ebx) + 0x20E, 4));

loc_457910:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	game::__ftol2(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi, 1));
	add(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_457928;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457932;

loc_457928:
	cmp(&ts->eflags, ts->eax, 0x64);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457932;
    }
	mov(&ts->eax, 0x64);

loc_457932:
	mov(mv, x86::mem(ts->esi, 1), ts->al);

def_4569E2:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C34, 4), 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45794B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_443270(ts, mv);

loc_45794B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3F4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_772240:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x328, 4));
	goto sub_5E0BF0;

SEH_44D420:
	mov(&ts->eax, 0x7DE4C0);
	goto ___CxxFrameHandler;
}

void sub_457A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_457A3B;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_455C80(ts, mv);
	mov(mv, x86::mem(0x828644, 4), 0x1);

locret_457A3B:
	retn(mv, &ts->esp);
}

void sub_457A40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_457A5B;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_455C80(ts, mv);
	mov(mv, x86::mem(0x828644, 4), 0x0);

locret_457A5B:
	retn(mv, &ts->esp);
}

void sub_457A60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->esi, ts->esi);
	game::sub_43E910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_457A9A;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_457A9A:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_457AA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->esi, ts->esi);
	game::sub_43E910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_457ADA;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto sub_440820;

loc_457ADA:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_457AE0(x86::thread_state* ts, x86::memory_view* mv) {
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	if (ts->eflags.zero) {
        goto loc_457AF9;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_457AF9:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_457B00(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_457B1B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));

loc_457B1B:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B2A;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));

loc_457B2A:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B39;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));

loc_457B39:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B48;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));

loc_457B48:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B57;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));

loc_457B57:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B66;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));

loc_457B66:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B75;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));

loc_457B75:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x50, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_457B84;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x50, 4));

loc_457B84:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_457B93;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));

locret_457B93:
	retn(mv, &ts->esp);
}

void sub_457BA0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x156A8, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_457BB8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xE4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_457BB8;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_457BB8:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_457BC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7EDD88);
	mov(&ts->ecx, 0x82C5A8);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD90);
	mov(&ts->ecx, 0x82C660);
	mov(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD98);
	mov(&ts->ecx, 0x82C590);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDA0);
	mov(&ts->ecx, 0x82C520);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_457C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457C20;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457C2A;

loc_457C20:
	cmp(&ts->eflags, ts->eax, 0x4B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457C2A;
    }
	mov(&ts->eax, 0x4B);

loc_457C2A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457C3B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457C47;

loc_457C3B:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457C47;
    }
	mov(&ts->eax, 0x7FFF);

loc_457C47:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457C56;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457C62;

loc_457C56:
	cmp(&ts->eflags, ts->eax, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457C62;
    }
	mov(&ts->eax, 0x1FFF);

loc_457C62:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457C71;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457C7D;

loc_457C71:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457C7D;
    }
	mov(&ts->eax, 0xFFFF);

loc_457C7D:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5A8);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457CB1;
    }
	push(mv, &ts->esp, 0x7EDD88);
	mov(&ts->ecx, 0x82C5A8);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5A8);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_457CB1:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_457CC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457CD0;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457CDA;

loc_457CD0:
	cmp(&ts->eflags, ts->eax, 0x4B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457CDA;
    }
	mov(&ts->eax, 0x4B);

loc_457CDA:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457CEB;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457CF7;

loc_457CEB:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457CF7;
    }
	mov(&ts->eax, 0x7FFF);

loc_457CF7:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457D06;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457D12;

loc_457D06:
	cmp(&ts->eflags, ts->eax, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457D12;
    }
	mov(&ts->eax, 0x1FFF);

loc_457D12:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457D21;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457D2D;

loc_457D21:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457D2D;
    }
	mov(&ts->eax, 0xFFFF);

loc_457D2D:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C660);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457D61;
    }
	push(mv, &ts->esp, 0x7EDD90);
	mov(&ts->ecx, 0x82C660);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C660);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_457D61:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_457D70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7EDDA8);
	mov(&ts->ecx, 0x82C6BC);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDB0);
	mov(&ts->ecx, 0x82C5B0);
	mov(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDB8);
	mov(&ts->ecx, 0x82C5A0);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDC0);
	mov(&ts->ecx, 0x82C5C8);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDC8);
	mov(&ts->ecx, 0x82C500);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDD0);
	mov(&ts->ecx, 0x82C558);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDD8);
	mov(&ts->ecx, 0x82C550);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDE0);
	mov(&ts->ecx, 0x82C508);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDE8);
	mov(&ts->ecx, 0x82C72C);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDDF0);
	mov(&ts->ecx, 0x82C5D8);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_457E20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_457E70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457E80;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457E8A;

loc_457E80:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457E8A;
    }
	mov(&ts->eax, 0x2);

loc_457E8A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457E9B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457EA7;

loc_457E9B:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457EA7;
    }
	mov(&ts->eax, 0x7FFF);

loc_457EA7:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457EB6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457EC2;

loc_457EB6:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457EC2;
    }
	mov(&ts->eax, 0xFFFF);

loc_457EC2:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457ED1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457EDB;

loc_457ED1:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457EDB;
    }
	mov(&ts->eax, 0x1);

loc_457EDB:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6BC);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457F0F;
    }
	push(mv, &ts->esp, 0x7EDDA8);
	mov(&ts->ecx, 0x82C6BC);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6BC);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_457F0F:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_457F20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457F30;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457F3C;

loc_457F30:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457F3C;
    }
	mov(&ts->eax, 0x7FFF);

loc_457F3C:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFE000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457F53;
    }
	mov(&ts->eax, 0xFFFFE000);
	goto loc_457F5F;

loc_457F53:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457F5F;
    }
	mov(&ts->eax, 0x2000);

loc_457F5F:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457F6E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457F78;

loc_457F6E:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457F78;
    }
	mov(&ts->eax, 0x1);

loc_457F78:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457F8B;
    }
	mov(&ts->eax, 0x1);
	goto loc_457F95;

loc_457F8B:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457F95;
    }
	mov(&ts->eax, 0x2);

loc_457F95:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457FA4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457FB0;

loc_457FA4:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457FB0;
    }
	mov(&ts->eax, 0x7FFF);

loc_457FB0:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457FBF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_457FCB;

loc_457FBF:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_457FCB;
    }
	mov(&ts->eax, 0xFFFF);

loc_457FCB:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C558);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_457FFF;
    }
	push(mv, &ts->esp, 0x7EDDD0);
	mov(&ts->ecx, 0x82C558);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C558);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_457FFF:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_458010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458020;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45802C;

loc_458020:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45802C;
    }
	mov(&ts->eax, 0x7FFF);

loc_45802C:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45803D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458049;

loc_45803D:
	cmp(&ts->eflags, ts->eax, 0x2328);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458049;
    }
	mov(&ts->eax, 0x2328);

loc_458049:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458058;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458064;

loc_458058:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458064;
    }
	mov(&ts->eax, 0xFFFF);

loc_458064:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458073;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45807D;

loc_458073:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45807D;
    }
	mov(&ts->eax, 0x10);

loc_45807D:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45808C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458096;

loc_45808C:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458096;
    }
	mov(&ts->eax, 0x7F);

loc_458096:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5D8);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4580CA;
    }
	push(mv, &ts->esp, 0x7EDDF0);
	mov(&ts->ecx, 0x82C5D8);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5D8);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_4580CA:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4580E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7399E0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);
}

void sub_458100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7EDE10);
	mov(&ts->ecx, 0x82C598);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7EDE18);
	mov(&ts->ecx, 0x82C538);
	mov(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDE20);
	mov(&ts->ecx, 0x82C680);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDE28);
	mov(&ts->ecx, 0x82C568);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDE30);
	mov(&ts->ecx, 0x82C648);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_458160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	goto sub_734E60;
}

void sub_458190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4581A1;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

locret_4581A1:
	retn(mv, &ts->esp);
}

void sub_4581B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7EDD50);
	mov(&ts->ecx, 0x82C540);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD58);
	mov(&ts->ecx, 0x82C6B4);
	mov(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD68);
	mov(&ts->ecx, 0x82C548);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD70);
	mov(&ts->ecx, 0x82C530);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD78);
	mov(&ts->ecx, 0x82C4F8);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDD80);
	mov(&ts->ecx, 0x82C668);
	or_(&ts->esi, ts->eax);
	game::sub_735840(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_458230(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458240;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_458240:
	cmp(&ts->eflags, ts->eax, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45824C;
    }
	mov(&ts->eax, 0x1FFF);

loc_45824C:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_458260(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458270;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45827A;

loc_458270:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45827A;
    }
	mov(&ts->eax, 0x5);

loc_45827A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45828B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458297;

loc_45828B:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458297;
    }
	mov(&ts->eax, 0x7FFF);

loc_458297:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4582A6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4582B2;

loc_4582A6:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4582B2;
    }
	mov(&ts->eax, 0x2000);

loc_4582B2:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4582C1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4582CD;

loc_4582C1:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4582CD;
    }
	mov(&ts->eax, 0xFFFF);

loc_4582CD:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4582DC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4582E8;

loc_4582DC:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4582E8;
    }
	mov(&ts->eax, 0x400);

loc_4582E8:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4582F7;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458303;

loc_4582F7:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458303;
    }
	mov(&ts->eax, 0x2710);

loc_458303:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6E0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458337;
    }
	push(mv, &ts->esp, 0x7EDE08);
	mov(&ts->ecx, 0x82C6E0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6E0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_458337:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_458340(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8704, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_458351;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x870C, 4));
	retn(mv, &ts->esp);

loc_458351:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_458360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458370;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45837A;

loc_458370:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45837A;
    }
	mov(&ts->eax, 0x10);

loc_45837A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45838B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458395;

loc_45838B:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458395;
    }
	mov(&ts->eax, 0x7F);

loc_458395:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4583A4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4583B0;

loc_4583A4:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4583B0;
    }
	mov(&ts->eax, 0x7FFF);

loc_4583B0:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4583BF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4583CB;

loc_4583BF:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4583CB;
    }
	mov(&ts->eax, 0x2000);

loc_4583CB:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4583DA;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4583E6;

loc_4583DA:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4583E6;
    }
	mov(&ts->eax, 0x10000);

loc_4583E6:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4583F5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458401;

loc_4583F5:
	cmp(&ts->eflags, ts->eax, 0xFA0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458401;
    }
	mov(&ts->eax, 0xFA0);

loc_458401:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5E0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458435;
    }
	push(mv, &ts->esp, 0x7EDDF8);
	mov(&ts->ecx, 0x82C5E0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5E0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_458435:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_458440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458450;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45845A;

loc_458450:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45845A;
    }
	mov(&ts->eax, 0x10);

loc_45845A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45846B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458475;

loc_45846B:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458475;
    }
	mov(&ts->eax, 0x7F);

loc_458475:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458484;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_458490;

loc_458484:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_458490;
    }
	mov(&ts->eax, 0x7FFF);

loc_458490:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45849F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4584AB;

loc_45849F:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4584AB;
    }
	mov(&ts->eax, 0x2000);

loc_4584AB:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4584BA;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4584C6;

loc_4584BA:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4584C6;
    }
	mov(&ts->eax, 0x10000);

loc_4584C6:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4584D5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4584E1;

loc_4584D5:
	cmp(&ts->eflags, ts->eax, 0xFA0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4584E1;
    }
	mov(&ts->eax, 0xFA0);

loc_4584E1:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5D0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458515;
    }
	push(mv, &ts->esp, 0x7EDE00);
	mov(&ts->ecx, 0x82C5D0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5D0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_458515:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_458520(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_45855A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x17);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458542;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_45855A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	jmp(x86::mem(ts->edx + 0xC, 4));

loc_458542:
	cmp(&ts->eflags, ts->eax, 0x5E);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_45855A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_45855A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0xFFFFFFE9);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	jmp(x86::mem(ts->edx + 0xC, 4));

locret_45855A:
	retn(mv, &ts->esp, 0x4);
}

void sub_458560(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_458595;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x17);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458582;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_458595;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	jmp(x86::mem(ts->edx + 0x10, 4));

loc_458582:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_458595;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0xFFFFFFE9);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	jmp(x86::mem(ts->edx + 0x10, 4));

locret_458595:
	retn(mv, &ts->esp, 0x4);
}

void sub_4585A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edx, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 1), ts->dl);
	mov(mv, x86::mem(ts->eax, 4), 0x789CF0);
	mov(mv, x86::mem(ts->eax + 0x98, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xDC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x13, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x14, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x15, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x60, 4), 0x789CE8);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0xA8, 4));
	mov(&ts->esi, 0x9);

loc_458628:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45862E;
    }
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);

loc_45862E:
	add(&ts->edx, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_458628;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x12, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x11, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x78, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x74, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD0, 4), ts->ecx);
	mov(mv, x86::mem(0x82BA30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x7C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x80, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xA4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_458680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789CF0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4586BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);

loc_4586BB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4586CB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);

loc_4586CB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4586E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edi);

loc_4586E1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4586FA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edi);

loc_4586FA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_458713;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->edi);

loc_458713:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45872C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->edi);

loc_45872C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_458745;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->edi);

loc_458745:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x44, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45877C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_6F695C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_6F72A1(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->ebx);
	game::nullsub_14(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);

loc_45877C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_4587A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7ED0DC);
	mov(&ts->ecx, 0x82C6AC);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED0E4);
	mov(&ts->ecx, 0x82C560);
	mov(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED0EC);
	mov(&ts->ecx, 0x82C588);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED0F4);
	mov(&ts->ecx, 0x82C650);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED0FC);
	mov(&ts->ecx, 0x82C5B8);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED104);
	mov(&ts->ecx, 0x82C658);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED10C);
	mov(&ts->ecx, 0x82C604);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED114);
	mov(&ts->ecx, 0x82C580);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED11C);
	mov(&ts->ecx, 0x82C5C0);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED124);
	mov(&ts->ecx, 0x82C640);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_458850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_458879;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xA8, 4));
	mov(&ts->edi, 0x9);

loc_458866:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_458871;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_458871:
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_458866;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_458879:
	retn(mv, &ts->esp);
}

void sub_458880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x8, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_458890(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x118);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x128, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F7C1B(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F75DD(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_6F76E9(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4588D9;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F879A(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x118);
	retn(mv, &ts->esp);

loc_4588D9:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x50);
	game::sub_6F86AD(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45894F;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F7C1B(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F75DD(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_6F76E9(ts, mv);
	add(&ts->esp, 0x2C);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_45894F;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F879A(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x10);

loc_45894F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x118);
	retn(mv, &ts->esp);
}

void sub_458960(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	mov(mv, x86::mem(0x82B910, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(0x82B91C, 1), ts->cl);
	retn(mv, &ts->esp);
}

void sub_458980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x7EC854, 4), ts->eax);
	goto loc_458990;

loc_458990:
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_4589B3;
    }
	mov(mv, &ts->eax, x86::mem(0x82B068, 4));
	mov(mv, &ts->ecx, x86::mem(0x7EC854, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4) + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4589B3;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_734E70(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4589B3:
	retn(mv, &ts->esp);
}

void sub_4589C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B920, 4));
	if (ts->eflags.zero) {
        goto loc_458A39;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_458A0B;
    }
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B920, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B918, 4));
	mov(mv, &ts->edx, x86::mem(0x82B920, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	mov(mv, x86::mem(0x82B918, 4), ts->eax);
	mov(mv, x86::mem(0x82B91C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	retn(mv, &ts->esp);

loc_458A0B:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82C6D4);
	game::sub_457A60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82B920, 4));
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->eax);
	inc(mv, x86::mem(0x82B918, 4));
	mov(mv, &ts->eax, x86::mem(0x82B920, 4));
	mov(mv, x86::mem(0x82B91C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	retn(mv, &ts->esp);

loc_458A39:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	retn(mv, &ts->esp);
}

void sub_458A40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(0x82B918, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x28, 4));
	if (!ts->eflags.zero) {
        goto loc_458A97;
    }
	game::sub_72153F(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_458A96;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x82B0AC);
	nop();

loc_458A60:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_458A8A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_458A8A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B918, 4));
	add(&ts->esp, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(0x82B918, 4), ts->eax);

loc_458A8A:
	add(&ts->esi, 0x2C);
	cmp(&ts->eflags, ts->esi, 0x82B62C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_458A60;
    }
	pop(mv, &ts->esp, ts->esi);

locret_458A96:
	retn(mv, &ts->esp);

loc_458A97:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(0x82B91C, 1));
	if (!ts->eflags.zero) {
        goto loc_458B16;
    }
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto locret_458A96;
    }
	game::sub_457D70(ts, mv);
	game::sub_458100(ts, mv);
	game::sub_4581B0(ts, mv);
	push(mv, &ts->esp, 0x7EDE08);
	mov(&ts->ecx, 0x82C6E0);
	game::sub_735840(ts, mv);
	game::sub_457BC0(ts, mv);
	push(mv, &ts->esp, 0x7EDDF8);
	mov(&ts->ecx, 0x82C5E0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, 0x7EDE00);
	mov(&ts->ecx, 0x82C5D0);
	game::sub_735840(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B910, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_458B0E;
    }
	mov(mv, &ts->edx, x86::mem(0x82B914, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82B910, 4), 0x0);
	mov(mv, x86::mem(0x82B914, 4), 0x0);

loc_458B0E:
	mov(mv, x86::mem(0x82B91C, 1), 0x0);
	retn(mv, &ts->esp);

loc_458B16:
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto locret_458A96;
    }
	goto sub_721515;
}

void sub_458B30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_458B86;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_458B61;
    }
	game::sub_735550(ts, mv);

loc_458B61:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ebx);

loc_458B86:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x789D00);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x14);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_458C26;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5B0);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_458C10;
    }
	push(mv, &ts->esp, 0x7EDDB0);
	mov(&ts->ecx, 0x82C5B0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5B0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_458C10:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_458C26:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_458C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_458C4E;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1);

locret_458C4E:
	retn(mv, &ts->esp);
}

void sub_458C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77228B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_458D17;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xE4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_458D17;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_458CA2;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_458CA2:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_458D17;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(&ts->eax, ts->edi);
	sar(&ts->eax, 0xF);
	push(mv, &ts->esp, 0x14);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x789D10);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_458CF6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_457CC0(ts, mv);
	goto loc_458CF8;

loc_458CF6:
	xor_(&ts->eax, ts->eax);

loc_458CF8:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_458D10;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_45FA60(ts, mv);

loc_458D10:
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x0);

loc_458D17:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_772280:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_458D50:
	mov(&ts->eax, 0x7DE758);
	goto ___CxxFrameHandler;
}

void sub_458D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x16);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_458D46;
    }
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(0x7EC8F0, 4));
	retn(mv, &ts->esp, 0x4);

loc_458D46:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_458D50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77228B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_458E14;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_458E14;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_458D9F;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_458D9F:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_458E14;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(&ts->eax, ts->edi);
	sar(&ts->eax, 0xF);
	push(mv, &ts->esp, 0x14);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x789D40);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_458DF3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_457C10(ts, mv);
	goto loc_458DF5;

loc_458DF3:
	xor_(&ts->eax, ts->eax);

loc_458DF5:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_458E0D;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_45FA60(ts, mv);

loc_458E0D:
	mov(mv, x86::mem(ts->ebp + 0x20, 4), 0x0);

loc_458E14:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_772280:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_458D50:
	mov(&ts->eax, 0x7DE758);
	goto ___CxxFrameHandler;
}

void sub_458E30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_458E46;
    }
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(0x7EC860, 4));
	retn(mv, &ts->esp, 0x4);

loc_458E46:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_458E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ECB38);
	retn(mv, &ts->esp);
}

void sub_458E60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECB3C, 4));
	retn(mv, &ts->esp);
}

void sub_458E70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_458EC9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_458EA4;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_458EA1;
    }
	mov(mv, &ts->eax, x86::mem(0x7ECB14, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, 0x7ECB14);
	if (ts->eflags.zero) {
        goto loc_458EA1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));

loc_458E92:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_458EF2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_458E92;
    }

loc_458EA1:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_458EA4:
	mov(mv, &ts->eax, x86::mem(0x7ECAE4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, 0x7ECAE4);
	if (ts->eflags.zero) {
        goto loc_458EA1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));

loc_458EB7:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_458EF2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_458EB7;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_458EC9:
	mov(mv, &ts->eax, x86::mem(0x7ECAA8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, 0x7ECAA8);
	if (ts->eflags.zero) {
        goto loc_458EA1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_458EE0:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_458EF2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_458EE0;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_458EF2:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_458F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x1F);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_458F11;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x458F34, 1));
	jmp(x86::mem(0x458F28, 4));

loc_458F18:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_458F1E:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

def_458F11:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_458F60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ECB58);
	retn(mv, &ts->esp);
}

void sub_458F70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECB5C, 4));
	retn(mv, &ts->esp);
}

void sub_458F80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(&ts->ecx, 0x3F800000);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(&ts->bl, 0x1);
	goto loc_458FA0;

loc_458FA0:
	mov(mv, x86::mem(ts->edx, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x5C, 1), ts->bl);
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->ecx, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_458FA0;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x3C, 4));
	goto loc_458FC0;

loc_458FC0:
	mov(mv, x86::mem(ts->edx, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x68, 1), ts->bl);
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_458FC0;
    }
	mov(&ts->ecx, 0x3FE6);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_458FE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ECB68);
	retn(mv, &ts->esp);
}

void sub_458FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECB6C, 4));
	retn(mv, &ts->esp);
}

void sub_459000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4591E6;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x70, 4), 0x416028F6);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->edi + 0x60, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4591E6;
    }
	push(mv, &ts->esp, 0x789DA0);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_459093;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789D9C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4591E6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	game::sub_5EC0B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4591E6;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_401B20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_459093:
	push(mv, &ts->esp, 0x789D90);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459173;
    }
	push(mv, &ts->esp, 0x789D88);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459173;
    }
	push(mv, &ts->esp, 0x789D78);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459173;
    }
	push(mv, &ts->esp, 0x789D68);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459173;
    }
	push(mv, &ts->esp, 0x789D60);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45915D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x430, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xC0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	goto loc_4591D6;

loc_45915D:
	push(mv, &ts->esp, 0x789D50);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_459173:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x5);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x430, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));

loc_4591D6:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4591E6;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_4591E6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4591F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), 0x0);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_459200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_459234;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x238, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459234;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), 0x1);
	setz(ts->eflags, &ts->dl);
	movzx(&ts->eax, ts->dl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	game::sub_5EB400(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_459234:
	mov(mv, x86::mem(ts->esi + 0xAC, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_459240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45924D;
    }
	jmp(x86::mem(0x45930C, 4));

loc_459254:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_459257:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_45925D:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

loc_459263:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp);

__RTC_NumErrors_0:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp);

__RTC_NumErrors_1:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);

loc_459275:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);

loc_45927B:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_459281:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp);

loc_459287:
	mov(&ts->eax, 0x9);
	retn(mv, &ts->esp);

loc_45928D:
	mov(&ts->eax, 0xA);
	retn(mv, &ts->esp);

loc_459293:
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp);

loc_459299:
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp);

loc_45929F:
	mov(&ts->eax, 0xD);
	retn(mv, &ts->esp);

loc_4592A5:
	mov(&ts->eax, 0xE);
	retn(mv, &ts->esp);

loc_4592AB:
	mov(&ts->eax, 0xF);
	retn(mv, &ts->esp);

loc_4592B1:
	mov(&ts->eax, 0x11);
	retn(mv, &ts->esp);

loc_4592B7:
	mov(&ts->eax, 0x13);
	retn(mv, &ts->esp);

loc_4592BD:
	mov(&ts->eax, 0x14);
	retn(mv, &ts->esp);

loc_4592C3:
	mov(&ts->eax, 0x15);
	retn(mv, &ts->esp);

loc_4592C9:
	mov(&ts->eax, 0x16);
	retn(mv, &ts->esp);

loc_4592CF:
	mov(&ts->eax, 0x17);
	retn(mv, &ts->esp);

loc_4592D5:
	mov(&ts->eax, 0x18);
	retn(mv, &ts->esp);

loc_4592DB:
	mov(&ts->eax, 0x19);
	retn(mv, &ts->esp);

loc_4592E1:
	mov(&ts->eax, 0x1A);
	retn(mv, &ts->esp);

loc_4592E7:
	mov(&ts->eax, 0x1C);
	retn(mv, &ts->esp);

loc_4592ED:
	mov(&ts->eax, 0x1D);
	retn(mv, &ts->esp);

loc_4592F3:
	mov(&ts->eax, 0x1E);
	retn(mv, &ts->esp);

loc_4592F9:
	mov(&ts->eax, 0x1F);
	retn(mv, &ts->esp);

loc_4592FF:
	mov(&ts->eax, 0x20);
	retn(mv, &ts->esp);

def_45924D:
	mov(&ts->eax, 0x12);
	retn(mv, &ts->esp);
}

void sub_459390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ECB28);
	retn(mv, &ts->esp);
}

void sub_4593A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECB2C, 4));
	retn(mv, &ts->esp);
}

void sub_4593B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_459240(ts, mv);
	add(&ts->esp, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x300, 4));
	push(mv, &ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4593EC;
    }
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x3);
	goto loc_459428;

loc_4593EC:
	push(mv, &ts->esp, 0x13);
	mov(&ts->ecx, ts->edi);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_459405;
    }
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x2);
	goto loc_459428;

loc_459405:
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, ts->edi);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45941E;
    }
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x1);
	goto loc_459428;

loc_45941E:
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x0);

loc_459428:
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_5995E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_459439;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_459443;

loc_459439:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_459443;
    }
	mov(&ts->eax, 0x3);

loc_459443:
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	game::sub_5995E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45945A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_459464;

loc_45945A:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_459464;
    }
	mov(&ts->eax, 0x3);

loc_459464:
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	game::sub_5995E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45947B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_459485;

loc_45947B:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_459485;
    }
	mov(&ts->eax, 0x3);

loc_459485:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	game::sub_5995E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45949C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4594A6;

loc_45949C:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4594A6;
    }
	mov(&ts->eax, 0x3);

loc_4594A6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->eax, x86::mem(0x7F2230, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	imul(&ts->eax, ts->eax, 0x4C);
	lea(mv, &ts->eax, x86::mem(ts->eax + 0x7F0DE0, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_459518;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_459518;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	imul(&ts->eax, ts->eax, 0x34);
	add(&ts->eax, 0x7F1AA8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_459518:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x84, 4), 0x7F1AA8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_459530(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), 0x200);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_459540(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_459550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4595C4;
    }
	sub(&ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_45959B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4595C4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xB4, 1), 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_459578;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_459578:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_459590;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_459590:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xBC, 4));
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0xC);

loc_45959B:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xC4, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4595BE;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4595BE:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC8, 4));

loc_4595C4:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0xC);
}

void sub_4595D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBEE0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4595FB;
    }
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4595FB:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_459600(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, ts->edi);
	xor_(&ts->esi, ts->esi);
	game::sub_592D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45961B;
    }
	mov(&ts->esi, 0x1);

loc_45961B:
	mov(&ts->ecx, ts->edi);
	game::sub_592D50(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_459629;
    }
	or_(&ts->esi, 0x2);

loc_459629:
	mov(&ts->ecx, ts->edi);
	game::sub_5A0160(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_459637;
    }
	or_(&ts->esi, 0x4);

loc_459637:
	mov(&ts->ecx, ts->edi);
	game::sub_592C60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_459645;
    }
	or_(&ts->esi, 0x8);

loc_459645:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_592C90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_459666;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459669;
    }

loc_459666:
	or_(&ts->esi, 0x10);

loc_459669:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_459680(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_592D50(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45969D;
    }
	mov(&ts->eax, 0x2);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_45969D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_592C90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4596D8;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4596D8;
    }
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4596D8:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4596E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_459760;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459760;
    }
	push(mv, &ts->esp, 0x18);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_459752;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_458010(ts, mv);
	goto loc_459754;

loc_459752:
	xor_(&ts->eax, ts->eax);

loc_459754:
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	inc(mv, x86::mem(0x82B94C, 4));

loc_459760:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_459770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_459817;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45978C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_459798;

loc_45978C:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_459798;
    }
	mov(&ts->eax, 0x7FFF);

loc_459798:
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4597AF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4597BB;

loc_4597AF:
	cmp(&ts->eflags, ts->eax, 0x2328);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4597BB;
    }
	mov(&ts->eax, 0x2328);

loc_4597BB:
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xDC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4597D2;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4597DE;

loc_4597D2:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4597DE;
    }
	mov(&ts->eax, 0xFFFF);

loc_4597DE:
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xE0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4597F5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4597FF;

loc_4597F5:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4597FF;
    }
	mov(&ts->eax, 0x7F);

loc_4597FF:
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_459817;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

locret_459817:
	retn(mv, &ts->esp);
}

void sub_459820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459852;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_459852;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_459854;
    }

loc_459852:
	xor_(&ts->al, ts->al);

loc_459854:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_459860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45986D;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_45986D:
	mov(mv, &ts->al, x86::mem(ts->eax + 0x1C, 1));
	retn(mv, &ts->esp);
}

void sub_459880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_459890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4598A9;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_4598A9:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_4598B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x128, 1));
	and_(&ts->al, 0x10);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x8);
	retn(mv, &ts->esp);
}

void sub_4598C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->ebx);
	xor_(&ts->edx, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));

loc_4598D3:
	mov(mv, x86::mem(ts->eax - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + (ts->edx) + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	inc(&ts->edx);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->edx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4598D3;
    }
	mov(mv, x86::mem(ts->ecx + 0x78, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4598F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4598FE;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x10);

loc_4598FE:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_45992A;
    }
	mov(mv, x86::mem(ts->edx, 4), 0x3C23D70A);

loc_45992A:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx*4) + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->eax*4) + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*4) + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->ecx + (ts->eax) + 0x4C, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x78, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_459964;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->edx);

loc_459964:
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->eax);
	retn(mv, &ts->esp, 0x10);
}

void sub_459970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_459990(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4599B1;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x3C23D70A);

loc_4599B1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 1), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), 0x0);
	retn(mv, &ts->esp, 0x10);
}

void sub_4599E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_459A31;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_459A1D;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_459A1D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 1), 0x0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_459A31:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 1), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_459A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_459A64;
    }
	mov(mv, &ts->eax, x86::mem(0x8900B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_459A64:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8900B8, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_459AAB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_459AAB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_459AC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_459AD1;
    }
	mov(mv, &ts->eax, x86::mem(0x8900B4, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_459AD1:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8900B8, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	mov(&ts->eax, ts->edi);
	if (!ts->eflags.parity) {
        goto loc_459B14;
    }
	mov(&ts->eax, ts->esi);

loc_459B14:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_459B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789DB0);
	mov(mv, &ts->eax, x86::mem(0x82AFA8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_440E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82AFA8, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_459B80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), 0x789DB4);
	mov(mv, x86::mem(ts->eax + 0x7C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x74, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x6C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x78, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x80, 1), 0x1);
	mov(mv, x86::mem(0x82B984, 4), ts->edx);
	mov(mv, x86::mem(0x82B974, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	mov(mv, x86::mem(0x82B9C0, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xA5, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xA6, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x8C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC8, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x6C, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->eax + 0x74, 4), 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x78, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x80, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x7C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->edx);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x84, 4));
	xor_(&ts->ecx, ts->ecx);
	goto loc_459C20;

loc_459C20:
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	or_(&ts->esi, ts->ebx);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_459C20;
    }
	mov(&ts->ecx, ts->esi);
	and_(&ts->ecx, 0x7FF);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->esi);
	or_(&ts->ecx, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x94, 4), 0x1B);
	mov(mv, x86::mem(ts->eax + 0x98, 4), 0x1B);
	mov(mv, x86::mem(ts->eax + 0x9C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xD0, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xB0, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC9, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xA4, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_459CB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789DB4);
	mov(mv, &ts->eax, x86::mem(0x82B984, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_459CF2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82B984, 4), ts->edi);

loc_459CF2:
	mov(mv, &ts->eax, x86::mem(0x82B994, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_459D0A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82B994, 4), ts->edi);

loc_459D0A:
	cmp(mv, &ts->eflags, x86::mem(0x82B974, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_459D18;
    }
	mov(mv, x86::mem(0x82B974, 4), ts->edi);

loc_459D18:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_459D20;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);

loc_459D20:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_459D40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9A4, 4));
	imul(&ts->eax, ts->eax, 0x1C);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x7ECD4C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD38, 4));
	mov(&ts->edx, 0x1000000);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD3C, 4));
	mov(&ts->esi, 0x1);
	shl(&ts->esi, ts->cl);
	or_(&ts->edx, ts->esi);
	or_(&ts->edx, 0x10000000);
	push(mv, &ts->esp, ts->edx);
	game::sub_73AFD0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_459E00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->al, ts->al);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_459E22;
    }
	mov(mv, &ts->edx, x86::mem(0x82C6D4, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto locret_459E38;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82C6D8, 4));
	add(&ts->esi, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry) {
        goto locret_459E38;
    }

loc_459E22:
	mov(mv, &ts->ecx, x86::mem(0x8A329C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_459E36;
    }
	mov(mv, &ts->ecx, x86::mem(0x88EC68, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_459E38;
    }

loc_459E36:
	mov(&ts->al, 0x1);

locret_459E38:
	retn(mv, &ts->esp);
}

void sub_459E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);

loc_459E62:
	mov(mv, x86::mem(ts->eax - 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_459E62;
    }
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x124, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x170, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_459ED0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x171, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_459EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x171, 1), 0x0);
	retn(mv, &ts->esp);
}

void sub_459EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_459FE2;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x2, 4));
	imul(&ts->eax, ts->eax, 0x1C);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD40, 4));
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD38, 4));
	mov(&ts->edx, 0x1000000);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD3C, 4));
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x7D0);
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->ebp);
	or_(&ts->edx, ts->ebx);
	or_(&ts->edx, 0x10000000);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->edx);
	game::sub_721A6B(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4) + 0x14, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_459F71;
    }
	mov(mv, x86::mem(ts->eax + (ts->edi*4) + 0x14, 4), ts->esi);

loc_459F71:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x178, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_73AA10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_459FC7;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x24, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + (ts->edi*4) + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_459FDF;
    }
	mov(mv, x86::mem(ts->esi + (ts->edi*4) + 0x14, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_459FC7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x178, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	game::sub_73AE40(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);

loc_459FDF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_459FE2:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_459FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_459FFB;
    }
	jmp(ts->eax);

locret_459FFB:
	retn(mv, &ts->esp);
}

void sub_45A000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x18);
	mov(&ts->edi, 0x82B620);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->edx, 0x82A5DC);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);

loc_45A018:
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx - 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x14, 4), 0x0);
	add(&ts->edx, 0x28);
	cmp(&ts->eflags, ts->edx, 0x82A99C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A018;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x82BA24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x82BA28, 4), ts->eax);
	game::sub_721AAE(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x459FF0);
	game::sub_6F55F3(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	goto sub_6F8C2C;
}

void sub_45A080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_45A0B5;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_721AD0(ts, mv);
	push(mv, &ts->esp, 0x459FF0);
	game::sub_6F5688(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82BA24, 4), 0x0);
	mov(mv, x86::mem(0x82BA28, 4), 0x0);

locret_45A0B5:
	retn(mv, &ts->esp);
}

void sub_45A0C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x82A5E0);

loc_45A0D1:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A0DD;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A0FB;
    }
	goto loc_45A0EA;

loc_45A0DD:
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_45A0EA;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A0FB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx - 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_45A0FB;
    }

loc_45A0EA:
	add(&ts->ecx, 0x28);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x82A9A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A0D1;
    }
	mov(&ts->eax, 0xFFFFFFF8);

loc_45A0FB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45A100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->esi, ts->esi);
	game::sub_6F90EC(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_45A11C;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45A11C:
	mov(mv, &ts->eax, x86::mem(0x82BA18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A159;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x789DFC);
	call(ts, mv, ts->eax);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_45A159;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_6F8710(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F8738(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F879A(ts, mv);
	add(&ts->esp, 0x28);

loc_45A159:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45A160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));

loc_45A172:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_45A172;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x118, 4));
	push(mv, &ts->esp, ts->edi);
	sub(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0xFFFFFFFC);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x789E38);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x130, 4), 0xFFFFFFFF);
	game::_sprintf(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x124, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_45A0C0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A1E6;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x82A5E0);
	mov(&ts->edi, ts->edi);

loc_45A1C0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A1E2;
    }
	add(&ts->ecx, 0x28);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x82A9A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A1C0;
    }

loc_45A1D1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x11C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);

loc_45A1E2:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A1D1;
    }

loc_45A1E6:
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(0x82A5D8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A28D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A216;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_45A100(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);

loc_45A216:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A1D1;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_721BA3(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A28D;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_45A277;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_721B27(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA1C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A260;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);
	goto loc_45A277;

loc_45A260:
	mov(mv, &ts->eax, x86::mem(0x819B0C, 4));
	test(&ts->eflags, ts->ah, 0x2);
	if (ts->eflags.zero) {
        goto loc_45A277;
    }
	push(mv, &ts->esp, 0x789E08);
	game::nullsub_11(ts, mv);
	add(&ts->esp, 0x4);

loc_45A277:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x11C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);

loc_45A28D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_45A2A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_45A0C0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A2BA;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_45A2BA:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(0x82A5DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(0x82A5D8, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A32F;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_721C4D(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A306;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A2EF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->eax);
	goto loc_45A303;

loc_45A2EF:
	mov(mv, &ts->eax, x86::mem(0x819B0C, 4));
	test(&ts->eflags, ts->ah, 0x2);
	if (ts->eflags.zero) {
        goto loc_45A306;
    }
	push(mv, &ts->esp, 0x789E44);
	game::nullsub_11(ts, mv);

loc_45A303:
	add(&ts->esp, 0x4);

loc_45A306:
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0xFFFFFFFF);

loc_45A32F:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45A340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	or_(&ts->ebx, 0xFFFFFFFF);
	mov(&ts->edi, 0x7FFFFFF);
	xor_(&ts->edx, ts->edx);
	push(mv, &ts->esp, ts->ebp);

loc_45A352:
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x82A5E0);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_45A360:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A399;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A3A6;
    }

loc_45A36A:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A38D;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx*4), 4));
	lea(mv, &ts->eax, x86::mem(0x82A5D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A387;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A387;
    }
	mov(&ts->edi, ts->eax);
	mov(&ts->ebx, ts->edx);

loc_45A387:
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x18);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A352;
    }

loc_45A38D:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_45A3B3;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45A399:
	cmp(&ts->eflags, ts->ebp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_45A3A6;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A36A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax - 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_45A36A;
    }

loc_45A3A6:
	add(&ts->eax, 0x28);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x82A9A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A360;
    }
	goto loc_45A38D;

loc_45A3B3:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_45A2A0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45A3D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->esi, x86::mem(0x70, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45A3F3;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_721D90(ts, mv);
	add(&ts->esp, 0x8);
	add(&ts->esi, ts->eax);

loc_45A3F3:
	mov(&ts->ecx, ts->esi);
	mov(&ts->eax, ts->esi);
	and_(&ts->ecx, 0xF);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45A410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_45A43D;
    }
	cmp(&ts->eflags, ts->eax, 0x18);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_45A43D;
    }
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_45A43D;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x64, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto locret_45A43D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);

locret_45A43D:
	retn(mv, &ts->esp);
}

void sub_45A440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A455;
    }
	mov(&ts->eax, 0xFFFFFFF8);
	retn(mv, &ts->esp);

loc_45A455:
	mov(mv, x86::mem(ts->eax + 0x65, 1), 0x1);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_45A460(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	game::sub_6F5722(ts, mv);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	game::sub_6F57A1(ts, mv);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	add(&ts->esp, 0x8);
	goto __ftol2;
}

void sub_45A4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A4B3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	retn(mv, &ts->esp);

loc_45A4B3:
	mov(&ts->eax, 0xFFFFFFF8);
	retn(mv, &ts->esp);
}

void sub_45A4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A4D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	retn(mv, &ts->esp);

loc_45A4D3:
	mov(&ts->eax, 0xFFFFFFF8);
	retn(mv, &ts->esp);
}

void sub_45A4E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_722D95(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A526;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_45A526:
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_72209F(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_45A550(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722ECE(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A580;
    }
	game::sub_721FA7(ts, mv);
	xor_(&ts->al, ts->al);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_45A580:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_722DB5(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0x2);
	setz(ts->eflags, &ts->al);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_45A5A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A5B0;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45A5BA;

loc_45A5B0:
	cmp(&ts->eflags, ts->eax, 0x64);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45A5BA;
    }
	mov(&ts->eax, 0x64);

loc_45A5BA:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A5CC;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0xFFFFFFFB);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_45A5CC:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	imul(&ts->ecx, ts->ecx, 0x7F);
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	sar(&ts->edx, 0x5);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_72209F(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->esi, ts->eax);
	game::sub_721FA7(ts, mv);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	setnl(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	dec(&ts->eax);
	and_(&ts->eax, 0xFFFFFFFD);
	retn(mv, &ts->esp, 0x8);
}

void sub_45A610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	goto sub_721FA7;
}

void sub_45A630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45A672;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_7227CB(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_43BDF0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esi, 0x14);
	game::sub_43BDF0(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_45A665;
    }

loc_45A657:
	game::sub_6F56BD(ts, mv);
	game::sub_43BDF0(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_45A657;
    }

loc_45A665:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_722AC0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);

loc_45A672:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_45A680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7ED01C);
	mov(&ts->ecx, 0x82C570);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED024);
	mov(&ts->ecx, 0x82C578);
	mov(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED02C);
	mov(&ts->ecx, 0x82C528);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	push(mv, &ts->esp, 0x7ED034);
	mov(&ts->ecx, 0x82C518);
	or_(&ts->esi, ts->eax);
	game::sub_735800(ts, mv);
	or_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45A6D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C570);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A716;
    }
	push(mv, &ts->esp, 0x7ED01C);
	mov(&ts->ecx, 0x82C570);
	game::sub_735800(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C570);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_45A716:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_45A720(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C578);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A766;
    }
	push(mv, &ts->esp, 0x7ED024);
	mov(&ts->ecx, 0x82C578);
	game::sub_735800(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C578);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_45A766:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_45A770(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C518);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45A7B2;
    }
	push(mv, &ts->esp, 0x7ED034);
	mov(&ts->ecx, 0x82C518);
	game::sub_735800(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C518);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_45A7B2:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_45A7C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	dec(&ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45A83E;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A90E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A90E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45A90E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A90E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	add(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734E70(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_4587A0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_736020(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	goto loc_45A90E;

loc_45A83E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A894;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45A894;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A894;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	add(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734E70(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_4587A0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_736020(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);

loc_45A894:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A8EA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45A8EA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45A8EA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	add(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734E70(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_45A680(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_736020(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);

loc_45A8EA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A8FC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A9A7;
    }

loc_45A8FC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A90E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45A9A7;
    }

loc_45A90E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	game::sub_735A50(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x4);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45A92F;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_45A935;

loc_45A92F:
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);

loc_45A935:
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45A962;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);

loc_45A962:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebp);
	game::sub_735A60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_45A99B;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A988;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));

loc_45A988:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A9A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45A99B:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45A9A4;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));

loc_45A9A4:
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);

loc_45A9A7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45A9B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_45AA0A;
    }
	game::sub_736260(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_45A9E4;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45A9D5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_45A9D5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45A9EE;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	goto loc_45A9EE;

loc_45A9E4:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45A9EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_45A9EE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45AA07;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);

loc_45AA07:
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);

loc_45AA0A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45AA10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C938);
	game::_vsprintf(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_45AA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	shl(&ts->ecx, 0x18);
	add(&ts->ecx, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	dec(&ts->edx);
	mov(&ts->eax, ts->edx);
	sar(&ts->eax, 0x1);
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x4);
	mov(mv, &ts->esi, x86::mem(ts->esi + (ts->edi) + 0x58, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AA84;
    }
	nop();

loc_45AA60:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45AA84;
    }
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_45AA84;
    }
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_45AA70;
    }
	mov(&ts->ebx, ts->eax);
	goto loc_45AA72;

loc_45AA70:
	mov(&ts->edx, ts->eax);

loc_45AA72:
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx), 4));
	sar(&ts->eax, 0x1);
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x4);
	mov(mv, &ts->esi, x86::mem(ts->esi + (ts->edi) + 0x58, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AA60;
    }

loc_45AA84:
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x4);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + (ts->edi) + 0x58, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AAAB;
    }
	mov(&ts->eax, ts->ebx);
	shl(&ts->eax, 0x4);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->edi) + 0x58, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AA9E;
    }
	mov(&ts->eax, ts->ebx);
	goto loc_45AAAB;

loc_45AA9E:
	mov(&ts->eax, ts->edx);
	shl(&ts->eax, 0x4);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->edi) + 0x58, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AABA;
    }
	mov(&ts->eax, ts->edx);

loc_45AAAB:
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi) + 0x5C, 4));
	add(&ts->ecx, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_45AADB;
    }

loc_45AABA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0xFFFFFFFF);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_45AADB:
	add(&ts->eax, 0x6);
	shl(&ts->eax, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x64, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_45AB00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->ecx*4), 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	mov(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	if (!ts->eflags.carry) {
        goto loc_45AB2F;
    }
	mov(&ts->edi, ts->edi);

loc_45AB20:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45AB28;
    }
	add(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));

loc_45AB28:
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.carry) {
        goto loc_45AB20;
    }

loc_45AB2F:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	xor_(&ts->ebp, ts->ebp);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45AB65;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebp, ts->eax);

loc_45AB65:
	cmp(&ts->eflags, ts->ebx, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebp);
	if (!ts->eflags.carry) {
        goto loc_45ABA9;
    }
	nop();

loc_45AB70:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_45ABA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->edi, ts->ebp);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ebp, ts->esi);
	game::sub_735E60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);

loc_45ABA2:
	add(&ts->ebx, 0xC);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.carry) {
        goto loc_45AB70;
    }

loc_45ABA9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_45ABC0(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB708, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789E70, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BA38, 4));
	goto __ftol2;
}

void sub_45ABE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x82B90D, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AC1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45AC02;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45AC1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AC1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x1C, 4));

loc_45AC02:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AC0E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));

loc_45AC0E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AC1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x1C, 4));

loc_45AC1B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45AC20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, 0x3);
	mov(&ts->edx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AC5E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45AC5E;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x90, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_45AC51;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	jmp(x86::mem(ts->edx + 0x38, 4));

loc_45AC51:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	jmp(x86::mem(ts->eax + 0x38, 4));

loc_45AC5E:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x1, 4));
	cmp(&ts->eflags, ts->edx, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45AC75;
    }
	jmp(x86::mem(0x45AD18, 4));

loc_45AC7C:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x60, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2);
	jmp(x86::mem(ts->edx + 0x38, 4));

loc_45AC95:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	jmp(x86::mem(ts->eax + 0x38, 4));

loc_45ACAA:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x4);
	jmp(x86::mem(ts->edx + 0x38, 4));

loc_45ACBF:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3);
	jmp(x86::mem(ts->eax + 0x38, 4));

loc_45ACD4:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	jmp(x86::mem(ts->edx + 0x38, 4));

loc_45ACE9:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3);
	jmp(x86::mem(ts->eax + 0x38, 4));

loc_45ACFE:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto def_45AC75;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	jmp(x86::mem(ts->edx + 0x38, 4));

def_45AC75:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45AD40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	setl(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45ADE8;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45ADE8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_45ADB8;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_722F98(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45ADAE;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);

loc_45ADAE:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_45ADB8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45ADE8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7227CB(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7227CB(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_722F98(ts, mv);
	add(&ts->esp, 0x10);

loc_45ADE8:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_45AE00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->esi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	goto sub_721FA7;
}

void sub_45AE20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->esi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	goto sub_721FA7;
}

void sub_45AE50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto locret_45AE9E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45AE71;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_45AE9E;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, x86::mem(0x82BA58, 1), 0x1);
	goto sub_45A7C0;

loc_45AE71:
	mov(mv, &ts->eax, x86::mem(0x82BA44, 4));
	mov(mv, x86::mem(0x82BA48, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_45AE9E;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA40, 4));
	add(&ts->eax, 0x4);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_45AE90:
	add(mv, &ts->ecx, x86::mem(ts->eax, 4));
	add(&ts->eax, 0x4);
	dec(&ts->edx);
	mov(mv, x86::mem(0x82BA40, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AE90;
    }

locret_45AE9E:
	retn(mv, &ts->esp);
}

void sub_45AEA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x82BA40, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	shl(&ts->esi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45AEF0;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_45AEF0:
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x82BA40, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45AF36;
    }

loc_45AF02:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->esi*2), 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82BA48, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_45AA30(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BA40, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45AF02;
    }

loc_45AF36:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, 0x28);
	push(mv, &ts->esp, ts->edi);
	game::sub_45AB00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA48, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BA48, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_45AF70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA40, 4));
	retn(mv, &ts->esp);
}

void sub_45AF80(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0xC);
}

void sub_45AF90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto locret_45AFDE;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45AFB1;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_45AFDE;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, x86::mem(0x82BA74, 1), 0x1);
	goto sub_45A7C0;

loc_45AFB1:
	mov(mv, &ts->eax, x86::mem(0x82BA60, 4));
	mov(mv, x86::mem(0x82BA64, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_45AFDE;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA5C, 4));
	add(&ts->eax, 0x4);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_45AFD0:
	add(mv, &ts->ecx, x86::mem(ts->eax, 4));
	add(&ts->eax, 0x4);
	dec(&ts->edx);
	mov(mv, x86::mem(0x82BA5C, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45AFD0;
    }

locret_45AFDE:
	retn(mv, &ts->esp);
}

void sub_45AFE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x82BA5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	shl(&ts->esi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45B030;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_45B030:
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x82BA5C, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45B076;
    }

loc_45B042:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->esi*2), 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82BA64, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_45AA30(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BA5C, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45B042;
    }

loc_45B076:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, 0x28);
	push(mv, &ts->esp, ts->edi);
	game::sub_45AB00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA64, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BA64, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_45B0B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA5C, 4));
	retn(mv, &ts->esp);
}

void sub_45B0C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45B0F2;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x785D44);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);

loc_45B0DF:
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_45B0F2:
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_45B10A;
    }
	push(mv, &ts->esp, 0x786370);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_45B10A:
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.zero) {
        goto loc_45B122;
    }
	push(mv, &ts->esp, 0x789EB0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_45B122:
	cmp(&ts->eflags, ts->eax, 0xB);
	if (!ts->eflags.zero) {
        goto loc_45B13A;
    }
	push(mv, &ts->esp, 0x78637C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_45B13A:
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.zero) {
        goto loc_45B0DF;
    }
	push(mv, &ts->esp, 0x789EA4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45B196;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45B1DF;
    }
	xor_(&ts->esi, ts->esi);

loc_45B174:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_45B0C0(ts, mv);
	mov(mv, x86::mem(0x82BAF8, 4), ts->eax);
	mov(&ts->esi, ts->edi);
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45B174;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_45B196:
	mov(&ts->esi, 0x1);
	mov(&ts->edi, 0x82BA78);
	mov(&ts->ebx, 0x20);

loc_45B1A5:
	cmp(&ts->eflags, ts->esi, 0xA);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45B1B7;
    }
	push(mv, &ts->esp, 0x785D38);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_45B1C1;

loc_45B1B7:
	push(mv, &ts->esp, 0x785D2C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);

loc_45B1C1:
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	inc(&ts->esi);
	add(&ts->edi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45B1A5;
    }

loc_45B1DF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B1F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), 0x789EBC);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x8, 4), 0x7FFF);
	mov(mv, x86::mem(ts->edx + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x20, 4));
	mov(&ts->ecx, 0xF);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x20, 4));
	mov(&ts->edi, 0xF);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_45B240:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45B252;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_45B252:
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_45B240;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x1C, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45B260(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789EC0);
	mov(mv, x86::mem(ts->eax + 0x10, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7722B6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45B453;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45B453;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xA, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_45B2DA;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0xA, 2));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45B2C6;
    }
	neg(&ts->eax);

loc_45B2C6:
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1C0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x2, 2));
	add(&ts->esp, 0x4);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	goto loc_45B2E1;

loc_45B2DA:
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x2, 2));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);

loc_45B2E1:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	imul(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	sar(&ts->edi, 0xF);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_45B317;
    }
	movsx(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 2));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45B303;
    }
	neg(&ts->eax);

loc_45B303:
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1C0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 2));
	add(&ts->esp, 0x4);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	goto loc_45B31E;

loc_45B317:
	movzx(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 2));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);

loc_45B31E:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->eax, 0x1000);
	sub(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789EC4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0xC, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x1, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_45B3CA;
    }
	push(mv, &ts->esp, 0x1C);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45B3A3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x6, 2));
	push(mv, &ts->esp, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 2));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebx) + 0x10000, 4));
	and_(&ts->ecx, 0x8000FFFF);
	if (!ts->eflags.sign) {
        goto loc_45B38E;
    }
	dec(&ts->ecx);
	or_(&ts->ecx, 0xFFFF0000);
	inc(&ts->ecx);

loc_45B38E:
	push(mv, &ts->esp, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edx, 1));
	movsx(mv, &ts->edx, x86::mem(ts->edx + 0x1, 1));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_458360(ts, mv);
	goto loc_45B3A5;

loc_45B3A3:
	xor_(&ts->eax, ts->eax);

loc_45B3A5:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45B3CA;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);

loc_45B3CA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45B44C;
    }
	push(mv, &ts->esp, 0x1C);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_45B425;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x6, 2));
	push(mv, &ts->esp, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 2));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebx) + 0x10000, 4));
	and_(&ts->ecx, 0x8000FFFF);
	if (!ts->eflags.sign) {
        goto loc_45B410;
    }
	dec(&ts->ecx);
	or_(&ts->ecx, 0xFFFF0000);
	inc(&ts->ecx);

loc_45B410:
	push(mv, &ts->esp, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edx, 1));
	movsx(mv, &ts->edx, x86::mem(ts->edx + 0x1, 1));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_458440(ts, mv);
	goto loc_45B427;

loc_45B425:
	xor_(&ts->eax, ts->eax);

loc_45B427:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45B44C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);

loc_45B44C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x10, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);

loc_45B453:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7722A0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_7722AB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469520:
	mov(&ts->eax, 0x7DE7A8);
	goto ___CxxFrameHandler;
}

void sub_45B470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	retn(mv, &ts->esp);
}

void sub_45B480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_45AD40(ts, mv);
	retn(mv, &ts->esp);
}

void sub_45B490(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_45B4A9;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7227CB(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_45B4A9:
	retn(mv, &ts->esp);
}

void sub_45B4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_576970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x3C, 1));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_45B54D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45B50C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x3C, 1), 0x1);

loc_45B501:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_45B50C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45B542;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45B57C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x3C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_45B542:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_45B54D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_45B501;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45B57C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ecx);

loc_45B57C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_45B590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7722FA);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x789ECC);
	game::sub_576880(ts, mv);
	mov(&ts->edi, 0xBF800000);
	mov(&ts->ebp, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x40, 1), ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x1);
	game::sub_576880(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x8C, 1), ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x2);
	game::sub_576880(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xD8, 1), ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x3);
	game::sub_576880(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x124, 1), ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x148, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x4);
	game::sub_576880(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x170, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_45B4B0:
	add(&ts->ecx, 0x14);
	goto sub_5768E0;

loc_7722C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_7722C8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto loc_45B4B0;

loc_7722D3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto loc_45B4B0;

loc_7722DE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x9C);
	goto loc_45B4B0;

loc_7722EC:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xE8);
	goto loc_45B4B0;

SEH_45B590:
	mov(&ts->eax, 0x7DE7EC);
	goto ___CxxFrameHandler;
}

void sub_45B730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7722FA);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ECC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x148, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x3);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x2);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7722C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_7722C8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto loc_45B4B0;

loc_7722D3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto loc_45B4B0;

loc_7722DE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x9C);
	goto loc_45B4B0;

loc_7722EC:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xE8);
	goto loc_45B4B0;

SEH_45B590:
	mov(&ts->eax, 0x7DE7EC);
	goto ___CxxFrameHandler;

loc_45B4B0:
}

void sub_45B7C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x78851C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788520, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x788524, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788528, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x78852C, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788518, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x18, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5768A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78851C, 4));
	fchs(&ts->fp, x86::fp_index(0));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788520, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(0x788524, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788528, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78852C, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788518, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5768A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788534, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788538, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x78853C, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788540, 4));
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788544, 4));
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788530, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5768A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA4, 4));
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x78854C, 4));
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788550, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x788554, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788558, 4));
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x78855C, 4));
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788548, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xFC, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5768A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF0, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788564, 4));
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788568, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x78856C, 4));
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x788570, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x788574, 4));
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788560, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x148, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5768A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B9C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x180, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x184, 4));
	mov(mv, x86::mem(ts->ecx + 0x190, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x188, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x184, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x18C, 1), 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_45B9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45BA11;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45BA11;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45BA11;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x1, 1), ts->bl);
	goto loc_45BA19;

loc_45BA11:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x1, 1), 0x1);

loc_45BA19:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x180, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45BA44;
    }
	mov(mv, x86::mem(ts->edx + 0x2, 1), 0x1);
	goto loc_45BA47;

loc_45BA44:
	mov(mv, x86::mem(ts->edx + 0x2, 1), ts->bl);

loc_45BA47:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xD8, 1), ts->bl);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->edx + 0x3, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x124, 1), ts->bl);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->edx + 0x4, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x124, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45BA72;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x40, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45BA72;
    }
	mov(mv, x86::mem(ts->edx + 0x5, 1), 0x1);
	goto loc_45BA75;

loc_45BA72:
	mov(mv, x86::mem(ts->edx + 0x5, 1), ts->bl);

loc_45BA75:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x124, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45BA8D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45BA8D;
    }
	mov(mv, x86::mem(ts->edx + 0x6, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_45BA8D:
	mov(mv, x86::mem(ts->edx + 0x6, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45BAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED138);
	retn(mv, &ts->esp);
}

void sub_45BAB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED13C, 4));
	retn(mv, &ts->esp);
}

void sub_45BAC0(x86::thread_state* ts, x86::memory_view* mv) {
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);
}

void Concurrency__target_block_Concurrency__multi_link_registry_Concurrency__ISource_uint___Concurrency__ordered_message_processor_uint____decline_incoming_messages_void_(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x58, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_45BAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED244);
	retn(mv, &ts->esp);
}

void sub_45BAF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED248, 4));
	retn(mv, &ts->esp);
}

void sub_45BC70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77235E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789EE0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x5);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x4);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x3);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x2);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772310:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772318:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xA4);
	goto sub_5768E0;

loc_772326:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xCC);
	goto sub_5768E0;

loc_772334:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xF4);
	goto sub_5768E0;

loc_772342:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x11C);
	goto sub_5768E0;

loc_772350:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x144);
	goto sub_5768E0;

SEH_45BC70:
	mov(&ts->eax, 0x7DE838);
	goto ___CxxFrameHandler;
}

void sub_45BD10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45BD32;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45BD32;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45BD32;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x0);
	goto loc_45BD35;

loc_45BD32:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);

loc_45BD35:
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x2);
	setl(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45BD64;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45BD64;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45BD69;

loc_45BD64:
	mov(&ts->eax, 0x1);

loc_45BD69:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8C, 4));
	add(&ts->ecx, 0xFFFFFFF7);
	cmp(&ts->eflags, ts->ecx, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45BD90;
    }
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x45BDD4, 1));
	jmp(x86::mem(0x45BDCC, 4));

loc_45BD97:
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x3);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*8), 4));
	lea(mv, &ts->eax, x86::mem(0x7F2F20, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

def_45BD90:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x1);
	setz(ts->eflags, &ts->cl);
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*8), 4));
	lea(mv, &ts->eax, x86::mem(0x7F2F20, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x58, 1), 0x1);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_45BE0F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45BE0F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45BE14;

loc_45BE0F:
	mov(&ts->eax, 0x1);

loc_45BE14:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	setnz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	game::sub_576A10(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x89E7D9, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_45BE7D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45BE7D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45BE82;

loc_45BE7D:
	mov(&ts->eax, 0x1);

loc_45BE82:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x3F800000);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubrp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45BED5;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45BED5:
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45BEE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED254);
	retn(mv, &ts->esp);
}

void sub_45BEF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED258, 4));
	retn(mv, &ts->esp);
}

void sub_45BF50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esi, 0xD0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45BF80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45BF9A;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45BF92;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45BF92:
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_45BF9A:
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp, 0x4);
}

void sub_45BFB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x398, 4));
	push(mv, &ts->esp, ts->ebx);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax + 0x39C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x394, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x3A0, 4));
	if (ts->eflags.zero) {
        goto loc_45BFD9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));

loc_45BFD9:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45BFE3;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xB0, 4));

loc_45BFE3:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, x86::mem(ts->ecx + 0xB8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, x86::mem(ts->ecx + 0xBC, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_45C03E;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C03E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_45C03E;
    }
	mov(mv, &ts->eax, x86::mem(0x827EC8, 4));
	mov(mv, &ts->ebx, x86::mem(0x827EB0, 4));
	mov(mv, &ts->edi, x86::mem(0x827E98, 4));
	or_(&ts->eax, ts->ebx);
	or_(&ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_45C03E;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x19);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45C03E:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0xB4, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45C050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED27C);
	retn(mv, &ts->esp);
}

void sub_45C060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED280, 4));
	retn(mv, &ts->esp);
}

void sub_45C070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED28C);
	retn(mv, &ts->esp);
}

void sub_45C080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED290, 4));
	retn(mv, &ts->esp);
}

void sub_45C090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C09D;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45C09D;
    }
	retn(mv, &ts->esp);

loc_45C09D:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_45C0B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2A4);
	retn(mv, &ts->esp);
}

void sub_45C0C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2A8, 4));
	retn(mv, &ts->esp);
}

void sub_45C0D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x789ED4);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->esi, 0x10);
	xor_(&ts->ecx, ts->ecx);

loc_45C0E3:
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	add(&ts->edx, 0x4);
	dec(&ts->esi);
	mov(mv, x86::mem(ts->eax + 0x48, 2), ts->cx);
	if (!ts->eflags.zero) {
        goto loc_45C0E3;
    }
	mov(mv, x86::mem(ts->eax + 0x58, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789F28);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xBC, 4), ts->ecx);
	mov(&ts->dl, 0x1);
	mov(mv, x86::mem(ts->eax + 0xC4, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xDC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE0, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xF8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xEC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xF0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xE8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xF4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xFC, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x118, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x104, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x110, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x108, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x114, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x11C, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x134, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x120, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x128, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x12C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x124, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x130, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x138, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x154, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x140, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x148, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x144, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x150, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x158, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x74, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45C210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45C232;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_45C232:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C25A;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_45C25A:
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x7ED344, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7ED344, 4));
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45C280;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45C28C;

loc_45C280:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45C28C;
    }
	mov(&ts->eax, 0x7FFF);

loc_45C28C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C2AE;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_45C2AE:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C2D6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_45C2D6:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C2FE;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_45C2FE:
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45C310(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFFA);
	add(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45C352;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45C352;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C352;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x0);
	goto loc_45C355;

loc_45C352:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edx);

loc_45C355:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA4, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45C38D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4), 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7F2234, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->eax, 0x5);
	add(&ts->eax, 0x7F2860);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	goto loc_45C3AA;

loc_45C38D:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x44, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45C39C;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45C3A3;
    }

loc_45C39C:
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x7F2E60);

loc_45C3A3:
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x7F2EC0);

loc_45C3AA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_45C3B9;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_45C3B9:
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C3D0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x58, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x88, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x98, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA0, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x100, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_45C430(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x88, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_45C470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2B4);
	retn(mv, &ts->esp);
}

void sub_45C480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2B8, 4));
	retn(mv, &ts->esp);
}

void sub_45C4B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2C4);
	retn(mv, &ts->esp);
}

void sub_45C4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2C8, 4));
	retn(mv, &ts->esp);
}

void sub_45C4D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772386);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789F70);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_5768E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772370:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772378:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x90);
	goto sub_5768E0;

SEH_45C4D0:
	mov(&ts->eax, 0x7DE864);
	goto ___CxxFrameHandler;
}

void sub_45C530(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x128, 4));
	retn(mv, &ts->esp);
}

void sub_45C540(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));
	retn(mv, &ts->esp);
}

void sub_45C550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45C582;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45C582;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C582;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45C582:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C5A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x96);
	game::sub_576A10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	game::sub_576A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x14E, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x150, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x5DC0);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->edx, 0x90);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C658;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C64E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C644;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45C644:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45C64E:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x5554);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45C658:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x2AAA);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45C670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45C679;
    }
	jmp(x86::mem(0x45C6A4, 4));

loc_45C680:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_45C688:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_45C690:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_45C695:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

def_45C679:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C6C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x7FFF);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C6DC;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45C6FA;
    }

loc_45C6DC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FB0, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0x7FFF);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ecx);

loc_45C6FA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x140, 4));
	game::__ftol2(ts, mv);
	add(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45C740;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C727;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45C740;
    }

loc_45C727:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_576A10(ts, mv);
	goto loc_45C774;

loc_45C740:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC8, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45C766;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576A10(ts, mv);
	goto loc_45C774;

loc_45C766:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);

loc_45C774:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x148, 4));
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45C7A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45C815;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero) {
        goto loc_45C7D2;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45C813;
    }

loc_45C7D2:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x88, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x84, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x94, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45C84D;
    }
	mov(&ts->eax, 0x1);
	mov(&ts->edi, 0x2710);
	goto loc_45C85A;

loc_45C813:
	xor_(&ts->edi, ts->edi);

loc_45C815:
	mov(&ts->eax, 0x4097);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x150, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14C, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14E, 2), ts->ax);
	mov(&ts->eax, 0x1);
	mov(&ts->edi, 0x2710);
	goto loc_45C85A;

loc_45C84D:
	mov(&ts->edi, 0x2710);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45C85E;
    }

loc_45C85A:
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_45C85E:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45C97E;
    }
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45C875;
    }

loc_45C871:
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);

loc_45C875:
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45C988;
    }
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45C88C;
    }

loc_45C888:
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);

loc_45C88C:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45C8D8;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FB4, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->dx, x86::mem(ts->esi + 0x14C, 2));
	sub(&ts->dx, ts->ax);
	movzx(&ts->eax, ts->dx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xFFFF);
	idiv(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14C, 2), ts->dx);
	game::sub_43C2B0(ts, mv);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));

loc_45C8D8:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_45C924;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FB4, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->dx, x86::mem(ts->esi + 0x14E, 2));
	sub(&ts->dx, ts->ax);
	movzx(&ts->eax, ts->dx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xFFFF);
	idiv(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14E, 2), ts->dx);
	game::sub_43C2B0(ts, mv);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x148, 4));

loc_45C924:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45C974;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FB4, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->dx, x86::mem(ts->esi + 0x150, 2));
	sub(&ts->dx, ts->ax);
	movzx(&ts->eax, ts->dx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xFFFF);
	idiv(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x150, 2), ts->dx);
	game::sub_43C2B0(ts, mv);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x140, 4));

loc_45C974:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);

loc_45C97E:
	mov(&ts->eax, 0x1);
	goto loc_45C871;

loc_45C988:
	mov(&ts->eax, 0x1);
	goto loc_45C888;
}

void sub_45C9A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2D4);
	retn(mv, &ts->esp);
}

void sub_45C9B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2D8, 4));
	retn(mv, &ts->esp);
}

void sub_45CA80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45CAA2;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45CAA2;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45CAA2;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x0);
	goto loc_45CAA5;

loc_45CAA2:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);

loc_45CAA5:
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45CADC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->edx, x86::mem(0x7F3248, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45CADC:
	push(mv, &ts->esp, 0x2);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45CAF8;
    }
	mov(mv, x86::mem(ts->esi + 0xD4, 4), 0x7F3284);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45CAF8:
	mov(mv, x86::mem(ts->esi + 0xD4, 4), 0x7F32C0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45CB10(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x58, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xD0, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xD1, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xD8, 1), ts->al);
	retn(mv, &ts->esp);
}

void sub_45CB40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45CB5A;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45CB52;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45CB52:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_45CB5A:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);
}

void sub_45CB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(0x788610, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788614, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F000000);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), 0x6);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x80, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 1), ts->al);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x88, 4));
	mov(mv, x86::mem(ts->ecx + 0xC8, 4), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), 0x3E4CCCCD);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->eax);
	mov(&ts->edx, 0x42C80000);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), 0x3C23D70A);
	mov(mv, x86::mem(ts->ecx + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xB4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xBC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC4, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_45CC30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xD4, 4));
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->ecx + 0xC8, 4), 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_45CC75;
    }
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3C23D70A);

loc_45CC75:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x80, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), 0x6);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	mov(mv, x86::mem(ts->ecx + 0x8C, 1), ts->dl);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x88, 4));
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_45CCC7;
    }
	mov(mv, x86::mem(ts->ecx + 0x94, 4), 0x3C23D70A);

loc_45CCC7:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA0, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA8, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0xA4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), 0x3C23D70A);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ecx + 0xBC, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC4, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC0, 4));
	retn(mv, &ts->esp);
}

void sub_45CD30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_45CDB2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x90, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788618, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_45CDB2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0xD8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45CDB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45CDB2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x70, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45CD93;
    }
	game::sub_45C090(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45CDB2;
    }

loc_45CD93:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x50, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_45CDB2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_45CDB2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FDC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45CDB6;
    }

loc_45CDB2:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_45CDB6:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45CDC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45CDCD;
    }

loc_45CDCA:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_45CDCD:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45CDE0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45CDCA;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45CDCA;
    }

loc_45CDE0:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FE0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_45CDCA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x50, 4), 0x3);
	setnl(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_45CE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2E4);
	retn(mv, &ts->esp);
}

void sub_45CE10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2E8, 4));
	retn(mv, &ts->esp);
}

void sub_45CF40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789FE4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_45CF90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45CFB3;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_45CFB3;
    }
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_45CFB3;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x0);
	goto loc_45CFB6;

loc_45CFB3:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);

loc_45CFB6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	sub(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x84, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(&ts->edx, 0x3F800000);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x84, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->edx);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x84, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45D050(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x58, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_45D070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45D095;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D08D;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D085;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45D085:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_45D08D:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_45D095:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);
}

void sub_45D0A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x6C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xF4, 4));
	push(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x128, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x12C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xF0, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(ts->ecx + 0xF4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xD8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_45D0EF;
    }
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC4, 4));

loc_45D0E4:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xF0, 4));
	goto loc_45D176;

loc_45D0EF:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D117;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC4, 4));
	if (!ts->eflags.zero) {
        goto loc_45D0E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xEC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_576A10(ts, mv);
	goto loc_45D17E;

loc_45D117:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45D126;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D16A;
    }

loc_45D126:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x78, 4), 0x5);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC4, 4));
	if (!ts->eflags.zero) {
        goto loc_45D142;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xF0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_576A10(ts, mv);
	goto loc_45D17E;

loc_45D142:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x7C, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_45D161;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788620, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xEC, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576A10(ts, mv);
	goto loc_45D17E;

loc_45D161:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xEC, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_45D177;

loc_45D16A:
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xEC, 4));

loc_45D176:
	push(mv, &ts->esp, ts->ecx);

loc_45D177:
	mov(&ts->ecx, ts->esi);
	game::sub_576970(ts, mv);

loc_45D17E:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x4, 4));
}

void sub_45D190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xFC, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x118, 4));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x118, 4));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x118, 4));
	game::__ftol2(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45D1F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED2F4);
	retn(mv, &ts->esp);
}

void sub_45D200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED2F8, 4));
	retn(mv, &ts->esp);
}

void sub_45D210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7723C6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);
	nop();

loc_45D240:
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_45D240;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x78A008);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x1);
	game::sub_576A10(ts, mv);
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, 0x447A0000);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x461C4000);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7723B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_7723B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x94);
	goto sub_5768E0;

SEH_45D210:
	mov(&ts->eax, 0x7DE8BC);
	goto ___CxxFrameHandler;
}

void sub_45D300(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	retn(mv, &ts->esp);
}

void sub_45D310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A008);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_45D360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x8);
	game::sub_45AD40(ts, mv);
	retn(mv, &ts->esp);
}

void sub_45D370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_5928D0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1F8, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1F0, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1F4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45D3D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED304);
	retn(mv, &ts->esp);
}

void sub_45D3E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED308, 4));
	retn(mv, &ts->esp);
}

void sub_45D480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772400);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A030);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_45B730(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A008);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7723F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_45D310;

loc_7723F8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_45D480:
	mov(&ts->eax, 0x7DE90C);
	goto ___CxxFrameHandler;
}

void sub_45D4F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45D519;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45D519;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45D519;
    }
	mov(mv, x86::mem(ts->ecx + 0x68, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_45D519:
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45D530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45D370(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	game::sub_45B7C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2AC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45D560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45D576;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D59B;
    }

loc_45D576:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xBC, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788680, 4));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788688, 4));
	if (!ts->eflags.zero) {
        goto loc_45D5F7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788684, 4));
	goto loc_45D5FD;

loc_45D59B:
	mov(mv, &ts->al, x86::mem(0x89E7E3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45D5AD;
    }
	mov(mv, &ts->eax, x86::mem(0x89010C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D5D2;
    }

loc_45D5AD:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xBC, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788654, 4));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78865C, 4));
	if (!ts->eflags.zero) {
        goto loc_45D5F7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788658, 4));
	goto loc_45D5FD;

loc_45D5D2:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xBC, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788628, 4));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788630, 4));
	if (!ts->eflags.zero) {
        goto loc_45D5F7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78862C, 4));
	goto loc_45D5FD;

loc_45D5F7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_45D5FD:
	cmp(&ts->eflags, ts->eax, 0x4);
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45D65F;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886D0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FB4, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->cx, x86::mem(ts->esi + 0x29C, 2));
	sub(&ts->cx, ts->ax);
	movzx(&ts->eax, ts->cx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xFFFF);
	idiv(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x29C, 2), ts->dx);
	game::sub_43C2B0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886D4, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x294, 4));

loc_45D65F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x60, 4));
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A05C, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45D670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B8, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886D8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45D6F8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45D6B0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_45D6B0:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x294, 4));
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45D710;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45D710;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D710;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45D710;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45D710;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	game::sub_5ECDF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D700;
    }
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_45D6F8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	goto loc_45D6B0;

loc_45D700:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x280, 4), 0x3);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->dl);

loc_45D710:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45D720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x430, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5930(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(0x89E7E3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45D755;
    }
	mov(mv, &ts->eax, x86::mem(0x89010C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D75D;
    }

loc_45D755:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886E0, 4));
	goto loc_45D77D;

loc_45D75D:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_45D76F;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D777;
    }

loc_45D76F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886E4, 4));
	goto loc_45D77D;

loc_45D777:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886DC, 4));

loc_45D77D:
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7881F4, 4));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C8, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x2);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45D7A7;
    }
	mov(&ts->eax, 0x2);

loc_45D7A7:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45D7AD;
    }
	mov(&ts->eax, ts->ecx);

loc_45D7AD:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45D7B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45D7CA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D7C2;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45D7C2:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp, 0x4);

loc_45D7CA:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);
}

void sub_45D7E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45D92A;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45D92A;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45D92A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x434, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45D820;
    }
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_45D820:
	mov(&ts->ecx, ts->esi);
	game::sub_45D720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	sub(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45D839;
    }
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFE);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45D84C;
    }

loc_45D839:
	mov(&ts->ecx, ts->esi);
	game::sub_45D720(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);

loc_45D84C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A060, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45D8AC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45D720(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45D86F;
    }
	mov(&ts->eax, 0x3);
	goto loc_45D879;

loc_45D86F:
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45D879;
    }
	mov(&ts->eax, 0x7);

loc_45D879:
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7886E8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1F0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x298, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	add(&ts->esp, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x2A4, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_45D8AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886AC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45D92A;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45D92A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45D720(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45D8E5;
    }
	inc(mv, x86::mem(ts->esi + 0x2A8, 4));
	goto loc_45D8EF;

loc_45D8E5:
	mov(mv, x86::mem(ts->esi + 0x2A8, 4), 0x0);

loc_45D8EF:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_45D91D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45D91D;
    }
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x3);

loc_45D91D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ecx);

loc_45D92A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45D930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED314);
	retn(mv, &ts->esp);
}

void sub_45D940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED318, 4));
	retn(mv, &ts->esp);
}

void sub_45DAC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45DAE3;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_45DAE3;
    }
	cmp(&ts->eflags, ts->edx, 0x3);
	if (ts->eflags.zero) {
        goto loc_45DAE3;
    }
	mov(mv, x86::mem(ts->ecx + 0x68, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_45DAE3:
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_45DAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x70, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x71, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0xD7, 1), ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45DB20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFF5);
	add(&ts->eax, 0xA);
	retn(mv, &ts->esp, 0x4);
}

void sub_45DB40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x70, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, ts->al);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto locret_45DB8A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45DB7F;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45DB73;
    }
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.zero) {
        goto loc_45DB7F;
    }
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	retn(mv, &ts->esp);

loc_45DB73:
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	retn(mv, &ts->esp);

loc_45DB7F:
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);

locret_45DB8A:
	retn(mv, &ts->esp);
}

void sub_45DB90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD7, 1));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->al, ts->dl);
	if (ts->eflags.zero) {
        goto locret_45DC3C;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x82AF2C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A99C, 4));
	mov(mv, x86::mem(ts->ecx + 0xD4, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x82B060, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3788, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xBC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_45DBEC;
    }
	mov(mv, x86::mem(ts->ecx + 0xBC, 4), 0x3C23D70A);

loc_45DBEC:
	mov(mv, x86::mem(ts->ecx + 0xC4, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xD0, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(0x82B064, 4), 0x0);
	mov(mv, x86::mem(0x82AF30, 4), 0x0);
	mov(mv, x86::mem(0x82AFAC, 4), 0x3F800000);
	mov(mv, x86::mem(0x82B074, 4), 0x3F800000);

locret_45DC3C:
	retn(mv, &ts->esp, 0x8);
}

void sub_45DC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED324);
	retn(mv, &ts->esp);
}

void sub_45DC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED328, 4));
	retn(mv, &ts->esp);
}

void sub_45DC60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED334);
	retn(mv, &ts->esp);
}

void sub_45DC70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED338, 4));
	retn(mv, &ts->esp);
}

void sub_45DCC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(&ts->esi, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45DCE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED348);
	retn(mv, &ts->esp);
}

void sub_45DCF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED34C, 4));
	retn(mv, &ts->esp);
}

void sub_45DD00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED358);
	retn(mv, &ts->esp);
}

void sub_45DD10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED35C, 4));
	retn(mv, &ts->esp);
}

void sub_45DD20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED368);
	retn(mv, &ts->esp);
}

void sub_45DD30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED36C, 4));
	retn(mv, &ts->esp);
}

void sub_45DD40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED26C);
	retn(mv, &ts->esp);
}

void sub_45DD50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED270, 4));
	retn(mv, &ts->esp);
}

void sub_45DD60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772426);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);

loc_45DD90:
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_45DD90;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0xA8, 4));
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x78A0B4);
	game::sub_576880(ts, mv);
	mov(&ts->eax, 0x1388);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x88, 4));
	mov(&ts->ecx, 0x6);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_5768A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0xBF800000);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772418:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xA8);
	goto sub_5768E0;

SEH_45DD60:
	mov(&ts->eax, 0x7DE938);
	goto ___CxxFrameHandler;
}

void sub_45DE30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->eax*4) + 0x88, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_45DE48;
    }
	mov(mv, x86::mem(ts->ecx + (ts->eax*4) + 0x88, 4), ts->edx);

locret_45DE48:
	retn(mv, &ts->esp, 0x8);
}

void sub_45DE50(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_45DE60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(0x82BB7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BB78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C490(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, 0x4000);
	add(&ts->esp, 0xC);
	sub(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BB78, 4));
	mov(mv, x86::mem(0x82BB80, 2), ts->cx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45DEF5;
    }
	mov(mv, &ts->eax, x86::mem(0x82BB80, 4));
	mov(&ts->edx, 0xFFFF);
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(0x82BB80, 2), ts->dx);

loc_45DEF5:
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_45DF00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(0x82BB40, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_45DF24;
    }
	mov(mv, &ts->eax, x86::mem(0x82BB40, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E0D9;
    }

loc_45DF24:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E0D9;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BC14, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45DF4B;
    }
	jmp(x86::mem(0x45E0EC, 4));

loc_45DF52:
	lea(mv, &ts->ecx, x86::mem(0x82BF10, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->eax, x86::mem(0x82BECC, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BB78, 4), ts->eax);
	game::sub_45DE60(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(0x82BB80, 2));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x82BB7C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_401150(ts, mv);
	add(&ts->esp, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->ecx, x86::mem(0x82BEDC, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->eax, x86::mem(0x82C6C4, 4));
	goto loc_45E099;

loc_45DFBF:
	lea(mv, &ts->eax, x86::mem(0x82BF20, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->edx, x86::mem(0x82BE70, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BB78, 4), ts->edx);
	game::sub_45DE60(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x82BB80, 2));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82BB7C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_401150(ts, mv);
	add(&ts->esp, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(0x82BEDC, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->edx, x86::mem(0x82C6C4, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BB78, 4), ts->edx);
	game::sub_45DE60(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x82BB80, 2));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82BB7C, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_45E0B6;

loc_45E046:
	lea(mv, &ts->edx, x86::mem(0x82C670, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->ecx, x86::mem(0x82BE70, 4));
	mov(mv, x86::mem(0x82BB78, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_45DE60(ts, mv);
	movzx(mv, &ts->edx, x86::mem(0x82BB80, 2));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x82BB7C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_45E0B6;

loc_45E07F:
	lea(mv, &ts->ecx, x86::mem(0x82C670, 4));
	mov(mv, x86::mem(0x82BB7C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->eax, x86::mem(0x82BE70, 4));

loc_45E099:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BB78, 4), ts->eax);
	game::sub_45DE60(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(0x82BB80, 2));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x82BB7C, 4));
	push(mv, &ts->esp, ts->edx);

loc_45E0B6:
	push(mv, &ts->esp, ts->edi);
	game::sub_401150(ts, mv);
	add(&ts->esp, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

def_45DF4B:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_45E0E8;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45E0D9:
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_45E0E8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45E100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	sub(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E1C6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x84, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45E147;
    }
	mov(mv, x86::mem(0x82BC14, 4), 0x0);

loc_45E132:
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), 0x0);
	game::sub_45DF00(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_45E147:
	mov(&ts->edx, 0x1);
	mov(mv, x86::mem(0x82BC14, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEDC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE0, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsqrt(&ts->fp, x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_45E132;
    }
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->edx);
	game::sub_45DF00(ts, mv);

loc_45E1C6:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E1D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E1E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E1F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_45E28B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45E20F;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	goto loc_45E217;

loc_45E20F:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_45E21D;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));

loc_45E217:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));

loc_45E21D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	push(mv, &ts->esp, ts->edi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_45E265;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_45E265;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7887FC, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7887FC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	goto loc_45E26A;

loc_45E265:
	push(mv, &ts->esp, 0x3F800000);

loc_45E26A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xA8, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_576970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);

loc_45E28B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_45E290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_45E2A5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	retn(mv, &ts->esp, 0x8);

loc_45E2A5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3760, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45E2F3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A0EC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_45E2F0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A0EC, 4));

locret_45E2F0:
	retn(mv, &ts->esp, 0x8);

loc_45E2F3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_45E300(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E322;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_45E315;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_45E322;
    }

loc_45E315:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	retn(mv, &ts->esp, 0x8);

loc_45E322:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45E333;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	retn(mv, &ts->esp, 0x8);

loc_45E333:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E33F;
    }
	mov(&ts->eax, 0x7FFF);

loc_45E33F:
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	retn(mv, &ts->esp, 0x8);
}

void sub_45E350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->edx, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(&ts->ecx, 0x10);

loc_45E360:
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x48, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_45E360;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x58, 4));
	mov(&ts->ecx, 0x10);
	mov(mv, x86::mem(ts->edx, 4), 0x78A0F0);
	mov(mv, x86::mem(ts->edx + 0x50, 4), 0x0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_45E390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E3A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	and_(&ts->eax, 0x7FFF);
	retn(mv, &ts->esp, 0x4);

loc_45E3A6:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E3C3;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x2, 2));
	retn(mv, &ts->esp, 0x4);

loc_45E3C3:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E3D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_45E3E9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	retn(mv, &ts->esp, 0x4);

loc_45E3E9:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto locret_45E40D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_45E40D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0x0);

locret_45E40D:
	retn(mv, &ts->esp, 0x4);
}

void sub_45E410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED380);
	retn(mv, &ts->esp);
}

void sub_45E420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED384, 4));
	retn(mv, &ts->esp);
}

void sub_45E450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_45E558;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x9C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E4B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E497;
    }
	game::sub_735550(ts, mv);

loc_45E497:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45E4B9:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A170);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x20);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E54F;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C72C);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E54C;
    }
	push(mv, &ts->esp, 0x7EDDE8);
	mov(&ts->ecx, 0x82C72C);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C72C);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_45E54C:
	pop(mv, &ts->esp, ts->edi);
	goto loc_45E551;

loc_45E54F:
	xor_(&ts->esi, ts->esi);

loc_45E551:
	mov(mv, x86::mem(ts->ebp + 0x9C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);

loc_45E558:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_45E570(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E62C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45E5A3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45E5E7;
    }

loc_45E5A3:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45E5DC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45E5B9;
    }
	game::sub_735550(ts, mv);

loc_45E5B9:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45E5DC:
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);

loc_45E5E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E62C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E608;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45E614;

loc_45E608:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E614;
    }
	mov(&ts->eax, 0x7FFF);

loc_45E614:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45E62C;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_45E62C:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45E630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED394);
	retn(mv, &ts->esp);
}

void sub_45E640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED398, 4));
	retn(mv, &ts->esp);
}

void sub_45E650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x78, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, 0x1);
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edx);
	retn(mv, &ts->esp);
}

void sub_45E670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45E68D;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_45E68D;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), 0x0);
	goto loc_45E693;

loc_45E68D:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);

loc_45E693:
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xA4, 4));
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->esi*4), 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edx*2), 4));
	mov(mv, &ts->edx, x86::mem(0x7F2234, 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edx*2), 4));
	shl(&ts->edx, 0x5);
	add(&ts->edx, 0x7F2860);
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, 0x2B);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E6EB;
    }
	mov(mv, x86::mem(ts->ecx + 0xD4, 4), 0x7F3040);
	retn(mv, &ts->esp, 0x4);

loc_45E6EB:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->edx, x86::mem(0x7F3040, 4));
	mov(mv, x86::mem(ts->ecx + 0xD4, 4), ts->edx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45E725;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E71D;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E715;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45E715:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_45E71D:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_45E725:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);
}

void sub_45E730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0x77265B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45E766;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45E766;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_45E771;
    }

loc_45E766:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xD0, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x4, 4));
	goto loc_45E77A;

loc_45E771:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD0, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0x3C, 4));

loc_45E77A:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788804, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788800, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788804, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45E829;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_45E7D2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_45E7D2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788808, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788808, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A190, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	game::__ftol2(ts, mv);
	neg(&ts->eax);
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, 0x7EF7F8);
	sub(&ts->ecx, ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x78, 4));
	imul(&ts->esi, ts->ebp);
	sar(&ts->esi, 0xF);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45E81F;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45E81F;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_45E831;
    }

loc_45E81F:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	goto loc_45E83A;

loc_45E829:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_45E7D2;

loc_45E831:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));

loc_45E83A:
	imul(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB0, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_45E881;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E859;
    }
	game::sub_735550(ts, mv);

loc_45E859:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);

loc_45E881:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45E89D;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45E89D;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_45E89D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45E8A2;

loc_45E89D:
	mov(&ts->eax, 0x1);

loc_45E8A2:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x9C, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xA8, 4));
	setnz(ts->eflags, &ts->cl);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A180);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x2);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45E9D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E923;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_45E92D;

loc_45E923:
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E92D;
    }
	mov(&ts->ecx, 0x2);

loc_45E92D:
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebp, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E93F;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_45E94C;

loc_45E93F:
	cmp(&ts->eflags, ts->ecx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E94C;
    }
	mov(&ts->ecx, 0x7FFF);

loc_45E94C:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E95E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45E96A;

loc_45E95E:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E96A;
    }
	mov(&ts->eax, 0xFFFF);

loc_45E96A:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E97C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45E986;

loc_45E97C:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45E986;
    }
	mov(&ts->eax, 0x1);

loc_45E986:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C5A0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45E9BA;
    }
	push(mv, &ts->esp, 0x7EDDB8);
	mov(&ts->ecx, 0x82C5A0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C5A0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_45E9BA:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_45E9D3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_772650:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45FE80:
	mov(&ts->eax, 0x7DE95C);
	goto ___CxxFrameHandler;
}

void sub_45E9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_45EAB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA28;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA28;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45EA28:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA4A;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA4A;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45EA4A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA6C;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA6C;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45EA6C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA8E;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EA8E;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45EA8E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EAB0;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45EAB0;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_45EAB0:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_45EAC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED3A8);
	retn(mv, &ts->esp);
}

void sub_45EAD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED3AC, 4));
	retn(mv, &ts->esp);
}

void sub_45EAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45EB05;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45EAFD;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45EAF5;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45EAF5:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);

loc_45EAFD:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_45EB05:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);
}

void sub_45EB10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_45EB28;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x7);
	if (!ts->eflags.zero) {
        goto locret_45EB28;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x0);

locret_45EB28:
	retn(mv, &ts->esp, 0xC);
}

void sub_45EB30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45EB50;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_45EB50;
    }
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	goto loc_45EB56;

loc_45EB50:
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);

loc_45EB56:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45EB82;
    }
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x300, 4));
	game::sub_5995E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);

loc_45EB82:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xAC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4), 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7F2238, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->eax, x86::mem(0x7F3338, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45EBC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->ecx, 0x1F0);
	game::sub_457B00(ts, mv);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788814, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_45EC02;
    }
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_45EC02:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x188, 4));
	game::sub_576A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x100, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(ts->edx + 0x2C, 4));
}

void sub_45EC50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45EC97;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45EC6A;
    }
	game::sub_735550(ts, mv);

loc_45EC6A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x0);

loc_45EC97:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45ECD9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45ECAC;
    }
	game::sub_735550(ts, mv);

loc_45ECAC:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x0);

loc_45ECD9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45ECE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45ED64;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xEC, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	if (!ts->eflags.zero) {
        goto loc_45ED03;
    }
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, 0x1);
	goto loc_45ED0A;

loc_45ED03:
	push(mv, &ts->esp, 0x2);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, 0x2);

loc_45ED0A:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(&ts->edi, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	imul(&ts->eax, ts->edi);
	sar(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45ED40;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45ED4C;

loc_45ED40:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45ED4C;
    }
	mov(&ts->eax, 0x7FFF);

loc_45ED4C:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45ED64;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45ED64:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45EE67;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	imul(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	sar(&ts->ecx, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45EDA0;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_45EDAD;

loc_45EDA0:
	cmp(&ts->eflags, ts->ecx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45EDAD;
    }
	mov(&ts->ecx, 0x7FFF);

loc_45EDAD:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45EDCF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45EDDB;

loc_45EDCF:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45EDDB;
    }
	mov(&ts->eax, 0x2000);

loc_45EDDB:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45EDEE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45EDFB;

loc_45EDEE:
	cmp(&ts->eflags, ts->edi, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45EDFB;
    }
	mov(&ts->eax, 0xFFFF);

loc_45EDFB:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45EE18;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45EE24;

loc_45EE18:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45EE24;
    }
	mov(&ts->eax, 0x400);

loc_45EE24:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45EE43;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45EE4F;

loc_45EE43:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45EE4F;
    }
	mov(&ts->eax, 0x2710);

loc_45EE4F:
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45EE67;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_45EE67:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45EE70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_45EFCD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45EFCD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45EFCD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x1);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785510, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_45EEE2;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->eax);

loc_45EEE2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xEC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45EEF6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	goto loc_45EEFF;

loc_45EEF6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));

loc_45EEFF:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->eax);
	push(mv, &ts->esp, 0x1C);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A198);
	game::sub_457E20(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45EF71;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_458260(ts, mv);
	goto loc_45EF73;

loc_45EF71:
	xor_(&ts->eax, ts->eax);

loc_45EF73:
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45EF9C;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);

loc_45EF9C:
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x28, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->ax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	push(mv, &ts->esp, 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, 0x3F800000);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	game::sub_459990(ts, mv);

loc_45EFCD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_45EFF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45F003;
    }
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_45F003:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_45F022;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_45F03A;
    }

loc_45F022:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_45F03A;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_45F03A:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45F050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xC0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_45F097;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45F06A;
    }
	game::sub_735550(ts, mv);

loc_45F06A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xC0, 4), 0x0);

loc_45F097:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45F0A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77243B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_45F1AC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(0x7EC844, 4), 0x78A1A4);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F11F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F0FD;
    }
	game::sub_735550(ts, mv);

loc_45F0FD:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45F11F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->edi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F196;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_458260(ts, mv);
	goto loc_45F198;

loc_45F196:
	xor_(&ts->eax, ts->eax);

loc_45F198:
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BC1C, 4));
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x82BC1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);

loc_45F1AC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x14);

loc_772430:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45F0A0:
	mov(&ts->eax, 0x7DE980);
	goto ___CxxFrameHandler;
}

void sub_45F1C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED3B8);
	retn(mv, &ts->esp);
}

void sub_45F1D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED3BC, 4));
	retn(mv, &ts->esp);
}

void sub_45F1E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45F1FA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F1F2;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45F1F2:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_45F1FA:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_45F210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45F22F;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45F22F;
    }
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	goto loc_45F235;

loc_45F22F:
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);

loc_45F235:
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F261;
    }
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x300, 4));
	game::sub_5995E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);

loc_45F261:
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), 0x3A83126F);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_45F2A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto locret_45F2CD;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_45F2CD;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

locret_45F2CD:
	retn(mv, &ts->esp);
}

void sub_45F2D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F32C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F304;
    }
	game::sub_735550(ts, mv);

loc_45F304:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->ebx);

loc_45F32C:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A1B4);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x14);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F3BF;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5B0);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F3B6;
    }
	push(mv, &ts->esp, 0x7EDDB0);
	mov(&ts->ecx, 0x82C5B0);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5B0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_45F3B6:
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_45F3C5;

loc_45F3BF:
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->ebx);

loc_45F3C5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x1);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_45F3E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), 0x0);
	if (ts->eflags.zero) {
        goto locret_45F40D;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_45F40D;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

locret_45F40D:
	retn(mv, &ts->esp);
}

void sub_45F410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F44F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F42D;
    }
	game::sub_735550(ts, mv);

loc_45F42D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45F44F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F48C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F46A;
    }
	game::sub_735550(ts, mv);

loc_45F46A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45F48C:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45F4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_45AD40(ts, mv);
	retn(mv, &ts->esp);
}

void sub_45F4B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45F581;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F4E3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45F522;
    }

loc_45F4E3:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F51A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F4F8;
    }
	game::sub_735550(ts, mv);

loc_45F4F8:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45F51A:
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	goto loc_45F581;

loc_45F522:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F538;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F544;

loc_45F538:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F544;
    }
	mov(&ts->eax, 0x7FFF);

loc_45F544:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F55D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F569;

loc_45F55D:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F569;
    }
	mov(&ts->eax, 0xFFFF);

loc_45F569:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F581;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_45F581:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F684;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F5AC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_45F5EE;
    }

loc_45F5AC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F5E3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F5C1;
    }
	game::sub_735550(ts, mv);

loc_45F5C1:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45F5E3:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_45F5EE:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1000);
	game::sub_45E3D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F619;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F625;

loc_45F619:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F625;
    }
	mov(&ts->eax, 0x7FFF);

loc_45F625:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F63F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F64B;

loc_45F63F:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F64B;
    }
	mov(&ts->eax, 0xFFFF);

loc_45F64B:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F660;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F66C;

loc_45F660:
	cmp(&ts->eflags, ts->eax, 0x3FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F66C;
    }
	mov(&ts->eax, 0x3FFF);

loc_45F66C:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45F684;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_45F684:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_45F690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED3C8);
	retn(mv, &ts->esp);
}

void sub_45F6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED3CC, 4));
	retn(mv, &ts->esp);
}

void sub_45F6B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_45F6CA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F6C2;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_45F6C2:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_45F6CA:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);
}

void sub_45F6E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_45F700;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_45F700;
    }
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	goto loc_45F706;

loc_45F700:
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);

loc_45F706:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, 0x2B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F73D;
    }
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x7F3040);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45F73D:
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->eax, x86::mem(0x7F3040, 4));
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45F760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F775;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	retn(mv, &ts->esp);

loc_45F775:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_45F780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_45F7F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_45F7F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xF0, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto locret_45F7F7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_45F7F7;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x50, 4));
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.zero) {
        goto loc_45F7BB;
    }
	cmp(&ts->eflags, ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_45F7F6;
    }

loc_45F7BB:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x24, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_45F7D7;
    }
	mov(mv, x86::mem(ts->edx + 0x24, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB4, 4));
	game::sub_458190(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45F7D7:
	mov(mv, x86::mem(ts->eax + 0xF0, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB4, 4));
	game::sub_458190(ts, mv);

loc_45F7F6:
	pop(mv, &ts->esp, ts->esi);

locret_45F7F7:
	retn(mv, &ts->esp, 0x4);
}

void sub_45F800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F92F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->edi, ts->eax);
	imul(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F83F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F84B;

loc_45F83F:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F84B;
    }
	mov(&ts->eax, 0x10000);

loc_45F84B:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F884;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F890;

loc_45F884:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F890;
    }
	mov(&ts->eax, 0x2710);

loc_45F890:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A1C8, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F8B5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F8C1;

loc_45F8B5:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F8C1;
    }
	mov(&ts->eax, 0x400);

loc_45F8C1:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F8D4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F8E1;

loc_45F8D4:
	cmp(&ts->eflags, ts->edi, 0x8013);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F8E1;
    }
	mov(&ts->eax, 0x8013);

loc_45F8E1:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_45F8F7;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45F8FC;
    }

loc_45F8F7:
	mov(&ts->eax, 0x1);

loc_45F8FC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	movzx(&ts->eax, ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45F90D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45F917;

loc_45F90D:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45F917;
    }
	mov(&ts->eax, 0x1);

loc_45F917:
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45F92F;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_45F92F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45F940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x19);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45F951;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x45F9B0, 1));
	jmp(x86::mem(0x45F98C, 4));

__RTC_NumErrors_2:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);

loc_45F95E:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_45F964:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

loc_45F96A:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp);

__RTC_NumErrors_3:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp);

loc_45F976:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45F979:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_45F97F:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);

def_45F951:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_45F9D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_45F9E1;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x45FA08, 1));
	jmp(x86::mem(0x45F9F8, 4));

loc_45F9E8:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45F9EB:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

def_45F9E1:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_45FA20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED3DC);
	retn(mv, &ts->esp);
}

void sub_45FA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED3E0, 4));
	retn(mv, &ts->esp);
}

void sub_45FA40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setz(ts->eflags, &ts->al);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax) - 0x1, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_45FA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45FA6E;
    }
	game::sub_735550(ts, mv);

loc_45FA6E:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_45FA98;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_45FA98:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45FAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xB4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0xDC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xB0, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xD8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	setnz(ts->eflags, &ts->al);
	cmp(&ts->eflags, ts->edx, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0xE0, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xD8, 4), ts->esi);
	setnz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0xE4, 4), ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0xE9, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xDC, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_45FB00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772466);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45FC90;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xA0, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45FC90;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x24, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_45FBED;
    }
	mov(mv, x86::mem(0x7EC844, 4), 0x78A1E0);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45FB5B;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_45FB5B:
	push(mv, &ts->esp, 0x20);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45FBE0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45FB7F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45FB89;

loc_45FB7F:
	cmp(&ts->eflags, ts->eax, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45FB89;
    }
	mov(&ts->eax, 0xF);

loc_45FB89:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45FBE2;
    }
	push(mv, &ts->esp, 0x7EDD50);
	mov(&ts->ecx, 0x82C540);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->ebp + 0xC4, 4), ts->esi);
	goto loc_45FC90;

loc_45FBE0:
	xor_(&ts->esi, ts->esi);

loc_45FBE2:
	mov(mv, x86::mem(ts->ebp + 0xC4, 4), ts->esi);
	goto loc_45FC90;

loc_45FBED:
	mov(mv, x86::mem(0x7EC844, 4), 0x78A1CC);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45FC08;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_45FC08:
	push(mv, &ts->esp, 0x20);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_45FC88;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45FC30;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_45FC3A;

loc_45FC30:
	cmp(&ts->eflags, ts->eax, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_45FC3A;
    }
	mov(&ts->eax, 0xF);

loc_45FC3A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45FC8A;
    }
	push(mv, &ts->esp, 0x7EDD50);
	mov(&ts->ecx, 0x82C540);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_45FC8A;

loc_45FC88:
	xor_(&ts->esi, ts->esi);

loc_45FC8A:
	mov(mv, x86::mem(ts->ebp + 0xC0, 4), ts->esi);

loc_45FC90:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);

loc_772450:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_77245B:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_4731C0:
	mov(&ts->eax, 0x7DE9AC);
	goto ___CxxFrameHandler;
}

void sub_45FCF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED3F0);
	retn(mv, &ts->esp);
}

void sub_45FD00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED3F4, 4));
	retn(mv, &ts->esp);
}

void sub_45FD10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45FD4D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45FD4D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45FCD0;

loc_45FD4D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45FCD0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A228);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45FD50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED400);
	retn(mv, &ts->esp);
}

void sub_45FD60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED404, 4));
	retn(mv, &ts->esp);
}

void sub_45FD70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_45FDAD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_45FDAD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45FCB0;

loc_45FDAD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45FCB0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A1F0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_45FDB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED410);
	retn(mv, &ts->esp);
}

void sub_45FDC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED414, 4));
	retn(mv, &ts->esp);
}

void sub_45FDD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45FDE0;
    }
	mov(&ts->eax, 0xE);
	retn(mv, &ts->esp, 0x4);

loc_45FDE0:
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFF2);
	add(&ts->eax, 0xD);
	retn(mv, &ts->esp, 0x4);
}

void sub_45FDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0xD);
	if (ts->eflags.zero) {
        goto loc_45FE1C;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_45FE22;
    }
	mov(mv, x86::mem(ts->edi + 0x1AC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_45FE1C:
	mov(mv, x86::mem(ts->edi + 0x1A8, 4), ts->esi);

loc_45FE22:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_45FE30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_45FE4D;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_45FE4D;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), 0x0);
	goto loc_45FE53;

loc_45FE4D:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->edx);

loc_45FE53:
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x198, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x1A0, 4), 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_45FE80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77265B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_45FF91;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0xB0, 1), 0x1);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x180, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0xB1, 1), ts->bl);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x20);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_45FF55;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C530);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_45FF52;
    }
	push(mv, &ts->esp, 0x7EDD70);
	mov(&ts->ecx, 0x82C530);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C530);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_45FF52:
	pop(mv, &ts->esp, ts->ebp);
	goto loc_45FF57;

loc_45FF55:
	xor_(&ts->esi, ts->esi);

loc_45FF57:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1A8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x120, 4));
	mov(mv, x86::mem(ts->edi + 0x194, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x130, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, x86::mem(ts->edi + 0xA0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);

loc_45FF91:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772650:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45FE80:
	mov(&ts->eax, 0x7DE95C);
	goto ___CxxFrameHandler;
}

void sub_45FFB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4604CE;
    }
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE20(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x17C, 4));
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->eax);
	game::sub_48B1E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4604CE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x430, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788844, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_460027;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788844, 4));
	goto loc_460042;

loc_460027:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788848, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_460042;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788848, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F4, 4));

loc_460042:
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788848, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A264, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A260, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->eax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ebx, 0x500);
	sub(&ts->ebx, ts->eax);
	game::__ftol2(ts, mv);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788840, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4600B3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788854, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));

loc_4600B3:
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C370(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_43C2B0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	push(mv, &ts->esp, ts->ebx);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	game::sub_43C370(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	game::sub_43C2B0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	mov(&ts->eax, 0xFFFF);
	sub(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_43C370(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	game::sub_43C2B0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	push(mv, &ts->esp, ts->ebx);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	game::sub_43C370(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	game::sub_43C2B0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x198, 4));
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18C, 4));
	if (!ts->eflags.zero) {
        goto loc_460198;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->edx);
	goto loc_4601B9;

loc_460198:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);

loc_4601B9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4601EA;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ecx);
	goto loc_460209;

loc_4601EA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->edx);

loc_460209:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB1, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4604CE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x170, 1));
	test(&ts->eflags, ts->al, ts->al);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x168, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x160, 4));
	if (ts->eflags.zero) {
        goto loc_460258;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x130, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));

loc_460258:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x160, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46032D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x170, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46031D;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x120, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_401250(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x140, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x160, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x168, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x168, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_4011F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x170, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	goto loc_46032D;

loc_46031D:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x171, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46032D;
    }
	mov(mv, x86::mem(ts->esi + 0xB1, 1), 0x0);

loc_46032D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x148, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x140, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE8, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x171, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x16C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	if (!ts->eflags.zero) {
        goto loc_4603A7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x130, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));

loc_4603A7:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_460472;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x171, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_460462;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x130, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_401250(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x16C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x16C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_4011F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x171, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x178, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	goto loc_460472;

loc_460462:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x170, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_460472;
    }
	mov(mv, x86::mem(ts->esi + 0xB1, 1), 0x0);

loc_460472:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x154, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x158, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x150, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x17C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x17C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));

loc_4604CE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_460660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED420);
	retn(mv, &ts->esp);
}

void sub_460670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED424, 4));
	retn(mv, &ts->esp);
}

void sub_460680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebp, ts->ecx);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A268);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x14);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46072C;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C4F8);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460729;
    }
	push(mv, &ts->esp, 0x7EDD78);
	mov(&ts->ecx, 0x82C4F8);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C4F8);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_460729:
	pop(mv, &ts->esp, ts->edi);
	goto loc_46072E;

loc_46072C:
	xor_(&ts->esi, ts->esi);

loc_46072E:
	mov(mv, x86::mem(ts->ebp + 0xB8, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_460756;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));

loc_460756:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0xBC, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_460770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4607E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4607A6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4607B2;

loc_4607A6:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4607B2;
    }
	mov(&ts->eax, 0x7FFF);

loc_4607B2:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xFA0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4607E4;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_4607E4:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4607F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED430);
	retn(mv, &ts->esp);
}

void sub_460800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED434, 4));
	retn(mv, &ts->esp);
}

void sub_460810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_460835;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46082D;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_460825;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_460825:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46082D:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp, 0x4);

loc_460835:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_460840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_460865;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_460865;
    }
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	goto loc_46086B;

loc_460865:
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);

loc_46086B:
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_460888;
    }
	jmp(x86::mem(0x4608B8, 4));

loc_46088F:
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_46089E:
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

def_460888:
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4608D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77265B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A280);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC4, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460A5C;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0xB0, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + 0xCC, 4));
	mov(&ts->edi, ts->edi);

loc_460920:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_460953;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_460931;
    }
	game::sub_735550(ts, mv);

loc_460931:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_460953:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->edi);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x48);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_460A28;
    }
	mov(mv, &ts->eax, x86::mem(0x82BC2C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4609C4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4609CE;

loc_4609C4:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4609CE;
    }
	mov(&ts->eax, 0x3);

loc_4609CE:
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C500);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460A22;
    }
	push(mv, &ts->esp, 0x7EDDC8);
	mov(&ts->ecx, 0x82C500);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C500);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_460A22:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	goto loc_460A2A;

loc_460A28:
	xor_(&ts->esi, ts->esi);

loc_460A2A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	inc(&ts->eax);
	add(&ts->ebx, 0x4);
	add(&ts->ebp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_460920;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_460A5C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);

loc_772650:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45FE80:
	mov(&ts->eax, 0x7DE95C);
	goto ___CxxFrameHandler;
}

void sub_460A70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xA0, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_460C6B;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460C6B;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_460A94:
	sub(&ts->edx, 0x2);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x13C, 4));
	if (ts->eflags.zero) {
        goto loc_460AD2;
    }
	sub(&ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_460AD2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_460AE4;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->ebp, ts->edx);
	if (ts->eflags.zero) {
        goto loc_460AC6;
    }
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_460AE4;
    }
	mov(&ts->edx, ts->edi);
	goto loc_460AE4;

loc_460AC6:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_460AE4;
    }
	mov(&ts->edx, ts->edi);
	goto loc_460AE4;

loc_460AD2:
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460ADE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	goto loc_460AE4;

loc_460ADE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB4, 4));

loc_460AE4:
	cmp(&ts->eflags, ts->edx, 0xE);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_460B1C;
    }
	cmp(&ts->eflags, ts->edx, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460AF3;
    }
	cmp(&ts->eflags, ts->edx, 0x16);
	if (!ts->eflags.zero) {
        goto loc_460B1C;
    }

loc_460AF3:
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->edx, x86::mem(0x7ED240, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->edx);
	mov(mv, &ts->edi, x86::mem(0x7ED240, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2) + 0x33, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(0x7ED240, 4));
	goto loc_460B36;

loc_460B1C:
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edx*4), 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2) + 0x33, 4));
	mov(&ts->edi, 0x7FFF);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->edi);
	mov(mv, x86::mem(ts->edx, 4), ts->edi);

loc_460B36:
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x14, 4));
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460B6E;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_460B5B;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x13C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xE8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_460B81;
    }
	goto loc_460B8F;

loc_460B5B:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460B8F;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x13C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xE9, 1), ts->bl);
	goto loc_460B7F;

loc_460B6E:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_460B8F;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x13C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xE8, 1), ts->bl);

loc_460B7F:
	if (!ts->eflags.zero) {
        goto loc_460B8F;
    }

loc_460B81:
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);

loc_460B8F:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	dec(&ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x138, 4));
	if (ts->eflags.zero) {
        goto loc_460BBE;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_460BBA;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_460BAD;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A0, 4));
	goto loc_460BCC;

loc_460BAD:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460BBA;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x194, 4));
	goto loc_460BCC;

loc_460BBA:
	xor_(&ts->edx, ts->edx);
	goto loc_460BCC;

loc_460BBE:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A0, 4));
	add(mv, &ts->edx, x86::mem(ts->edi + 0x194, 4));
	sar(&ts->edx, 0x1);

loc_460BCC:
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	dec(&ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x138, 4));
	if (ts->eflags.zero) {
        goto loc_460C01;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_460BFD;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_460BF0;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A4, 4));
	goto loc_460C0F;

loc_460BF0:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460BFD;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x198, 4));
	goto loc_460C0F;

loc_460BFD:
	xor_(&ts->edx, ts->edx);
	goto loc_460C0F;

loc_460C01:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A4, 4));
	add(mv, &ts->edx, x86::mem(ts->edi + 0x198, 4));
	sar(&ts->edx, 0x1);

loc_460C0F:
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*2) + 0x3F, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edi*4), 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	dec(&ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x138, 4));
	if (ts->eflags.zero) {
        goto loc_460C45;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_460C41;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_460C34;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A8, 4));
	goto loc_460C53;

loc_460C34:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_460C41;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x19C, 4));
	goto loc_460C53;

loc_460C41:
	xor_(&ts->edx, ts->edx);
	goto loc_460C53;

loc_460C45:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A8, 4));
	add(mv, &ts->edx, x86::mem(ts->edi + 0x19C, 4));
	sar(&ts->edx, 0x1);

loc_460C53:
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC4, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_460A94;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_460C6B:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_460C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_460FE6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460FE5;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, 0x1);
	goto loc_460CA0;

loc_460CA0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_460FD5;
    }
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_460D9D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460CD6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460CE2;

loc_460CD6:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460CE2;
    }
	mov(&ts->eax, 0x7FFF);

loc_460CE2:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460D06;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460D12;

loc_460D06:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460D12;
    }
	mov(&ts->eax, 0x7FFF);

loc_460D12:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460D36;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460D42;

loc_460D36:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460D42;
    }
	mov(&ts->eax, 0x7FFF);

loc_460D42:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460D5C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460D68;

loc_460D5C:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460D68;
    }
	mov(&ts->eax, 0xFFFF);

loc_460D68:
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xB0, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_460D8F;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_460D8F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ebx);
	goto loc_460E82;

loc_460D8F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ebp);
	goto loc_460E82;

loc_460D9D:
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_460E82;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460DC5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460DD1;

loc_460DC5:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460DD1;
    }
	mov(&ts->eax, 0x7FFF);

loc_460DD1:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460DF5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460E01;

loc_460DF5:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460E01;
    }
	mov(&ts->eax, 0x7FFF);

loc_460E01:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460E24;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460E30;

loc_460E24:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460E30;
    }
	mov(&ts->eax, 0x7FFF);

loc_460E30:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xB4, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_460E54;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_460E54;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ebx);
	goto loc_460E5D;

loc_460E54:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ebp);

loc_460E5D:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460E73;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460E7F;

loc_460E73:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460E7F;
    }
	mov(&ts->eax, 0xFFFF);

loc_460E7F:
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);

loc_460E82:
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->edi*2), 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xF8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460E9D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460EA9;

loc_460E9D:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460EA9;
    }
	mov(&ts->eax, 0x400);

loc_460EA9:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*2) + 0x3F, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ecx*4), 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460EC2;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460ECE;

loc_460EC2:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460ECE;
    }
	mov(&ts->eax, 0x400);

loc_460ECE:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x100, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460EE6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460EF2;

loc_460EE6:
	cmp(&ts->eflags, ts->eax, 0x3FF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460EF2;
    }
	mov(&ts->eax, 0x3FF);

loc_460EF2:
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_59FA10(ts, mv);
	fabs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78424C, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460F1F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460F2B;

loc_460F1F:
	cmp(&ts->eflags, ts->eax, 0xB4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460F2B;
    }
	mov(&ts->eax, 0xB4);

loc_460F2B:
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460F54;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460F60;

loc_460F54:
	cmp(&ts->eflags, ts->eax, 0x3E8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460F60;
    }
	mov(&ts->eax, 0x3E8);

loc_460F60:
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	game::sub_5ED490(ts, mv);
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460F82;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460F8E;

loc_460F82:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460F8E;
    }
	mov(&ts->eax, 0x400);

loc_460F8E:
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_5ED530(ts, mv);
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460FB0;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460FBC;

loc_460FB0:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460FBC;
    }
	mov(&ts->eax, 0x400);

loc_460FBC:
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edi*4) + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_460FD5;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_460FD5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_460CA0;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_460FE5:
	pop(mv, &ts->esp, ts->edi);

loc_460FE6:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_460FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	jmp(x86::mem(ts->eax + 0x48, 4));
}

void sub_461000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_461030;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_461030;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp, 4), 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461030;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_461030:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_461040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED444);
	retn(mv, &ts->esp);
}

void sub_461050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED448, 4));
	retn(mv, &ts->esp);
}

void sub_461060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED440, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x7ED440, 4), ts->eax);
	mov(mv, x86::mem(0x82AF90, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_461080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_46109A;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_461092;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_461092:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46109A:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);
}

void sub_4610B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4610DE;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4610E4;
    }
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4610DE:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->esi);

loc_4610E4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4610F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x80, 4));
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A290, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4612F5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xE0, 4));
	imul(&ts->ecx, ts->eax);
	sar(&ts->ecx, 0xF);
	add(&ts->ecx, 0xFFFF8001);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xFFFF8001);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46116F;
    }
	mov(&ts->eax, 0xFFFF8001);
	goto loc_461175;

loc_46116F:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461175;
    }
	xor_(&ts->eax, ts->eax);

loc_461175:
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->eax);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xFFFF8001);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46118E;
    }
	mov(&ts->eax, 0xFFFF8001);
	goto loc_461194;

loc_46118E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461194;
    }
	xor_(&ts->eax, ts->eax);

loc_461194:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4611AE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4611BA;

loc_4611AE:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4611BA;
    }
	mov(&ts->eax, 0x2710);

loc_4611BA:
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_45E290(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC0, 4));
	add(&ts->edx, 0x3E80);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A28C, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFC001);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4611FF;
    }
	mov(&ts->eax, 0xFFFFC001);
	goto loc_46120B;

loc_4611FF:
	cmp(&ts->eflags, ts->eax, 0x3FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46120B;
    }
	mov(&ts->eax, 0x3FFF);

loc_46120B:
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A1C8, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461232;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46123E;

loc_461232:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46123E;
    }
	mov(&ts->eax, 0x400);

loc_46123E:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x134, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46125B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_461267;

loc_46125B:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461267;
    }
	mov(&ts->eax, 0x400);

loc_461267:
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461281;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46128D;

loc_461281:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46128D;
    }
	mov(&ts->eax, 0x10000);

loc_46128D:
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x138, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4612AA;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4612B6;

loc_4612AA:
	cmp(&ts->eflags, ts->eax, 0x61A8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4612B6;
    }
	mov(&ts->eax, 0x61A8);

loc_4612B6:
	mov(mv, x86::mem(ts->ecx + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4612CE;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_4612CE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4612EC;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);

loc_4612EC:
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x8, 2));
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->ax);

loc_4612F5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_461300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x6C);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_461409;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46137A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_461384;

loc_46137A:
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461384;
    }
	mov(&ts->eax, 0x3C);

loc_461384:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C538);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461406;
    }
	push(mv, &ts->esp, 0x7EDE18);
	mov(&ts->ecx, 0x82C538);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C538);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_461406:
	pop(mv, &ts->esp, ts->ebx);
	goto loc_46140B;

loc_461409:
	xor_(&ts->esi, ts->esi);

loc_46140B:
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xB0, 4), ts->esi);
	game::sub_721515(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_461455;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);
	mov(mv, &ts->ax, x86::mem(ts->esp + 0xC, 2));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x48, 2), ts->ax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_461455:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x48, 2), ts->dx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_461470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED454);
	retn(mv, &ts->esp);
}

void sub_461480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED458, 4));
	retn(mv, &ts->esp);
}

void sub_461490(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_461499;
    }
	jmp(x86::mem(0x4614C8, 4));

loc_4614A0:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);

loc_4614A8:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp, 0x4);

loc_4614B0:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp, 0x4);

loc_4614B8:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

def_461499:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);
}

void sub_4614E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	add(&ts->eax, 0xFFFFFFFB);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_461501;
    }
	jmp(x86::mem(0x461534, 4));

loc_461508:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_461513:
	mov(mv, x86::mem(ts->edi + 0xC0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46151E:
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_461529:
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);

def_461501:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_461550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xE4, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_461560(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x100, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_461570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED440, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x7ED440, 4), ts->eax);
	mov(mv, x86::mem(0x82AF90, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, x86::mem(ts->eax + 0x6C, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_461590(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED464);
	retn(mv, &ts->esp);
}

void sub_4615A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED468, 4));
	retn(mv, &ts->esp);
}

void sub_4615B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4615CA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4615C2;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_4615C2:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_4615CA:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_4615E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xB8, 4));
	mov(&ts->ebx, 0x4);

loc_4615F0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_461628;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461608;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_461614;

loc_461608:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_461614;
    }
	mov(&ts->eax, 0x7FFF);

loc_461614:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_461628;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_461628:
	add(&ts->esi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4615F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_461673;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46164F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46165B;

loc_46164F:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46165B;
    }
	mov(&ts->eax, 0x7FFF);

loc_46165B:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_461673;
    }
	add(&ts->edi, 0x4);
	push(mv, &ts->esp, ts->edi);
	game::sub_735580(ts, mv);

loc_461673:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_461680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	mov(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_461727;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED22C, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED178, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));

locret_461727:
	retn(mv, &ts->esp, 0x4);
}

void sub_461730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED474);
	retn(mv, &ts->esp);
}

void sub_461740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED478, 4));
	retn(mv, &ts->esp);
}

void sub_461750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77265B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_461783;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	goto loc_461820;

loc_461783:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A294);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_461817;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C508);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461814;
    }
	push(mv, &ts->esp, 0x7EDDE0);
	mov(&ts->ecx, 0x82C508);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C508);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_461814:
	pop(mv, &ts->esp, ts->edi);
	goto loc_461819;

loc_461817:
	xor_(&ts->esi, ts->esi);

loc_461819:
	mov(mv, x86::mem(ts->ebp + 0xD0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);

loc_461820:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ebp + 0xCC, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772650:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45FE80:
	mov(&ts->eax, 0x7DE95C);
	goto ___CxxFrameHandler;
}

void sub_461840(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_461877;
    }
	mov(&ts->edx, 0x1);
	mov(mv, x86::mem(ts->ecx + 0xC8, 4), 0x41200000);
	mov(mv, x86::mem(ts->ecx + 0xCC, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_461877;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

locret_461877:
	retn(mv, &ts->esp);
}

void sub_461880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_45AD40(ts, mv);
	retn(mv, &ts->esp);
}

void sub_461890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4618AC;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xCC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4618AC;
    }
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x1);
	retn(mv, &ts->esp);

loc_4618AC:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_4618C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4619AD;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4618EC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);

loc_4618EC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xAC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_461919;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xA8, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_461932;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xAC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_461919;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xA8, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_461932;
    }

loc_461919:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	xor_(&ts->bl, ts->bl);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));

loc_461924:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46193F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46194B;

loc_461932:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(&ts->bl, 0x1);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	goto loc_461924;

loc_46193F:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46194B;
    }
	mov(&ts->eax, 0x7FFF);

loc_46194B:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_461971;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46197B;

loc_461971:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46197B;
    }
	mov(&ts->eax, 0x3);

loc_46197B:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1B58);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4619AD;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_4619AD:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4619D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED484);
	retn(mv, &ts->esp);
}

void sub_4619E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED488, 4));
	retn(mv, &ts->esp);
}

void sub_4619F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFF0);
	cmp(&ts->eflags, ts->ecx, 0x70);
	if (!ts->eflags.zero) {
        goto loc_461A12;
    }
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);

loc_461A12:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_461A20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xE4, 4));
	mov(&ts->edi, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_461A30:
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_461A3D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_461A3D:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi - 0x30, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_461A50;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_461A50:
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_461A30;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_461A60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED494);
	retn(mv, &ts->esp);
}

void sub_461A70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED498, 4));
	retn(mv, &ts->esp);
}

void sub_461A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_461ABD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_461ABD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4619B0;

loc_461ABD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4619B0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A2A4);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_461AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4A4);
	retn(mv, &ts->esp);
}

void sub_461AD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4A8, 4));
	retn(mv, &ts->esp);
}

void sub_461AE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_461B0E;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_461B0E;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_461B0E:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_461B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esi, 0xD0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_461B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xB0, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->edi + 0xC, 4), 0x0);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_461CB3;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0xBC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_461C66;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x50, 4));
	imul(&ts->eax, ts->eax, 0xFF);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0xF0, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::sub_459A50(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_461C0F;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_461BDF;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_461BDF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788860, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_461BF6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788860, 4));

loc_461BF6:
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788860, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);

loc_461C0F:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	imul(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	imul(&ts->esi, ts->esi, 0xFF);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	sar(&ts->esi, 0xF);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_461C3E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_461C3E:
	game::__ftol2(ts, mv);
	imul(&ts->eax, ts->esi);
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x132, 1));
	sar(&ts->eax, 0xF);
	test(&ts->eflags, ts->cl, ts->cl);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto def_461C66;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x124, 4));
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_461C66;
    }
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x461CC8, 1));
	jmp(x86::mem(0x461CB8, 4));

loc_461C6D:
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);
	goto def_461C66;

loc_461C79:
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	goto def_461C66;

loc_461C85:
	mov(mv, x86::mem(ts->edi + 0xC, 4), 0x1);

def_461C66:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x108, 4));
	mov(mv, x86::mem(ts->edi + 0xD0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xD8, 4));

loc_461CB3:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_461CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_461DC0;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_461DBF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x124, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x7);
	push(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_461D0E;
    }
	jmp(x86::mem(0x461DC4, 4));

loc_461D15:
	mov(&ts->ebx, 0x1);
	goto loc_461D4F;

loc_461D1C:
	mov(&ts->ebx, 0x2);
	goto loc_461D4F;

loc_461D23:
	mov(&ts->ebx, 0x3);
	goto loc_461D4F;

loc_461D2A:
	mov(&ts->ebx, 0x4);
	goto loc_461D4F;

loc_461D31:
	mov(&ts->ebx, 0x5);
	goto loc_461D4F;

loc_461D38:
	mov(&ts->ebx, 0x6);
	goto loc_461D4F;

loc_461D3F:
	mov(&ts->ebx, 0x7);
	goto loc_461D4F;

loc_461D46:
	mov(&ts->ebx, 0x8);
	goto loc_461D4F;

def_461D0E:
	xor_(&ts->ebx, ts->ebx);

loc_461D4F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xBC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_461D7D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, x86::mem(ts->edi + 0xC8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->edi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x0);

loc_461D7D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->edi + 0xC0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->edi + 0xD4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1000);
	game::sub_45E3D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0xD8, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);

loc_461DBF:
	pop(mv, &ts->esp, ts->edi);

loc_461DC0:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_461DF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_461E0A;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_461E02;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_461E02:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_461E0A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_461E10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, x86::mem(ts->ecx + 0xBC, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xF4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xF8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x104, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x108, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x100, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD8, 4));
	retn(mv, &ts->esp);
}

void sub_461E70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4B4);
	retn(mv, &ts->esp);
}

void sub_461E80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4B8, 4));
	retn(mv, &ts->esp);
}

void sub_461E90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_461EBE;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_461EBE;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_461EBE:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xCC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_461EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xCC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	retn(mv, &ts->esp);
}

void sub_461F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_461F5F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x50, 4), 0x9);
	if (!ts->eflags.zero) {
        goto loc_461F33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	add(&ts->ecx, 0x60);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));

loc_461F33:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_461F5F;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_461F5F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));

loc_461F5F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_461F70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_461F80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4C4);
	retn(mv, &ts->esp);
}

void sub_461F90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4C8, 4));
	retn(mv, &ts->esp);
}

void sub_461FA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4D4);
	retn(mv, &ts->esp);
}

void sub_461FB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4D8, 4));
	retn(mv, &ts->esp);
}

void sub_461FC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4E4);
	retn(mv, &ts->esp);
}

void sub_461FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4E8, 4));
	retn(mv, &ts->esp);
}

void sub_461FE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED4F4);
	retn(mv, &ts->esp);
}

void sub_461FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED4F8, 4));
	retn(mv, &ts->esp);
}

void sub_462000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED504);
	retn(mv, &ts->esp);
}

void sub_462010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED508, 4));
	retn(mv, &ts->esp);
}

void sub_462020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(0x82BC4A, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_462030(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED514);
	retn(mv, &ts->esp);
}

void sub_462040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED518, 4));
	retn(mv, &ts->esp);
}

void sub_462050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED524);
	retn(mv, &ts->esp);
}

void sub_462060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED528, 4));
	retn(mv, &ts->esp);
}

void sub_462070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_462080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xB0, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4621A7;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x18);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46214C;
    }
	movzx(mv, &ts->eax, x86::mem(ts->ebx + 0xBC, 1));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4620FC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462106;

loc_4620FC:
	cmp(&ts->eflags, ts->eax, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462106;
    }
	mov(&ts->eax, 0xF);

loc_462106:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C668);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebp);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462149;
    }
	push(mv, &ts->esp, 0x7EDD80);
	mov(&ts->ecx, 0x82C668);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C668);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_462149:
	pop(mv, &ts->esp, ts->edi);
	goto loc_46214E;

loc_46214C:
	xor_(&ts->esi, ts->esi);

loc_46214E:
	mov(mv, x86::mem(ts->ebx + 0xB0, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_462171;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);

loc_462171:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xB4, 4));
	mov(mv, x86::mem(ts->ebx + 0xB8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xB4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));

loc_4621A7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_4621C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82CB38, 4));
	inc(&ts->eax);
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4621D2;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_4621D2:
	mov(mv, x86::mem(0x82CB38, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xBC, 1), ts->al);
	goto sub_462080;
}

void sub_4621F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46222F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46220D;
    }
	game::sub_735550(ts, mv);

loc_46220D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46222F:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_462240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462263;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_462263:
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_462433;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4622C8;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x550, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4622C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_462433;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462433;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4622C8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462433;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x430, 4));
	add(&ts->esp, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788888, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46236C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46232E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));

loc_46232E:
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->edi, ts->eax);
	game::sub_45E290(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2DC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2DC, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462374;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462380;

loc_46236C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_46232E;

loc_462374:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462380;
    }
	mov(&ts->eax, 0x7FFF);

loc_462380:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46239A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4623A6;

loc_46239A:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4623A6;
    }
	mov(&ts->eax, 0xFFFF);

loc_4623A6:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4623B9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4623C6;

loc_4623B9:
	cmp(&ts->eflags, ts->edi, 0x3FF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4623C6;
    }
	mov(&ts->eax, 0x3FF);

loc_4623C6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFC001);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4623E7;
    }
	mov(&ts->eax, 0xFFFFC001);
	goto loc_4623F3;

loc_4623E7:
	cmp(&ts->eflags, ts->eax, 0x3FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4623F3;
    }
	mov(&ts->eax, 0x3FFF);

loc_4623F3:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46240B;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_46240B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_462429;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_735070(ts, mv);

loc_462429:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);

loc_462433:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_462440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED534);
	retn(mv, &ts->esp);
}

void sub_462450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED538, 4));
	retn(mv, &ts->esp);
}

void sub_462460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED544);
	retn(mv, &ts->esp);
}

void sub_462470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED548, 4));
	retn(mv, &ts->esp);
}

void sub_462480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0xEC, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0xD4, 4), 0x3E19999A);
	mov(mv, x86::mem(ts->ecx + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xD8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xE4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4624C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4624E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46251F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4624FD;
    }
	game::sub_735550(ts, mv);

loc_4624FD:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46251F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC5, 1), ts->bl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_462550(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_462612;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_45E290(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462587;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462593;

loc_462587:
	cmp(&ts->eflags, ts->eax, 0x1FA0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462593;
    }
	mov(&ts->eax, 0x1FA0);

loc_462593:
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4625C8;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4625D4;

loc_4625C8:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4625D4;
    }
	mov(&ts->eax, 0x7FFF);

loc_4625D4:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4625EE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4625FA;

loc_4625EE:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4625FA;
    }
	mov(&ts->eax, 0xFFFF);

loc_4625FA:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462612;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_462612:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_462620(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_462630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED554);
	retn(mv, &ts->esp);
}

void sub_462640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED558, 4));
	retn(mv, &ts->esp);
}

void sub_462650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462663;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_462663:
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_462670(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_462697;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_462697:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4626E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED568);
	retn(mv, &ts->esp);
}

void sub_4626F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED56C, 4));
	retn(mv, &ts->esp);
}

void sub_462700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_462716;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_462716:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_46272C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_46272C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_462742;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_462742:
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_462750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED578);
	retn(mv, &ts->esp);
}

void sub_462760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED57C, 4));
	retn(mv, &ts->esp);
}

void sub_462790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED588);
	retn(mv, &ts->esp);
}

void sub_4627A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED58C, 4));
	retn(mv, &ts->esp);
}

void sub_4627B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED598);
	retn(mv, &ts->esp);
}

void sub_4627C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED59C, 4));
	retn(mv, &ts->esp);
}

void sub_4627D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46280D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46280D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_462770;

loc_46280D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_462770:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A2E4);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_462810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0x772486);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_439F40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x4E20);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(0x89E7E1, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_462958;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_46288C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_462958;
    }

loc_46288C:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xDC, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4628C3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4628A1;
    }
	game::sub_735550(ts, mv);

loc_4628A1:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_4628C3:
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->edi + 0xDC, 4), ts->ebx);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46293D;
    }
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C548);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46293F;
    }
	push(mv, &ts->esp, 0x7EDD68);
	mov(&ts->ecx, 0x82C548);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C548);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi + 0xDC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_46293D:
	xor_(&ts->esi, ts->esi);

loc_46293F:
	mov(mv, x86::mem(ts->edi + 0xDC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_462958:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xD8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46298F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46296D;
    }
	game::sub_735550(ts, mv);

loc_46296D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46298F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0xD8, 4), ts->ebx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x18);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_462A22;
    }
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462A24;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_462A24;

loc_462A22:
	xor_(&ts->esi, ts->esi);

loc_462A24:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->edi + 0xD8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772470:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_77247B:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_772486:
	mov(&ts->eax, 0x7DE9D8);
	goto ___CxxFrameHandler;
}

void sub_462A40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xD8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_462A7D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462A5A;
    }
	game::sub_735550(ts, mv);

loc_462A5A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_462A7D:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xDC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0xD8, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_462ABF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_462A9C;
    }
	game::sub_735550(ts, mv);

loc_462A9C:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_462ABF:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD4, 4));
	mov(mv, x86::mem(ts->edi + 0xDC, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_462AE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_462B5D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_439F40(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	add(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));

loc_462B5D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_462B70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7724A6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x3C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_462F61;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_462C2F;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xDC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462BE7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462BC5;
    }
	game::sub_735550(ts, mv);

loc_462BC5:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_462BE7:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462C24;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462C02;
    }
	game::sub_735550(ts, mv);

loc_462C02:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_462C24:
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	goto loc_462D51;

loc_462C2F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_462D51;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_462D51;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7E1, 1), ts->bl);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_462CD5;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_457BA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_462CD5;
    }
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	game::sub_457E20(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462CCB;
    }
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C548);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462CCD;
    }
	push(mv, &ts->esp, 0x7EDD68);
	mov(&ts->ecx, 0x82C548);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C548);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edi);
	goto loc_462D48;

loc_462CCB:
	xor_(&ts->edi, ts->edi);

loc_462CCD:
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edi);
	goto loc_462D48;

loc_462CD5:
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	game::sub_457E20(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_462D40;
    }
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462D42;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_462D42;

loc_462D40:
	xor_(&ts->edi, ts->edi);

loc_462D42:
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->edi);

loc_462D48:
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);

loc_462D51:
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462D5E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462D7C;

loc_462D5E:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_459AC0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8900B4, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	setnz(ts->eflags, &ts->cl);
	mov(&ts->eax, ts->ecx);

loc_462D7C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462EAE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(&ts->ecx, ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_462DBC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));

loc_462DBC:
	cmp(&ts->eflags, ts->ecx, 0x4000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462DD2;
    }
	cmp(&ts->eflags, ts->ecx, 0xC000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462DD2;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));

loc_462DD2:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A31C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5);
	mov(&ts->edi, ts->eax);
	game::sub_45E290(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462E17;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462E23;

loc_462E17:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462E23;
    }
	mov(&ts->eax, 0x7FFF);

loc_462E23:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462E3D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462E49;

loc_462E3D:
	cmp(&ts->eflags, ts->eax, 0x4000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462E49;
    }
	mov(&ts->eax, 0x4000);

loc_462E49:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462E63;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462E6F;

loc_462E63:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462E6F;
    }
	mov(&ts->eax, 0xFFFF);

loc_462E6F:
	cmp(&ts->eflags, ts->edi, 0xFFFFFC18);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462E89;
    }
	mov(&ts->eax, 0xFFFFFC18);
	goto loc_462E96;

loc_462E89:
	cmp(&ts->eflags, ts->edi, 0x3E8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462E96;
    }
	mov(&ts->eax, 0x3E8);

loc_462E96:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462EAE;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_462EAE:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462F60;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5);
	game::sub_45E290(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462EF1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462EFD;

loc_462EF1:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462EFD;
    }
	mov(&ts->eax, 0x7FFF);

loc_462EFD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462F17;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462F23;

loc_462F17:
	cmp(&ts->eflags, ts->eax, 0x1FA0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462F23;
    }
	mov(&ts->eax, 0x1FA0);

loc_462F23:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_462F3C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_462F48;

loc_462F3C:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_462F48;
    }
	mov(&ts->eax, 0xFFFF);

loc_462F48:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xD8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_462F60;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_462F60:
	pop(mv, &ts->esp, ts->edi);

loc_462F61:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772490:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

unknown_libname_52:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_462B70:
	mov(&ts->eax, 0x7DEA04);
	goto ___CxxFrameHandler;
}

void sub_462FA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED5A8);
	retn(mv, &ts->esp);
}

void sub_462FB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED5AC, 4));
	retn(mv, &ts->esp);
}

void sub_462FC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED5B8);
	retn(mv, &ts->esp);
}

void sub_462FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED5BC, 4));
	retn(mv, &ts->esp);
}

void sub_462FE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46301D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46301D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_462F80;

loc_46301D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_462F80:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A320);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_463020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_439F40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->edx, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4630C7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46309F;
    }
	game::sub_735550(ts, mv);

loc_46309F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);

loc_4630C7:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x18);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->edi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463164;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46314B;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_46314B:
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_463164:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_463180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4631CA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4631A7;
    }
	game::sub_735550(ts, mv);

loc_4631A7:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_4631CA:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4631E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463260;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_463209;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_463215;

loc_463209:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463215;
    }
	mov(&ts->eax, 0x7FFF);

loc_463215:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1000);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46323C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_463248;

loc_46323C:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463248;
    }
	mov(&ts->eax, 0xFFFF);

loc_463248:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xD8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_463260;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_463260:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_463270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED5C8);
	retn(mv, &ts->esp);
}

void sub_463280(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED5CC, 4));
	retn(mv, &ts->esp);
}

void sub_463290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setz(ts->eflags, &ts->al);
	lea(mv, &ts->eax, x86::mem(0xFFFFFFFF, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_4632B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xB);
	if (!ts->eflags.zero) {
        goto locret_4632BE;
    }
	mov(mv, x86::mem(0x82BC54, 1), 0x1);

locret_4632BE:
	retn(mv, &ts->esp);
}

void sub_4632C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4633C1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82BC54, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4633DE;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(0x7ED638, 1), ts->bl);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x90, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46337A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7E5, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_463309;
    }
	cmp(mv, &ts->eflags, x86::mem(0x836474, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463342;
    }

loc_463309:
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46331E;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B08C, 4), ts->ebx);

loc_46331E:
	push(mv, &ts->esp, 0x82B08C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_721990(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82AF60, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	game::sub_721A3C(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_463342:
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463357;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B08C, 4), ts->ebx);

loc_463357:
	push(mv, &ts->esp, 0x82B08C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_721990(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82AF6C, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_721A3C(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46337A:
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46338F;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B08C, 4), ts->ebx);

loc_46338F:
	push(mv, &ts->esp, 0x82B08C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_721990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82AF80, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	game::sub_721A3C(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8);
	game::sub_45DB90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4633C1:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x90, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4633DE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8);
	game::sub_45DB90(ts, mv);

loc_4633DE:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4633F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x82BC54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	mov(mv, &ts->al, x86::mem(0x7ED638, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46340F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(0x7ED638, 1), 0x0);
	retn(mv, &ts->esp);

loc_46340F:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x90, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	mov(mv, &ts->eax, x86::mem(0x82B08C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_463470;
    }
	game::sub_721515(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	game::sub_7219EC(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B060, 4));
	mov(mv, &ts->ecx, x86::mem(0x82AF60, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	game::sub_721A3C(ts, mv);

locret_463470:
	retn(mv, &ts->esp);
}

void sub_463480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_463499;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B08C, 4), 0x0);

loc_463499:
	mov(mv, &ts->ecx, x86::mem(0x82B090, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4634B2;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B090, 4), 0x0);

loc_4634B2:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x82AF60);

loc_4634B8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4634C7;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4634C7:
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x82AF90);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4634B8;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4634E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED63C);
	retn(mv, &ts->esp);
}

void sub_4634F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED640, 4));
	retn(mv, &ts->esp);
}

void sub_463500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_463528;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_463528;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	retn(mv, &ts->esp, 0x4);

loc_463528:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_463540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46357D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46355A;
    }
	game::sub_735550(ts, mv);

loc_46355A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46357D:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_463590(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFF7);
	add(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4635B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0xA0, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4636C3;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4636C3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xB0, 4), ts->ebx);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463628;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4636C3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xB0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46360F;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_46360F:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_463628:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4636C3;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A358);
	movzx(mv, &ts->ebp, x86::mem(ts->edi + 0xB8, 1));
	push(mv, &ts->esp, 0x18);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4636B9;
    }
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46366A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_463674;

loc_46366A:
	cmp(&ts->eflags, ts->ebp, 0x32);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463674;
    }
	mov(&ts->eax, 0x32);

loc_463674:
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4636BB;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4636BB;

loc_4636B9:
	xor_(&ts->esi, ts->esi);

loc_4636BB:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4636C3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_4636E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463759;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_463702;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46370E;

loc_463702:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46370E;
    }
	mov(&ts->eax, 0x7FFF);

loc_46370E:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_463728;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_463734;

loc_463728:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463734;
    }
	mov(&ts->eax, 0xFFFF);

loc_463734:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1000);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_463759;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_463759:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_463760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED64C);
	retn(mv, &ts->esp);
}

void sub_463770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED650, 4));
	retn(mv, &ts->esp);
}

void sub_4637A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED65C);
	retn(mv, &ts->esp);
}

void sub_4637B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED660, 4));
	retn(mv, &ts->esp);
}

void sub_4637C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4637FD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4637FD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_463780;

loc_4637FD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_463780:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A368);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_463800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED66C);
	retn(mv, &ts->esp);
}

void sub_463810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED670, 4));
	retn(mv, &ts->esp);
}

void sub_463820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4638E7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4638E7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46387D;
    }
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46385D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_463869;

loc_46385D:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463869;
    }
	mov(&ts->eax, 0x7FFF);

loc_463869:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1450);
	push(mv, &ts->esp, 0x0);
	goto loc_4638AE;

loc_46387D:
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_463890;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46389C;

loc_463890:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46389C;
    }
	mov(&ts->eax, 0x7FFF);

loc_46389C:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xFA0);
	push(mv, &ts->esp, 0x1);

loc_4638AE:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4638C3;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4638CF;

loc_4638C3:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4638CF;
    }
	mov(&ts->eax, 0xFFFF);

loc_4638CF:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4638E7;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_4638E7:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4638F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFF0);
	if (!ts->eflags.zero) {
        goto loc_46390D;
    }
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);

loc_46390D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_463920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46397C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463954;
    }
	game::sub_735550(ts, mv);

loc_463954:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);

loc_46397C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x7EC844, 4), 0x78A3A0);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x18);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463A39;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_463A20;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_463A20:
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_463A39:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_463A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_463AAA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_463A87;
    }
	game::sub_735550(ts, mv);

loc_463A87:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_463AAA:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_463AC0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_463AD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);
}

void sub_463AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	xor_(&ts->ebp, ts->ebp);
	dec(&ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_463B75;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->edi);
	imul(&ts->esi, ts->esi, 0x2C);
	mov(&ts->ebx, 0x82B0A4);
	goto loc_463B10;

loc_463B10:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x82B0A0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_463B3D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x82B0A4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463B4A;
    }

loc_463B3D:
	inc(&ts->ebp);
	add(&ts->ebx, 0x2C);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_463B10;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_463B4A:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x82B0A0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x82B0A4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x82B0A8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x82B0AC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x82B0B0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	dec(&ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);

loc_463B75:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_463B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_463BA0;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_463B90:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463B90;
    }
	pop(mv, &ts->esp, ts->edi);

loc_463BA0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_463BB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_463BCE;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_463BC0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463BC0;
    }

loc_463BCE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_463BD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463C21;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_463BF6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	goto loc_463BFD;

loc_463BF6:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), 0x0);

loc_463BFD:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_463C20;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_463C10:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463C10;
    }
	pop(mv, &ts->esp, ts->edi);

loc_463C20:
	pop(mv, &ts->esp, ts->esi);

locret_463C21:
	retn(mv, &ts->esp, 0x4);
}

void sub_463C30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463C4F;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_463C4E;
    }
	nop();

loc_463C40:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463C40;
    }

loc_463C4E:
	pop(mv, &ts->esp, ts->esi);

locret_463C4F:
	retn(mv, &ts->esp);
}

void sub_463C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463C6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto loc_463C60;

loc_463C60:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto locret_463C6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_463C60;
    }

loc_463C6C:
	xor_(&ts->eax, ts->eax);

locret_463C6E:
	retn(mv, &ts->esp, 0x4);
}

void sub_463C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463CA3;
    }

loc_463C94:
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_463C94;
    }

loc_463CA3:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ebx);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(ts->edx + 0x2C, 4));
}

void sub_463CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_463CEC;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->edi, ts->edi);

loc_463CD0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x14, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_463CE5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463CF4;
    }

loc_463CE5:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463CD0;
    }

loc_463CEC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_463CF4:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_463D10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_463D71;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	nop();

loc_463D20:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_463D31;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_463D20;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_463D31:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_463D49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_463D5F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	goto loc_463D5F;

loc_463D49:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463D5F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);

loc_463D5F:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));
	dec(mv, x86::mem(ts->edi + 0x18, 4));

loc_463D71:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_463D80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_463BD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ED440, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto locret_463DD0;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AF90, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_463DD0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_463DB1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x44, 4));
	retn(mv, &ts->esp, 0x4);

loc_463DB1:
	game::sub_461000(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_463DD0;
    }
	mov(mv, &ts->eax, x86::mem(0x7ED440, 4));
	mov(mv, x86::mem(0x82AF90, 4), 0x0);
	dec(&ts->eax);
	mov(mv, x86::mem(0x7ED440, 4), ts->eax);

locret_463DD0:
	retn(mv, &ts->esp, 0x4);
}

void sub_463DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x20, 4));
	mov(&ts->ecx, 0x10);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_463E13;
    }

loc_463E04:
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_463E04;
    }

loc_463E13:
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->ebx);
	mov(&ts->ecx, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(ts->edx + 0x2C, 4));
}

void sub_463E30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	mov(&ts->ebx, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_463E40:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463EB1;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	add(&ts->eax, 0x60);
	add(&ts->ecx, 0x60);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A414, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_463E72;
    }
	mov(&ts->al, 0x1);
	goto loc_463E74;

loc_463E72:
	xor_(&ts->al, ts->al);

loc_463E74:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_463E95;
    }
	goto loc_463E80;

loc_463E80:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x3C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_463E8E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi, 4));
	if (ts->eflags.zero) {
        goto loc_463EC9;
    }

loc_463E8E:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_463E80;
    }

loc_463E95:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_463EB1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463EB1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_463EB1:
	add(&ts->esi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_463E40;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_463BD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_463EC9:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_463EB1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	goto loc_463EB1;
}

void sub_463EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_463EF0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_463EFA;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x0);

loc_463EFA:
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_463EF0;
    }
	retn(mv, &ts->esp, 0x4);
}

void sub_463F10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + (ts->eax*4) + 0x20, 4), ts->edx);
	inc(mv, x86::mem(ts->ecx + 0x60, 4));
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_463F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463F3E;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));

loc_463F3E:
	cmp(mv, &ts->eflags, x86::mem(0x82BC58, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	setnz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x82BC5C, 1), ts->al);
	game::sub_463BD0(ts, mv);
	mov(mv, x86::mem(0x82BC58, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_463F60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x38);
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46433F;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 2), ts->ax);
	or_(&ts->ecx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xE, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(&ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, 0x6);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->eax, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_463FC4;
    }

loc_463FB2:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + (ts->edx) + 0xC, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_463FB2;
    }

loc_463FC4:
	mov(&ts->edi, ts->ebx);
	test(&ts->eflags, ts->edi, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46404B;
    }
	nop();

loc_463FD0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xD0, 4));
	mov(mv, &ts->cl, x86::mem(ts->esp + (ts->eax) + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_464039;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->eax*4) + 0x24, 4));
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	lea(mv, &ts->ebp, x86::mem(ts->esp + (ts->eax*4) + 0x24, 4));
	if (!ts->eflags.zero) {
        goto loc_464039;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x7C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_458E70(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_464039;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->edi);

loc_464000:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->eax*4) + 0x24, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_46400E;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464000;
    }
	goto loc_464013;

loc_46400E:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_464039;
    }

loc_464013:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + (ts->eax*4) + 0x30, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->ebp, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_46429A;
    }

loc_464039:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_463FD0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }

loc_46404B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	mov(&ts->esi, ts->ebx);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464120;
    }

loc_464063:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->edx*4) + 0x24, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_464115;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_464080;

loc_464080:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4640B5;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4640A5;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_464095;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4640C6;

loc_464095:
	push(mv, &ts->esp, 0x4);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECB14, 4));
	goto loc_4640C3;

loc_4640A5:
	push(mv, &ts->esp, 0xB);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAE4, 4));
	goto loc_4640C3;

loc_4640B5:
	push(mv, &ts->esp, 0xE);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAA8, 4));

loc_4640C3:
	add(&ts->esp, 0x4);

loc_4640C6:
	xor_(&ts->ecx, ts->ecx);

loc_4640C8:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx*4) + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4640D6;
    }
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4640C8;
    }
	goto loc_4640E3;

loc_4640D6:
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4640E3;
    }
	mov(&ts->ecx, ts->edi);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->ecx, 0x64);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464080;
    }

loc_4640E3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + (ts->edx*4) + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_46429A;
    }

loc_464115:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464063;
    }

loc_464120:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ecx, ts->eax);
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_464150:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_46427D;
    }
	xor_(&ts->cl, ts->cl);
	nop();

loc_464160:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ebx) + 0x10, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46417B;
    }

loc_464167:
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->esi, 0x3);
	idiv(&ts->eax, ts->esi);
	mov(&ts->ebx, ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ebx) + 0x10, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_464167;
    }

loc_46417B:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464268;
    }
	or_(&ts->ebp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_464190:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4641A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->eax*4) + 0x30, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4641AD;
    }

loc_4641A1:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464190;
    }
	goto loc_464268;

loc_4641AD:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_458E70(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4641DE;
    }
	xor_(&ts->eax, ts->eax);

loc_4641C6:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->eax*4) + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4641D6;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4641C6;
    }
	mov(&ts->eax, ts->edi);
	goto loc_464242;

loc_4641D6:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4641DE;
    }
	mov(&ts->eax, ts->edi);
	goto loc_464242;

loc_4641DE:
	xor_(&ts->edi, ts->edi);

loc_4641E0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_464215;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_464205;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4641F5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_464226;

loc_4641F5:
	push(mv, &ts->esp, 0x4);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECB14, 4));
	goto loc_464223;

loc_464205:
	push(mv, &ts->esp, 0xB);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAE4, 4));
	goto loc_464223;

loc_464215:
	push(mv, &ts->esp, 0xE);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAA8, 4));

loc_464223:
	add(&ts->esp, 0x4);

loc_464226:
	xor_(&ts->ecx, ts->ecx);

loc_464228:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx*4) + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_464236;
    }
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464228;
    }
	goto loc_464242;

loc_464236:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_464242;
    }
	mov(&ts->edx, ts->edi);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edx, 0x64);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4641E0;
    }

loc_464242:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + (ts->edx*4) + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46429A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edx + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_46429A;
    }

loc_464268:
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->esi, 0x3);
	idiv(&ts->eax, ts->esi);
	test(&ts->eflags, ts->cl, ts->cl);
	mov(&ts->ebx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_464160;
    }

loc_46427D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464150;
    }

loc_46429A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46433C;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4642B0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx*4) + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4642CF;
    }
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	imul(&ts->eax, ts->eax, 0x4C);
	add(&ts->eax, 0x7F0DE0);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	goto loc_464331;

loc_4642CF:
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->edi*4) + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_458E70(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46430F;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xD0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4642F0:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->edi, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->edi*4) + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_458E70(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4642F0;
    }

loc_46430F:
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->edi*4) + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	imul(&ts->eax, ts->eax, 0x4C);
	add(&ts->eax, 0x7F0DE0);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->edi, ts->edx);

loc_464331:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4642B0;
    }

loc_46433C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_46433F:
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp);
}

void sub_464350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_464365;
    }

loc_464357:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto locret_464367;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464357;
    }

loc_464365:
	xor_(&ts->eax, ts->eax);

locret_464367:
	retn(mv, &ts->esp, 0x4);
}

void sub_464370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4643AB;
    }

loc_464380:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x3C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4643A4;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4643E4;
    }

loc_4643A4:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464380;
    }

loc_4643AB:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4643CF;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4643E4;
    }

loc_4643CF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4643E4;
    }

loc_4643D6:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4643E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4643D6;
    }

loc_4643E4:
	xor_(&ts->eax, ts->eax);

loc_4643E6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4643F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED67C);
	retn(mv, &ts->esp);
}

void sub_464400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED680, 4));
	retn(mv, &ts->esp);
}

void sub_464410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4645CA;
    }
	xor_(&ts->edi, ts->edi);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x24, 2), ts->di);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4645BF;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	nop();

loc_4645CA:

loc_4645BF:

loc_464440:
}

void sub_464552(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0x24);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_464589;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464500;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	goto loc_4645A3;

loc_464576:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_464582;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4645A3;
    }

loc_464582:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	goto loc_4645A3;

loc_464589:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->esi);

loc_464596:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	add(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_4645A3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	movzx(mv, &ts->edx, x86::mem(ts->ebx + 0x24, 2));
	inc(&ts->eax);
	add(&ts->edi, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464440;
    }

loc_4645BF:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_463BD0(ts, mv);

loc_4645CA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_464440:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_439F40(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4645A3;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A514, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46449B;
    }
	mov(&ts->al, 0x1);
	goto loc_46449D;

loc_46449B:
	xor_(&ts->al, ts->al);

loc_46449D:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4644C2;
    }

loc_4644A4:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x3C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4644BB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x40, 4));
	add(&ts->edx, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_464576;
    }

loc_4644BB:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4644A4;
    }

loc_4644C2:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4645A3;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4645A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(&ts->eax, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464596;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4645A3;
    }
	goto loc_464500;

loc_464500:
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_439F40(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_459A50(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
}

void sub_4645E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED784);
	retn(mv, &ts->esp);
}

void sub_4645F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED788, 4));
	retn(mv, &ts->esp);
}

void sub_464600(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4647A8;
    }
	mov(&ts->ebx, 0x7ED798);

loc_4647A8:

loc_464624:
}

void sub_46464F(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46465E;
    }
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->esi);
	goto loc_46478E;

loc_46465E:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), 0x1);
	game::sub_459A50(ts, mv);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A54C, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_464695;
    }
	mov(&ts->al, 0x1);
	goto loc_464697;

loc_464695:
	xor_(&ts->al, ts->al);

loc_464697:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4646B7;
    }
	mov(&ts->edi, ts->edi);

loc_4646A0:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x3C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4646B0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x40, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_464766;
    }

loc_4646B0:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4646A0;
    }

loc_4646B7:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46478E;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46478E;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464786;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46478E;
    }
	goto loc_4646F0;

loc_4646F0:
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_439F40(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_459A50(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0x24);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_464779;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4646F0;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	goto loc_46478E;

loc_464766:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_464772;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46478E;
    }

loc_464772:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	goto loc_46478E;

loc_464779:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, ts->esi);

loc_464786:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_46478E:
	add(&ts->ebx, 0xC);
	cmp(&ts->eflags, ts->ebx, 0x7ED8B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464624;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_463BD0(ts, mv);

loc_4647A8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_464624:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->esi, 0x2);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46478E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x13, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x23, 1), 0x0);
	game::sub_439F40(ts, mv);
}

void sub_4647C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED8B8);
	retn(mv, &ts->esp);
}

void sub_4647D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED8BC, 4));
	retn(mv, &ts->esp);
}

void sub_4647E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x1C);
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4649B7;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, 0xFA0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4649B7;
    }
	cmp(&ts->eflags, ts->eax, 0x1067);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4649B7;
    }
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	goto loc_464820;

loc_464820:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_464831;
    }
	mov(&ts->edi, 0x7F0B80);
	mov(&ts->eax, 0x1F);
	goto loc_464843;

loc_464831:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46499D;
    }
	mov(&ts->edi, 0x7F0D70);
	mov(&ts->eax, 0x7);

loc_464843:
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_464850:
	push(mv, &ts->esp, ts->edi);
	game::sub_459A50(ts, mv);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A584, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_464877;
    }
	mov(&ts->al, 0x1);
	goto loc_464879;

loc_464877:
	xor_(&ts->al, ts->al);

loc_464879:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_464893;
    }

loc_464880:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x3C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_46488C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x40, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4648D6;
    }

loc_46488C:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_464880;
    }

loc_464893:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_464987;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464979;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464987;
    }
	goto loc_4648C0;

loc_4648C0:
	cmp(mv, &ts->eflags, x86::mem(0x8900BC, 4), 0x2);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x40, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4648E8;
    }
	mov(mv, &ts->eax, x86::mem(0x8900B4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	goto loc_46492F;

loc_4648D6:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_464987;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	goto loc_464987;

loc_4648E8:
	mov(mv, &ts->ebx, x86::mem(0x8900B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900B8, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46492C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	goto loc_46492F;

loc_46492C:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));

loc_46492F:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ebx, 0x60);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46496C;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4648C0;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x10, 4));
	goto loc_464987;

loc_46496C:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x10, 4));

loc_464979:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);

loc_464987:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->edi, 0x10);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464850;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));

loc_46499D:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464820;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_463BD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_4649B7:
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4649C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ECB48);
	retn(mv, &ts->esp);
}

void sub_4649D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECB4C, 4));
	retn(mv, &ts->esp);
}

void sub_4649E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A588);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_464A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x40);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_464A4C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_464A40:
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_464A40;
    }

loc_464A4C:
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->ebx);
	nop();

loc_464A50:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	xor_(&ts->dl, ts->dl);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, 0x40);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_464AC0;
    }

loc_464A62:
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx*4) + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_464A7D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0x7F);
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(&ts->dl, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_464A7D;
    }
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, ts->ecx);

loc_464A7D:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464A62;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_464AC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_464AAC;
    }
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x50, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	goto loc_464A50;

loc_464AAC:
	mov(mv, x86::mem(ts->ebx + 0x50, 4), ts->ecx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x50, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	goto loc_464A50;

loc_464AC0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_464AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_464AFD;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_464AE0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sar(&ts->ecx, 0x4);
	and_(&ts->ecx, 0xFFF);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_464B04;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464AE0;
    }

loc_464AFD:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_464B04:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_464B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464B93;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_464B20:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_464B30;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_464B52;
    }

loc_464B30:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_464B52;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x82B07C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_464B8B;
    }

loc_464B52:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_464B6A;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_464B82;
    }

loc_464B6A:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	mov(mv, x86::mem(ts->eax + 0x82B07C, 1), 0x1);

loc_464B82:
	push(mv, &ts->esp, ts->ebp);
	game::sub_463AF0(ts, mv);
	add(&ts->esp, 0x4);

loc_464B8B:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464B20;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_464B93:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_464BA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_464BB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464BCE;
    }
	goto loc_464BC0;

loc_464BC0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464BC0;
    }

loc_464BCE:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464BE3;
    }

loc_464BD5:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464BD5;
    }

loc_464BE3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_464BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464C06;
    }

loc_464BF8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464BF8;
    }

loc_464C06:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_464C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_464C34;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x34, 4));
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x34, 4));
	goto loc_464C3B;

loc_464C34:
	mov(mv, x86::mem(ts->edi + 0x38, 4), 0x0);

loc_464C3B:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_464C5C;
    }

loc_464C46:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464C46;
    }

loc_464C5C:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_464C79;
    }

loc_464C63:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464C63;
    }

loc_464C79:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_464C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_464C9F;
    }
	mov(&ts->edi, ts->edi);

loc_464C90:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464C90;
    }

loc_464C9F:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_464CB5;
    }

loc_464CA6:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464CA6;
    }

loc_464CB5:
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_464CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_464CF4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto loc_464CE0;

loc_464CE0:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4C, 4));
	sar(&ts->edx, 0x4);
	and_(&ts->edx, 0x7F);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_464CF6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464CE0;
    }

loc_464CF4:
	xor_(&ts->eax, ts->eax);

locret_464CF6:
	retn(mv, &ts->esp, 0x4);
}

void sub_464D00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_464D24;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto loc_464D10;

loc_464D10:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4C, 4));
	sar(&ts->edx, 0x4);
	and_(&ts->edx, 0x7F);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_464D24;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464D10;
    }

locret_464D24:
	retn(mv, &ts->esp, 0x4);
}

void sub_464D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_464D51;
    }

loc_464D43:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464D43;
    }

loc_464D51:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_464D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x3C, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_464D81;
    }

loc_464D73:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464D73;
    }

loc_464D81:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_464D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED8C8);
	retn(mv, &ts->esp);
}

void sub_464DA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED8CC, 4));
	retn(mv, &ts->esp);
}

void sub_464DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_464DD4;
    }

loc_464DC6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464DC6;
    }

loc_464DD4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_464DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x3C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_464E02;
    }

loc_464DF4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_464DF4;
    }

loc_464E02:
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_464E10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED8D8);
	retn(mv, &ts->esp);
}

void sub_464E20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED8DC, 4));
	retn(mv, &ts->esp);
}

void sub_464E30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7ED8E8);
	retn(mv, &ts->esp);
}

void sub_464E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ED8EC, 4));
	retn(mv, &ts->esp);
}

void sub_464E50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->edi, ts->ebp);
	sub(&ts->edi, ts->edx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_464E9F;
    }
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_464E9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464E9F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F7745(ts, mv);
	add(&ts->esp, 0x8);

loc_464E9F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_464EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x74, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464ECF;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_464ECF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x82AF5C, 4));
	mov(mv, x86::mem(ts->edi + 0x74, 4), ts->eax);
	mov(&ts->eax, 0x100);
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x82AF5C, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_464EEF;
    }
	mov(mv, x86::mem(0x82AF5C, 4), ts->eax);

loc_464EEF:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(0x82AF5C, 4));
	and_(&ts->ecx, 0xFF);
	or_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_464F10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_464F44;
    }
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_6F55E8;

loc_464F44:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_6F55E8;
}

void sub_464F60(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x68, 4));
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464F6E;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->edx);
	goto loc_464F77;

loc_464F6E:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->esi);

loc_464F77:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x70, 4));
	if (!ts->eflags.zero) {
        goto loc_464F84;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->edx);
	goto loc_464F8D;

loc_464F84:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->esi);

loc_464F8D:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_464FA0;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_464F9D;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));

loc_464F9D:
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->edx);

loc_464FA0:
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_464FC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edi);
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_464FF0;
    }

loc_464FDB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_464FE5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_464FF0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	test(&ts->eflags, ts->edi, 0xFF000000);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_465012;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x120, 4));
	mov(&ts->edi, 0x8);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);

loc_465012:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x64, 4));
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->edi), 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_464FDB;
    }
	mov(mv, &ts->ebx, x86::mem(ts->edx, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->ecx + 0x120, 4));
	if (!ts->eflags.zero) {
        goto loc_465035;
    }
	and_(&ts->eax, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->edi) + 0x3F, 4));
	and_(&ts->edi, 0xFFFFFFC0);
	sub(&ts->edi, ts->eax);

loc_465035:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_465055;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));

loc_465041:
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	and_(&ts->ebp, ts->ebx);
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_46505C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x2C, 4));
	inc(&ts->ecx);
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_465041;
    }

loc_465055:
	mov(&ts->ebp, 0xFFFFFFFE);
	goto loc_465063;

loc_46505C:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46508D;
    }

loc_465063:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edx, 0x4);
	setz(ts->eflags, &ts->bl);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4650F6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edx, 4), 0xFFFFFFFE);
	add(mv, x86::mem(ts->esi + 0x60, 4), ts->edi);
	goto loc_4650F6;

loc_46508D:
	mov(&ts->eax, ts->ebp);
	shl(&ts->eax, 0x18);
	or_(&ts->eax, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edx, 0x4);
	setz(ts->eflags, &ts->bl);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4650F6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->edx, ts->ebp);
	shl(&ts->edx, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) - 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->edx, ts->edi);
	mov(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4650D3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);

loc_4650D3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	add(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4650F6;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4650F6;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x0);

loc_4650F6:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_6F55E8(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46512D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x120, 4));
	if (ts->eflags.zero) {
        goto loc_465164;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	sub(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->edx, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_464FE5;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46512D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx + 0x120, 4));
	if (ts->eflags.zero) {
        goto loc_464FDB;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x60, 4));
	and_(&ts->esi, 0x3F);
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi) + 0x3F, 4));
	and_(&ts->ecx, 0xFFFFFFC0);
	pop(mv, &ts->esp, ts->edi);
	sub(&ts->ecx, ts->esi);
	shl(&ts->ebp, 0x18);
	or_(&ts->ecx, ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_465164:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_465180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F767C(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4651D0;
    }
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_464F60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4651C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4651C1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4651D0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_477220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4651E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76E9(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_6F7C1B(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_46521D;
    }
	push(mv, &ts->esp, 0x465180);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x8);

locret_46521D:
	retn(mv, &ts->esp);
}

void sub_465220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebp, 0x1);
	if (ts->eflags.zero) {
        goto loc_465294;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46524F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_465294;
    }
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);

loc_46524F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x124, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x2);

loc_465264:
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_46528F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x10, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46529D;
    }
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebp);

loc_465281:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_477220(ts, mv);
	add(&ts->esp, 0x8);

loc_46528F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_465294:
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);
	goto loc_465264;

loc_46529D:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x11C, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->edx);
	mov(&ts->edi, ts->ebx);
	mov(&ts->ecx, ts->ebp);

loc_4652B3:
	mov(mv, &ts->al, x86::mem(ts->ecx, 1));
	mov(&ts->dl, ts->al);
	cmp(mv, &ts->eflags, ts->al, x86::mem(ts->edi, 1));
	if (!ts->eflags.zero) {
        goto loc_4652D7;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4652D3;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	mov(&ts->dl, ts->al);
	cmp(mv, &ts->eflags, ts->al, x86::mem(ts->edi + 0x1, 1));
	if (!ts->eflags.zero) {
        goto loc_4652D7;
    }
	add(&ts->ecx, 0x2);
	add(&ts->edi, 0x2);
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4652B3;
    }

loc_4652D3:
	xor_(&ts->ecx, ts->ecx);
	goto loc_4652DC;

loc_4652D7:
	sbb(&ts->ecx, ts->ecx);
	sbb(&ts->ecx, 0xFFFFFFFF);

loc_4652DC:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_465281;
    }
	mov(&ts->edx, ts->ebx);
	mov(&ts->eax, ts->ebp);
	sub(&ts->edx, ts->ebp);

loc_4652E6:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->edx + (ts->eax), 1), ts->cl);
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4652E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x17C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46532E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_6F7C1B(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46528F;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x465180);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_6F76F2;

loc_46532E:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46528F;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x4651E0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_6F76F2;
}

void sub_465390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4653F9;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto locret_4653F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_4653F9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_4653F9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_4653C5;
    }
	mov(&ts->ecx, ts->edi);
	or_(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4653F6;
    }

loc_4653C5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4653D8;
    }
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4653D8;
    }
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4653F6;
    }

loc_4653D8:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx + 0x34, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4653F6;
    }
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x44, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4653F6;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x28, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4) - 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_4653F6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

locret_4653F9:
	retn(mv, &ts->esp);
}

void sub_465400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_465420;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto locret_465420;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->edx);

locret_465420:
	retn(mv, &ts->esp);
}

void sub_465430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_465469;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto locret_465469;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto locret_465469;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x44, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_465469;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x184, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	goto sub_6F7745;

locret_465469:
	retn(mv, &ts->esp);
}

void sub_465470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46549B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto loc_46549B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46549B;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x34, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46549B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	shl(&ts->eax, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax) - 0x10, 4));
	retn(mv, &ts->esp);

loc_46549B:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4654A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4654B3;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x4D525453);
	if (ts->eflags.zero) {
        goto loc_4654B7;
    }

loc_4654B3:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4654B7:
	push(mv, &ts->esp, ts->esi);
	game::sub_464EB0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4654C6;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4654C6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x103);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	game::_strncpy(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->eax);
	game::sub_464F10(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x44, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_465516;
    }
	mov(mv, x86::mem(ts->edi + 0x44, 4), 0x1);

loc_465516:
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	test(&ts->eflags, ts->ebp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_465549;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46553C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_465220(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_46553C:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);

loc_465549:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_465550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_465563;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x4D525453);
	if (ts->eflags.zero) {
        goto loc_465567;
    }

loc_465563:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_465567:
	push(mv, &ts->esp, ts->esi);
	game::sub_464EB0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_465576;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_465576:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_46559E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), ts->ebx);
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46559B;
    }
	nop();

loc_465590:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_465590;
    }

loc_46559B:
	add(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));

loc_46559E:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	game::sub_464F10(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x44, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4655D4;
    }
	mov(mv, x86::mem(ts->edi + 0x44, 4), 0x1);

loc_4655D4:
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	test(&ts->eflags, ts->ebp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4655EC;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);

loc_4655EC:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_465600(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_465621;
    }
	mov(mv, &ts->ebp, x86::mem(ts->ebx, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), 0x4D525453);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_465621;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_465627;
    }

loc_465621:
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_465627:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	add(&ts->ebp, 0x4);
	and_(&ts->esi, 0xFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	sub(&ts->edi, ts->esi);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edi);
	game::sub_6F55E8(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46569C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(&ts->esi, ts->eax);
	shl(&ts->edx, 0x18);
	and_(&ts->esi, 0xFF000000);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_465699;
    }

loc_465675:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_465683;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x3C, 4));
	goto loc_46568A;

loc_465683:
	and_(&ts->eax, 0xFFFFFF);
	add(&ts->ecx, ts->eax);

loc_46568A:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0xFF000000);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_465675;
    }

loc_465699:
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->ecx);

loc_46569C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4656F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_465702;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4D525453);
	if (ts->eflags.zero) {
        goto loc_465705;
    }

loc_465702:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_465705:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_465719;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_465719;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_465719:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_465830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xAC, 4));
	dec(&ts->eax);
	mov(&ts->edx, 0x0);
	if (ts->eflags.zero) {
        goto loc_46584B;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_465844;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46584B;
    }

loc_465844:
	mov(&ts->ecx, 0x1);
	goto loc_46584D;

loc_46584B:
	xor_(&ts->ecx, ts->ecx);

loc_46584D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED1A0, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x82B098, 4), 0x4);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x82B09C, 4), 0x1);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x82B0A0, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->esi, x86::mem(0x7ED178, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A8, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0AC, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B8, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0BC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4658F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), 0x8);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED210, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED174, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_465990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B098, 4), 0x2);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xD0, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->eax + 0x82B0A0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED18C, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_465AE2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), 0x2);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xD4, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED164, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->esi, 4));

loc_465AE2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_465AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), 0x5);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xE0, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED188, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_465B90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->al, ts->dl);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_465BAB;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_465BAB;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_465BB0;

loc_465BAB:
	mov(&ts->eax, 0x1);

loc_465BB0:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->al, ts->dl);
	setnz(ts->eflags, &ts->cl);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(0x82BC2C, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_458F00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	sub(&ts->eax, 0x2);
	add(&ts->esp, 0x4);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	imul(&ts->edi, ts->edi, 0x2C);
	mov(mv, x86::mem(ts->edi + 0x82B098, 4), 0x6);
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	inc(&ts->eax);
	imul(&ts->edi, ts->edi, 0x2C);
	mov(mv, x86::mem(ts->edi + 0x82B09C, 4), 0x1);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*2), 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED1F8, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x82B0A0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(0x7ED180, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0AC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0BC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_465C80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->ecx, 0x4);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_465CD1;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x80, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	goto loc_465CF5;

loc_465CD1:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B09C, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x80, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ecx);

loc_465CF5:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED164, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0AC, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B4, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0BC, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED164, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_465DF2;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_465DC1;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_465DC1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x461550);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->ecx*4) + 0xDC, 4), ts->ebx);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ebx, 0x1);

loc_465DF2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x78, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_465E8E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED164, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_465E8E;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_465E62;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_465E62:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x461560);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->ecx*4) + 0xE4, 4), ts->ebx);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);

loc_465E8E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_465EA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED928, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	add(mv, x86::mem(0x7ED928, 4), 0x4);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(&ts->edx, 0x1);
	mov(mv, x86::mem(ts->esi + 0x82B098, 4), ts->edx);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	imul(&ts->esi, ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x82B09C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x80, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED164, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_465F60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), 0xA);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED21C, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED174, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_466000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x89E7E1, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->esi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->al, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4660BF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_466030;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4660BF;
    }

loc_466030:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), 0x9);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x6);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(0x7ED218, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(0x7ED174, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	inc(mv, x86::mem(ts->eax, 4));

loc_4660BF:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebx, x86::mem(0x7ED194, 4));
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebx, x86::mem(0x7ED170, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(&ts->edx, ts->ebx);
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebp, x86::mem(0x7ED208, 4));
	mov(&ts->ebx, 0x7);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ebp, x86::mem(0x7ED174, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebx, x86::mem(0x7ED20C, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebx, x86::mem(0x7ED174, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	inc(&ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), ts->ebp);
	mov(&ts->edx, ts->ebp);
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), 0x9);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ebx, x86::mem(0x7ED214, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ebx, x86::mem(0x7ED174, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	inc(&ts->ebx);
	mov(&ts->edx, ts->ebx);
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(&ts->ebx, 0xB);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebp, x86::mem(0x7ED228, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, &ts->ebp, x86::mem(0x7ED174, 4));
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(0x7ED224, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(0x7ED174, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_466420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), 0xB);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED220, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED174, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_4664C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), 0xB);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED21C, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED174, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), 0xFFFFFFFF);
	inc(mv, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_466560(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	sar(&ts->eax, 0x1F);
	sub(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->ecx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_466590(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edx);
	imul(&ts->edx, ts->edx, 0x13);
	add(&ts->edx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	movsx(mv, &ts->esi, x86::mem(ts->edx + 0x1, 1));
	shl(&ts->esi, 0x8);
	and_(&ts->eax, 0xF0);
	add(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->edx, 0x4);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->bl, x86::mem(ts->edx - 0x2, 1));
	movsx(mv, &ts->eax, x86::mem(ts->edx - 0x1, 1));
	shl(&ts->eax, 0x8);
	and_(&ts->ebx, 0xF0);
	add(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	mov(&ts->ebx, 0x3);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->edx - 0x4, 1));
	and_(&ts->ecx, 0xF);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED92C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED93C, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->edx - 0x2, 1));
	and_(&ts->ecx, 0xF);
	shl(&ts->ecx, 0x4);
	inc(&ts->edx);
	mov(&ts->edi, ts->edi);

loc_466610:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	movzx(mv, &ts->esi, x86::mem(ts->edx - 0x1, 1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x8, 4));
	mov(&ts->edi, ts->esi);
	shr(&ts->esi, 0x4);
	add(&ts->esi, ts->ecx);
	and_(&ts->edi, 0xF);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edi), 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	movzx(mv, &ts->esi, x86::mem(ts->edx, 1));
	mov(&ts->edi, ts->esi);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	shr(&ts->esi, 0x4);
	add(&ts->esi, ts->ecx);
	and_(&ts->edi, 0xF);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edi), 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	movzx(mv, &ts->esi, x86::mem(ts->edx + 0x1, 1));
	mov(&ts->edi, ts->esi);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	shr(&ts->esi, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	add(&ts->esi, ts->ecx);
	and_(&ts->edi, 0xF);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edi), 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	movzx(mv, &ts->esi, x86::mem(ts->edx + 0x2, 1));
	mov(&ts->edi, ts->esi);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	shr(&ts->esi, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, ts->ecx);
	and_(&ts->edi, 0xF);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edi), 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	movzx(mv, &ts->esi, x86::mem(ts->edx + 0x3, 1));
	mov(&ts->edi, ts->esi);
	and_(&ts->edi, 0xF);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	shr(&ts->esi, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	add(&ts->esi, ts->ecx);
	add(&ts->edx, 0x5);
	add(&ts->eax, 0x28);
	dec(&ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->edi), 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED950, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_466610;
    }
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_466750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_466770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edi);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x47);
	if (!ts->eflags.zero) {
        goto loc_466833;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1, 1), 0x6E);
	if (!ts->eflags.zero) {
        goto loc_466833;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2, 1), 0x73);
	if (!ts->eflags.zero) {
        goto loc_466833;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x3, 1), 0x75);
	if (!ts->eflags.zero) {
        goto loc_466833;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 1), 0x32);
	if (!ts->eflags.zero) {
        goto loc_466833;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x20);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4) + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->edx*4) + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_466825;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->edx, ts->eax);
	nop();

loc_466810:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	sub(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46681B;
    }
	mov(&ts->esi, ts->eax);

loc_46681B:
	add(&ts->edx, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_466810;
    }
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);

loc_466825:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	retn(mv, &ts->esp, 0x4);

loc_466833:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_466840(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46685B;
    }
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_46685B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_466874;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_466874:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46688E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_46688E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	sar(&ts->eax, 0x1F);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);
}

void sub_466910(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46692B;
    }
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_46692B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_466947;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_466947:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_466962;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_466962:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	sar(&ts->eax, 0x1F);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_4669D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4669E9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4669E9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	sar(&ts->eax, 0x1F);
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466A51;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466A23;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);

loc_466A23:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	sub(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	goto loc_466AD9;

loc_466A51:
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466AA5;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466A7B;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_466A7B:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->ecx*4) - 0x8, 4));
	mov(&ts->esi, ts->eax);
	sub(&ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	sub(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4) - 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_466AD7;

loc_466AA5:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax*4) - 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*4), 4));
	sub(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0x8, 4));
	sub(&ts->edx, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));

loc_466AD7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_466AD9:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_466AF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466B0F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_466B1C;
    }

loc_466B0F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_466B1C:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + (ts->edi*4), 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466B2C;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_466B2C:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->edx, ts->edx);
	goto loc_466B40;

loc_466B33:
	mov(&ts->edi, ts->eax);

loc_466B35:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_466B40:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->edx*4), 4));
	sub(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi*4), 4));
	sub(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, ts->edi);
	sub(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	sar(&ts->eax, 0x1F);
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x34, 4));
	add(&ts->eax, ts->edx);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466BE8;
    }
	sub(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	sar(&ts->ecx, 0x1F);
	sub(&ts->ecx, ts->ebx);
	add(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_466B33;
    }
	mov(&ts->edx, ts->ecx);
	goto loc_466B33;

loc_466BE8:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebp + 0x4, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466C2F;
    }
	sub(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	sar(&ts->ecx, 0x1F);
	sub(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->eax) + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466B35;
    }
	goto loc_466B33;

loc_466C2F:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x20, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->edi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_466C60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466D19;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466D19;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xAC, 4));
	mov(&ts->eax, ts->edx);
	sar(&ts->eax, 0x5);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_466CA4;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_466590(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));

loc_466CA4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	and_(&ts->edx, 0x1F);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_466D10;
    }
	goto loc_466CC0;

loc_466CB3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto loc_466CC0;

loc_466CC0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx*4) + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 2));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ax, 0xFFFF8000);
	if (!ts->eflags.zero) {
        goto loc_466CE6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	shr(&ts->eax, 0x1F);
	add(&ts->eax, 0x7FFF);

loc_466CE6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x20);
	mov(mv, x86::mem(ts->ecx + (ts->esi*2), 2), ts->ax);
	if (!ts->eflags.zero) {
        goto loc_466D07;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xAC, 4));
	inc(&ts->edx);
	push(mv, &ts->esp, ts->edx);
	game::sub_466590(ts, mv);
	xor_(&ts->edx, ts->edx);

loc_466D07:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_466CB3;
    }

loc_466D10:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_466D19:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);
}

void sub_466D30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x254);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_466AF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x34, 4));
	sub(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466F3B;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_466AF0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_4669D0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_4669D0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x34, 4));
	sar(&ts->eax, 0x1F);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	sar(&ts->ecx, 0x1F);
	add(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_466E98;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_466E66;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x1F);
	sub(&ts->ebx, ts->edx);
	goto loc_466E83;

loc_466E66:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	sar(&ts->ebx, 0x1F);
	add(&ts->ebx, ts->eax);

loc_466E83:
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	goto loc_466F31;

loc_466E98:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788890, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788894, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fabs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sar(&ts->eax, 0x1F);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_466F37;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_466F0C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_466560(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ebx, ts->eax);
	goto loc_466F29;

loc_466F0C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	sar(&ts->ebx, 0x1F);
	add(&ts->ebx, ts->eax);

loc_466F29:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);

loc_466F31:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_466F43;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_466F37:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));

loc_466F3B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	goto loc_466F47;

loc_466F43:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));

loc_466F47:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x264, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->esi);
	game::sub_466C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(mv, x86::mem(ts->eax + 0x2C, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	sub(mv, x86::mem(ts->eax + 0x3C, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_466F9D;
    }
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));

loc_466F9D:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4670DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x264, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->esi*2), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	game::sub_466C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_466AF0(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_466910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_466C60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467083;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esp + 0x60, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->ebx, ts->edi);

loc_467037:
	movsx(mv, &ts->ecx, x86::mem(ts->eax, 2));
	movsx(mv, &ts->edi, x86::mem(ts->ebx + (ts->eax), 2));
	sub(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->cx, x86::mem(ts->esp + 0x18, 2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->eax, 2), ts->cx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x18, 4));
	inc(&ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467037;
    }

loc_467083:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	add(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->esi), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	sub(&ts->edx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	sub(&ts->esi, ts->edi);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4670DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x264, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi*2), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	game::sub_466C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x14, 4));
	add(&ts->edx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	sub(mv, x86::mem(ts->eax + 0x3C, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));

loc_4670DA:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x30, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467108;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);

loc_467108:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x264, 4));
	mov(&ts->ecx, ts->eax);
	xor_(&ts->ecx, ts->edi);
	and_(&ts->ecx, 0x7FFFFFFF);
	xor_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->edx);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_723515(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x254);
	retn(mv, &ts->esp, 0x4);
}

void sub_467160(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_467181;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467189;
    }
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_467189;
    }

loc_467181:
	xor_(&ts->al, ts->al);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_467189:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788890, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788894, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788898, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fistp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi), 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4671F1;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_4671F1:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);
}

void sub_467230(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_466840(ts, mv);
	mov(&ts->esi, ts->eax);
	game::sub_721F99(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788894, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->esi);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sar(&ts->edx, 0x1F);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax) + 0x1, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x38, 4), ts->ecx);
	game::sub_721FA7(ts, mv);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);
}

void sub_4672A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(0x82B61C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edx, 0x82B61C);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_467341;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_4672C8:
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x4, 4));
	mov(&ts->eax, ts->ecx);
	and_(&ts->ecx, 0xF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	sar(&ts->eax, 0x8);
	add(&ts->edx, 0x4);
	and_(&ts->eax, 0xF);
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	add(&ts->edx, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_467338;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*4), 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_467338;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467338;
    }
	movsx(&ts->edi, ts->bx);
	neg(&ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467310:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ebp*4), 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi - 0x2710, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467310;
    }

loc_467338:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4672C8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_467341:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_467350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x82B620, 4));
	mov(mv, &ts->eax, x86::mem(0x82B61C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->edx);
	and_(&ts->edx, 0xFFFF);
	mov(&ts->ecx, ts->eax);
	mov(&ts->ebp, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0xCC, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x28, 4));
	sar(&ts->ecx, 0x10);
	and_(&ts->ecx, 0xF);
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx*4) + 0x4, 4));
	sar(&ts->eax, 0x8);
	sar(&ts->esi, 0x10);
	and_(&ts->eax, 0xF);
	and_(&ts->esi, 0xF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4673F4;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4673F4;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4673F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x6C, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4673F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xF);
	add(&ts->eax, 0x4);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4673F4;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4673D0:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x2, 1));
	and_(&ts->edx, 0xF);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4673E8;
    }
	add(&ts->eax, 0x4);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4673D0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4673E8:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFFF0000);
	or_(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_4673F4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_467400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_467410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	retn(mv, &ts->esp);
}

void sub_467420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_467430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_467440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x28, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_467457;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edx + (ts->eax*4), 4), ts->esi);
	inc(mv, x86::mem(ts->ecx + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);

locret_467457:
	retn(mv, &ts->esp, 0x4);
}

void sub_467460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_467474;
    }
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0xFFFFD8F0);
	retn(mv, &ts->esp);

loc_467474:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46749A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);

loc_467487:
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x28, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467487;
    }
	pop(mv, &ts->esp, ts->esi);

loc_46749A:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4674A5;
    }
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);

loc_4674A5:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_4674B0;
    }
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);

locret_4674B0:
	retn(mv, &ts->esp);
}

void sub_4674C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	retn(mv, &ts->esp);
}

void sub_4674D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4674E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	sar(&ts->eax, 0x18);
	and_(&ts->eax, 0x1F);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	retn(mv, &ts->esp, 0x8);
}

void sub_467510(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82AF4C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_467528;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_467528:
	mov(mv, &ts->eax, x86::mem(0x82AF48, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46753A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_46753A:
	mov(mv, &ts->eax, x86::mem(0x82AF44, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46754C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_46754C:
	mov(mv, &ts->eax, x86::mem(0x82AF40, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46755E;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_46755E:
	mov(mv, &ts->eax, x86::mem(0x82AF3C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_467570;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_467570:
	mov(mv, &ts->eax, x86::mem(0x82AF38, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_467582;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_467582:
	mov(mv, &ts->eax, x86::mem(0x82AF34, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_467594;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0x4);

loc_467594:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467610(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	xor_(&ts->edx, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0x34, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x5C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xA0, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x64, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	add(&ts->edi, ts->ebp);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4676C1;
    }
	mov(&ts->ebx, 0xA4);
	sub(&ts->ebx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	goto loc_467691;

loc_46768D:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_467691:
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4676B6;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	add(&ts->ebx, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ebx + (ts->edx), 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4676AE;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x18, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	goto loc_4676B4;

loc_4676AE:
	mov(mv, x86::mem(ts->eax, 4), 0x0);

loc_4676B4:
	xor_(&ts->edx, ts->edx);

loc_4676B6:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	inc(&ts->esi);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46768D;
    }

loc_4676C1:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4678A9;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x4, 4));

loc_4676D1:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_46788B;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x3C, 4));
	add(&ts->edi, ts->edx);
	add(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_46770D;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	imul(mv, &ts->esi, x86::mem(ts->edx + (ts->eax), 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x44, 4));
	add(&ts->edi, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x40, 4));
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->eax) + 0x4, 4));
	imul(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(&ts->esi, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->esi);

loc_46770D:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_467746;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->eax), 4));
	imul(mv, &ts->esi, x86::mem(ts->ebx, 4));
	add(mv, x86::mem(ts->ecx + 0x48, 4), ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edx + (ts->eax) + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->eax), 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467743;
    }
	mov(&ts->ebp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467730:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x3, 1));
	and_(&ts->edx, 0xF);
	add(&ts->edi, ts->edx);
	dec(&ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edx*2), 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx*8), 4));
	if (!ts->eflags.zero) {
        goto loc_467730;
    }

loc_467743:
	add(mv, x86::mem(ts->ecx + 0x58, 4), ts->edi);

loc_467746:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_467757;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->eax), 4));
	imul(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(mv, x86::mem(ts->ecx + 0x54, 4), ts->edx);

loc_467757:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4677E3;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ebp), 4));
	imul(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(mv, x86::mem(ts->ecx + 0x4C, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->ebp), 4), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp) + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4677E3;
    }
	mov(&ts->edi, ts->edi);

loc_467780:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x2, 1));
	add(&ts->esi, 0x8);
	xor_(&ts->edi, ts->edi);
	and_(&ts->edx, 0xFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4677C6;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	goto loc_4677A0;

loc_4677A0:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x2, 1));
	and_(&ts->edx, 0xFF);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_4677B7;
    }
	add(mv, &ts->edi, x86::mem(ts->ecx + (ts->edx*4) + 0x4, 4));
	goto loc_4677B8;

loc_4677B7:
	inc(&ts->edi);

loc_4677B8:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esi, 0x4);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4677A0;
    }

loc_4677C6:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	imul(&ts->edx, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x64, 4));
	add(&ts->edi, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x64, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebp), 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467780;
    }

loc_4677E3:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_467883;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp) + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x6C, 4));
	inc(&ts->edx);
	imul(&ts->esi, ts->edx);
	add(&ts->edi, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ebp), 4));
	imul(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(&ts->esi, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->esi);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->ebp), 4), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp) + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467883;
    }

loc_467821:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x2, 1));
	add(&ts->esi, 0xC);
	xor_(&ts->edi, ts->edi);
	and_(&ts->edx, 0xFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467866;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_467840:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x2, 1));
	and_(&ts->edx, 0xFF);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_467857;
    }
	add(mv, &ts->edi, x86::mem(ts->ecx + (ts->edx*4) + 0x4, 4));
	goto loc_467858;

loc_467857:
	inc(&ts->edi);

loc_467858:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esi, 0x4);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_467840;
    }

loc_467866:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	imul(&ts->edx, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x5C, 4));
	add(&ts->edi, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x5C, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebp), 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467821;
    }

loc_467883:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));

loc_46788B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	add(&ts->edi, 0x4);
	inc(&ts->eax);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4676D1;
    }

loc_4678A9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_4678C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, 0x78A6A8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x2C);
	game::sub_440DF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x82AF34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, 0x78A68C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1C);
	game::sub_440DF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x82AF38, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, 0x78A674);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2C);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82AF3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78A65C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x48);
	game::sub_440DF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x82AF40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x78A640);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x58);
	game::sub_440DF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x82AF44, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, 0x78A628);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7C);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82AF48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78A610);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x2C);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82AF4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4679CC;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_4679CC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467A09;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467A09:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x6);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467A46;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467A46:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467A86;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467A86:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467AC6;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467AC6:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467B06;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467B06:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467B4E;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_467B4E:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_467B60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_467BD7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(0x0, 4));
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_467BC0;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_467BC0:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_467BD7:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0xE, 1));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_467BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467C19;
    }

loc_467C02:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_467C2B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467C02;
    }

loc_467C19:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	and_(&ts->ebx, 0xFF);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebx*4), 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_467C2B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edi*4), 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_467C40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467C83;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467C50:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + (ts->esi*4), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467C50;
    }

loc_467C83:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467CC8;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467CA0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF34, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + (ts->edi*4), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467CA0;
    }

loc_467CC8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467CF8;
    }

loc_467CD1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi*4), 4));
	mov(mv, &ts->eax, x86::mem(0x82AF38, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->ecx + (ts->edi*4), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467CD1;
    }

loc_467CF8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_467D08;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_467D08:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_467D18;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_467D18:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467D20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467D63;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467D30:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF40, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + (ts->esi*4), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467D30;
    }

loc_467D63:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467D70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467DB3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467D80:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + (ts->esi*4), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467D80;
    }

loc_467DB3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467DC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x3C, 4));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467E35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);

loc_467DE5:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_467E1F;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x54, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467E1F;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x78, 4));
	mov(&ts->ecx, ts->ebp);
	and_(&ts->ecx, 0xFF);
	shl(&ts->ecx, 0x2);
	mov(&ts->ebx, ts->esi);

loc_467E04:
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->esi), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_467E15;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);

loc_467E15:
	add(&ts->edx, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_467E04;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));

loc_467E1F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebp);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467DE5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_467E35:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_467E40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_467E64;
    }
	goto loc_467E50;

loc_467E50:
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_467E69;
    }
	mov(&ts->edi, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_467E50;
    }

loc_467E64:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_467E69:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_467E70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467E93;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_467E80:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467E80;
    }

loc_467E93:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467EB3;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_467EA0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467EA0;
    }

loc_467EB3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467ED5;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_467EC1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467EC1;
    }

loc_467ED5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467EF3;
    }
	mov(&ts->edi, ts->edi);

loc_467EE0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467EE0;
    }

loc_467EF3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467F62;
    }
	mov(&ts->ebx, 0xFFFFD8F0);
	push(mv, &ts->esp, ts->ebp);

loc_467F02:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x14, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edi*4), 4));
	if (ts->eflags.zero) {
        goto loc_467F1A;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	goto loc_467F59;

loc_467F1A:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467F43;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x38, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_467F30:
	mov(mv, &ts->ebp, x86::mem(ts->edx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp, 4));
	add(mv, x86::mem(ts->eax + 0x10, 4), ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x28, 4));
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467F30;
    }

loc_467F43:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467F4E;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);

loc_467F4E:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_467F59;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);

loc_467F59:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467F02;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_467F62:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_467F83;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_467F70:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_467F70;
    }

loc_467F83:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A6C4);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_467FCF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);

loc_467FCF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_467FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_468000;
    }
	mov(&ts->eax, 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_468000:
	mov(&ts->eax, 0xE4C8B7B5);
	imul(&ts->eax, ts->esi);
	sar(&ts->edx, 0x6);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(&ts->ecx, ts->edx);
	mov(&ts->eax, ts->esi);
	cdq(&ts->eax, ts->edx);
	mov(&ts->esi, 0x25A);
	idiv(&ts->eax, ts->esi);
	mov(&ts->eax, 0x7EE7EC);
	mov(mv, x86::mem(0x82BC8C, 4), ts->ecx);
	neg(&ts->edx);
	mov(mv, x86::mem(0x82BC90, 4), ts->edx);
	shl(&ts->edx, 0x2);
	sub(&ts->eax, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, ts->cl);
	cmp(&ts->eflags, ts->eax, 0x32);
	mov(mv, x86::mem(0x82BC88, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46804A;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82BC88, 4), ts->eax);

loc_46804A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_468050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x30);
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x82BC88, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_468070;
    }
	mov(&ts->eax, 0xFFFFD8F0);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);

loc_468070:
	test(&ts->eflags, ts->ah, 0x40);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46808D;
    }

loc_468076:
	cmp(&ts->eflags, ts->edx, 0x10);
	if (ts->eflags.zero) {
        goto loc_46812E;
    }
	inc(&ts->edx);
	mov(&ts->esi, 0x4000);
	mov(&ts->ecx, ts->edx);
	sar(&ts->esi, ts->cl);
	test(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_468076;
    }

loc_46808D:
	mov(&ts->esi, 0x4000);
	mov(&ts->ecx, ts->edx);
	sar(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3);
	sub(&ts->eax, ts->esi);
	mov(&ts->esi, ts->eax);
	or_(&ts->eax, 0xFFFFFFFF);
	sub(&ts->eax, ts->edx);
	imul(&ts->eax, ts->eax, 0x25A);
	cmp(&ts->eflags, ts->edx, 0x5);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xF);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1F);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3F);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x7F);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFF);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x1FF);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x3FF);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x7FF);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_468117;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x5, 4));
	shl(&ts->esi, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->ecx*4) + 0x4, 4));
	or_(&ts->esi, ts->ecx);
	goto loc_468120;

loc_468117:
	mov(&ts->ecx, 0x5);
	sub(&ts->ecx, ts->edx);
	sar(&ts->esi, ts->cl);

loc_468120:
	add(mv, &ts->eax, x86::mem(0x7EE7F0, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFD8F0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_468133;
    }

loc_46812E:
	mov(&ts->eax, 0xFFFFD8F0);

loc_468133:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_468140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_468160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_468176;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x10, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));

loc_468176:
	jmp(x86::mem(0x468350, 4));

loc_46817D:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4682F9;
    }
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x6);
	goto loc_4681F0;

loc_468195:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46830A;
    }
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	xor_(&ts->eax, ts->eax);
	goto loc_4681F0;

loc_4681AA:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46831B;
    }
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x4);
	goto loc_4681F0;

loc_4681C2:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46832C;
    }
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x2);
	goto loc_4681F0;

loc_4681DA:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46833D;
    }
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x8);

loc_4681F0:
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_468176;
    }

def_468176:
	xor_(&ts->eax, ts->eax);

loc_4681F7:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4681F9:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_46820F;
    }
	mov(&ts->edx, 0x7FFF);
	sub(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_468050(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46820F:
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_468218:
	mov(&ts->esi, ts->ecx);
	sar(&ts->esi, 0x6);
	mov(mv, &ts->eax, x86::mem(0x7EF7F8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4682C3;
    }
	mov(mv, &ts->esi, x86::mem(0x7EF7FC, 4));
	and_(&ts->ecx, 0x1E);
	shl(&ts->ecx, 0x9);
	sub(&ts->esi, ts->eax);
	or_(&ts->ecx, 0x3FF);
	imul(&ts->esi, ts->ecx);
	sar(&ts->esi, 0xF);
	add(&ts->eax, ts->esi);
	goto loc_4682C3;

loc_46824B:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_46826C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);

loc_468254:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	shl(&ts->eax, 0x1);

loc_46825E:
	cmp(&ts->eflags, ts->eax, 0xFFFFDA80);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4681F7;
    }
	mov(&ts->eax, 0xFFFFD8F0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46826C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_468160(ts, mv);
	imul(&ts->eax, ts->eax);
	add(&ts->esp, 0xC);
	sar(&ts->eax, 0xF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_468281:
	mov(&ts->eax, ts->ecx);
	sar(&ts->eax, 0x6);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, 0x1FF);
	sub(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EF7F8, 4));
	mov(mv, &ts->ebx, x86::mem(0x7EF7FC, 4));
	mov(&ts->edi, 0x7FFF);
	sub(&ts->edi, ts->eax);
	and_(&ts->ecx, 0x1E);
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ebx);
	sub(&ts->eax, ts->edi);
	shl(&ts->ecx, 0x9);
	or_(&ts->ecx, 0x3FF);
	imul(&ts->eax, ts->ecx);
	sar(&ts->eax, 0xF);
	add(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4682C3:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4681F7;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_468050(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_46825E;

loc_4682D6:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4682E4;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	goto loc_468254;

loc_4682E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	game::sub_468160(ts, mv);
	imul(&ts->eax, ts->eax);
	add(&ts->esp, 0xC);
	sar(&ts->eax, 0xF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4682F9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46830A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46831B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46832C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x2);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46833D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_468380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_468160(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(&ts->ebx, ts->eax);
	mov(&ts->eax, 0x7FFF);
	if (ts->eflags.zero) {
        goto loc_4683B8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);

loc_4683B8:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + (ts->ebp), 4));
	mov(&ts->edx, 0x7FFF);
	sub(&ts->edx, ts->ecx);
	imul(&ts->ecx, ts->eax);
	imul(&ts->edx, ts->ebx);
	sar(&ts->edx, 0xF);
	sar(&ts->ecx, 0xF);
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_468050(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4683E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	or_(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	and_(&ts->eax, 0xFF0000);
	or_(&ts->eax, ts->esi);
	or_(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	or_(&ts->eax, 0x90000000);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	add(&ts->edx, 0x4);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->edx);
	mov(mv, x86::mem(0x82BCA0, 4), ts->eax);
	mov(mv, x86::mem(0x82BC9C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0xFFFFD8F0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_468430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	add(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edx, 4));
	and_(&ts->edx, 0xFF00);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	mov(mv, &ts->si, x86::mem(ts->edx + 0xA, 2));
	xor_(&ts->eax, ts->eax);
	and_(&ts->esi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46845E;
    }
	mov(&ts->eax, ts->esi);

loc_46845E:
	xor_(&ts->esi, ts->esi);
	mov(mv, &ts->si, x86::mem(ts->edx + 0xE, 2));
	and_(&ts->esi, 0x7FFF);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468470;
    }
	mov(&ts->eax, ts->esi);

loc_468470:
	xor_(&ts->esi, ts->esi);
	mov(mv, &ts->si, x86::mem(ts->edx + 0x12, 2));
	and_(&ts->esi, 0x7FFF);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468482;
    }
	mov(&ts->eax, ts->esi);

loc_468482:
	movsx(mv, &ts->edx, x86::mem(ts->edx + 0x16, 2));
	and_(&ts->edx, 0x7FFF);
	cmp(&ts->eflags, ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46849A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edx);
	retn(mv, &ts->esp, 0xC);

loc_46849A:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	retn(mv, &ts->esp, 0xC);
}

void sub_4684B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1F, 1));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x0);
	and_(&ts->eax, 0xF);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46850A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	push(mv, &ts->esp, ts->ebx);

loc_4684D3:
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x3, 1));
	and_(&ts->ebx, 0xF);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4684EC;
    }
	inc(&ts->ecx);
	add(&ts->eax, 0x18);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4684D3;
    }
	goto loc_468509;

loc_4684EC:
	mov(mv, &ts->edx, x86::mem(0x82BCA0, 4));
	mov(mv, x86::mem(0x82BC9C, 4), ts->edx);
	mov(mv, x86::mem(0x82BCA0, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x24, 4));
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);

loc_468509:
	pop(mv, &ts->esp, ts->ebx);

loc_46850A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	and_(&ts->eax, 0xFF00);
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xA, 2));
	xor_(&ts->eax, ts->eax);
	and_(&ts->edx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46852F;
    }
	mov(&ts->eax, ts->edx);

loc_46852F:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xE, 2));
	and_(&ts->edx, 0x7FFF);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468541;
    }
	mov(&ts->eax, ts->edx);

loc_468541:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0x12, 2));
	and_(&ts->edx, 0x7FFF);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468553;
    }
	mov(&ts->eax, ts->edx);

loc_468553:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x16, 2));
	and_(&ts->ecx, 0x7FFF);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46856D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x30, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_46856D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_468580(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(0x82BB3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4685C8;
    }
	mov(mv, &ts->eax, x86::mem(0x82BB40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4685B0;
    }
	mov(mv, &ts->eax, x86::mem(0x82BB40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4685C8;
    }

loc_4685B0:
	mov(mv, &ts->eax, x86::mem(0x82BB48, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82BB50, 4));
	if (ts->eflags.zero) {
        goto loc_4685C8;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4684B0(ts, mv);

loc_4685C8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(&ts->ebp, ts->edx);
	sar(&ts->edx, 0xC);
	sar(&ts->ebp, 0x8);
	xor_(&ts->ebx, ts->ebx);
	and_(&ts->edx, 0xF);
	and_(&ts->ebp, 0xF);
	and_(&ts->eax, 0xFFFF0000);
	sub(&ts->edx, ts->ebx);
	mov(&ts->esi, 0x8);
	mov(&ts->edi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_468606;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_4685FB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	goto loc_468610;

loc_4685FB:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	goto loc_468610;

loc_468606:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));

loc_468610:
	sub(&ts->ebp, 0x0);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_468628;
    }
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_468635;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x8, 4));
	goto loc_468632;

loc_468628:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0xC, 4));

loc_468632:
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->ebp);

loc_468635:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x14, 4));
	mov(&ts->edx, ts->ebp);
	sar(&ts->edx, 0xE);
	and_(&ts->edx, 0x3);
	cmp(&ts->eflags, ts->edx, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46864D;
    }
	jmp(x86::mem(0x4688D8, 4));

loc_468654:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(&ts->esi, ts->edx);
	and_(&ts->esi, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x10);
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->edx, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	sar(&ts->ecx, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	and_(&ts->ecx, 0x7FFF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	sar(&ts->esi, 0x1C);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	sar(&ts->eax, 0x10);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ebx, ts->ebp);
	goto loc_4687E4;

loc_4686B7:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->esi, ts->edx);
	and_(&ts->esi, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x10);
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->edx, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	sar(&ts->ecx, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	and_(&ts->ecx, 0x7FFF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	sar(&ts->esi, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	sar(&ts->eax, 0x18);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebp - 0x4000, 4));
	goto loc_4687E4;

loc_46871E:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x14, 4));
	mov(&ts->esi, ts->edx);
	and_(&ts->esi, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x10);
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->edx, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	sar(&ts->ecx, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	and_(&ts->ecx, 0x7FFF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	sar(&ts->esi, 0x18);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	sar(&ts->eax, 0x14);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebp - 0x8000, 4));
	goto loc_4687E4;

loc_468782:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(&ts->esi, ts->edx);
	and_(&ts->esi, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x10);
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->edx, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	and_(&ts->edx, 0x7FFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	sar(&ts->ecx, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	and_(&ts->ecx, 0x7FFF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	sar(&ts->esi, 0x14);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	sar(&ts->eax, 0x1C);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebp - 0xC000, 4));

loc_4687E4:
	and_(&ts->esi, 0xF);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	and_(&ts->eax, 0xF);
	mov(&ts->edi, ts->eax);

def_46864D:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46881B;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46881B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0xFFFFD8F0);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_46881B:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46882C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_46882C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_468843;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);

loc_468843:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_468854;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_468854:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46886B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);

loc_46886B:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(0x82BC94, 4), ts->eax);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82BC94);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BC98, 4), ts->eax);
	game::sub_468380(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_4688F0(x86::thread_state* ts, x86::memory_view* mv) {
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_468900(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	and_(&ts->eax, 0xFFFF);
	cmp(&ts->eflags, ts->eax, 0x2710);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_46892B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	or_(&ts->eax, 0xFFFF0000);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);

locret_46892B:
	retn(mv, &ts->esp, 0x10);
}

void sub_468930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	retn(mv, &ts->esp);
}

void sub_468940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp);
}

void sub_468950(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	retn(mv, &ts->esp);
}

void sub_468960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->eax, 0xC);
	and_(&ts->eax, 0xF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	and_(&ts->edx, 0xFFF);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	and_(&ts->ecx, 0xFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	sar(&ts->eax, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	and_(&ts->eax, 0xF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ebx, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4689ED;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_468A2F;
    }
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->edx, 0x7FFF);
	sub(&ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4689ED:
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_468A56;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_468A18;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_468A24;

loc_468A18:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468A24;
    }
	mov(&ts->eax, 0x7FFF);

loc_468A24:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_468A3F;
    }

loc_468A2F:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468A3F:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x7FFF);
	sub(&ts->ecx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468A56:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_468A70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->eax, 0xC);
	and_(&ts->eax, 0xF);
	and_(&ts->edx, 0xFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	and_(&ts->eax, 0xFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(&ts->ecx, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	and_(&ts->ecx, 0xFFF);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	sar(&ts->eax, 0xC);
	and_(&ts->eax, 0xF);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	mov(&ts->ebx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_468B1B;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_468B72;
    }
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->edx, 0x7FFF);
	sub(&ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_468B1B:
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_468BB4;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_468B9D;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_468B5B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_468B67;

loc_468B5B:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_468B67;
    }
	mov(&ts->eax, 0x7FFF);

loc_468B67:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_468B84;
    }

loc_468B72:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_468B84:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x7FFF);
	sub(&ts->ecx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_468B9D:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_468BB4:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_468BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->eax, 0xC);
	and_(&ts->eax, 0xF);
	and_(&ts->edx, 0xFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0xFFF);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	sar(&ts->eax, 0xC);
	and_(&ts->eax, 0xF);
	mov(&ts->ebp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A728, 4));
	xor_(&ts->ebx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_468C7B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_468C49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468C49:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_468CE2;
    }

loc_468C63:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x7FFF);
	pop(mv, &ts->esp, ts->edi);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468C7B:
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_468CF3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_468C99;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);

loc_468C99:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_468CC5;
    }
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468CC5:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_468C63;
    }

loc_468CE2:
	game::sub_468160(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468CF3:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_468D27;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_468D27;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x7FFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_468D27:
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_468D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	xor_(&ts->ebx, ts->ebx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_468D6B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_468D6B;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_468D6B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	xor_(&ts->eax, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x3, 1));
	and_(&ts->eax, 0xF);
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_468DA7;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_468D9E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_468D95;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	goto loc_468DAE;

loc_468D95:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	goto loc_468DAE;

loc_468D9E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	goto loc_468DAE;

loc_468DA7:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));

loc_468DAE:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A72C, 4));
	if (ts->eflags.zero) {
        goto loc_468DEB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_468DD0;
    }
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	goto loc_468DEE;

loc_468DD0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	sub(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	add(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_468DF3;

loc_468DEB:
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));

loc_468DEE:
	game::__ftol2(ts, mv);

loc_468DF3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_468E20(x86::thread_state* ts, x86::memory_view* mv) {
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_468E28;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x10, 4));
	retn(mv, &ts->esp);

loc_468E28:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_468E30(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto locret_468E62;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto locret_468E62;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

locret_468E62:
	retn(mv, &ts->esp);
}

void sub_468E70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->esi), 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_468E8E;
    }
	mov(&ts->eax, ts->edx);
	sub(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_468E8E;
    }
	mov(&ts->eax, ts->ecx);

loc_468E8E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_468E90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_468ED0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A730);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x1);
	retn(mv, &ts->esp);
}

void sub_468EE0(x86::thread_state* ts, x86::memory_view* mv) {
	inc(mv, x86::mem(0x82B968, 4));
	mov(mv, &ts->eax, x86::mem(0x82AFA8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x8);
}

void sub_468F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x82B968, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x82AFA8, 4));
	push(mv, &ts->esp, ts->eax);
	dec(&ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x82B968, 4), ts->edx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);
}

void sub_468F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x9C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_468F4A;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto loc_459D90;

locret_468F4A:
	retn(mv, &ts->esp, 0x4);

loc_459D90:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_459DA8;
    }
	mov(mv, &ts->eax, x86::mem(0x7ECF30, 4));
	mov(mv, x86::mem(0x7ECD84, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7ECF34, 4));
	goto loc_459DB9;

loc_459DA8:
	mov(mv, &ts->ecx, x86::mem(0x7ECF38, 4));
	mov(mv, &ts->eax, x86::mem(0x7ECF3C, 4));
	mov(mv, x86::mem(0x7ECD84, 4), ts->ecx);

loc_459DB9:
	mov(mv, x86::mem(0x7ECD88, 4), ts->eax);
	mov(mv, x86::mem(0x7ECD98, 4), ts->eax);
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto locret_459DF2;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0xC, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_459DE6;
    }
	mov(mv, &ts->eax, x86::mem(0x7ECF40, 4));
	mov(mv, x86::mem(0x7ECE98, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_459DE6:
	mov(mv, &ts->ecx, x86::mem(0x7ECF44, 4));
	mov(mv, x86::mem(0x7ECE98, 4), ts->ecx);

locret_459DF2:
	retn(mv, &ts->esp, 0x4);
}

void sub_468F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_458680(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_468F68;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_468F68:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_468F70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	shr(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->ebx);
	movzx(&ts->edx, ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx*4) + 0xA8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_468FD5;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->edx, ts->ebx);
	mov(&ts->edi, ts->ebx);
	sar(&ts->edx, 0xB);
	sar(&ts->edi, 0x4);
	and_(&ts->edx, 0x1F);
	and_(&ts->edi, 0x7F);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_468FB1;
    }

loc_468FA5:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_468FB9;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_468FA5;
    }

loc_468FB1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_468FB9:
	and_(&ts->ebx, 0xE0000000);
	cmp(&ts->eflags, ts->ebx, 0x40000000);
	if (!ts->eflags.zero) {
        goto loc_468FD5;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_463C50(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_464CD0(ts, mv);

loc_468FD5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_468FE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	shr(&ts->eax, 0x10);
	movzx(&ts->eax, ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax*4) + 0xA8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_469045;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->eax, ts->edi);
	mov(&ts->esi, ts->edi);
	sar(&ts->eax, 0xB);
	sar(&ts->esi, 0x4);
	and_(&ts->eax, 0x1F);
	and_(&ts->esi, 0x7F);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_469045;
    }

loc_469012:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_469025;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_469012;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_469025:
	and_(&ts->edi, 0xE0000000);
	cmp(&ts->eflags, ts->edi, 0x60000000);
	if (!ts->eflags.zero) {
        goto loc_469045;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_463C50(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_464D00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_469047;
    }

loc_469045:
	xor_(&ts->eax, ts->eax);

loc_469047:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469089;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469089;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46907A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_46907A:
	mov(mv, &ts->ecx, x86::mem(0x82B978, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_469089;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));

loc_469089:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(0x7EC848, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC848, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x7EC84C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4690B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4690D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4690D1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));

loc_4690C5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4690D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4690C5;
    }

loc_4690D1:
	xor_(&ts->eax, ts->eax);

locret_4690D3:
	retn(mv, &ts->esp, 0x4);
}

void sub_4690E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4690EE;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_4690EE:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_469111;
    }
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_469111;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xAC, 4));
	goto loc_469147;

loc_469111:
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_469141;
    }
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_469141;
    }
	cmp(&ts->eflags, ts->edx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_46912F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_469136;
    }

loc_46912F:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_469136:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_469141:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB0, 4));

loc_469147:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46912F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_469160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4691BC;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46918D;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46918D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xAC, 4));
	goto loc_4691B1;

loc_46918D:
	cmp(&ts->eflags, ts->edx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4691A6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4691BB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4691A6:
	cmp(&ts->eflags, ts->edx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4691BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB4, 4));

loc_4691B1:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4691BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));

loc_4691BB:
	pop(mv, &ts->esp, ts->esi);

locret_4691BC:
	retn(mv, &ts->esp, 0x4);
}

void sub_4691C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4691F8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C738);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FB724, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x789CF8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x18);

loc_4691F8:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_469200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7ED148, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED160, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->ebp, ts->ebp);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x400, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_469263;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebp, ts->eax);

loc_469263:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->eax*4) + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x458980);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4692F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x82B920, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46930B;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46930B;
    }

loc_469306:
	goto loc_4692A0;

loc_46930B:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_469306;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_469328;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_469328;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_469328;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	pop(mv, &ts->esp, ts->ecx);

locret_469328:
	retn(mv, &ts->esp);

loc_4692A0:
	mov(mv, &ts->eax, x86::mem(0x82B920, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x3);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, 0x4589C0);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4692CC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_7238D2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B920, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	retn(mv, &ts->esp);

loc_4692CC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_7238D2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B920, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_469330(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x459970);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x1C);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x78A744);
	game::sub_75C461(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xDC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xD4, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ebp, 0x3F800000);
	goto loc_469380;

loc_469380:
	xor_(&ts->ecx, ts->ecx);

loc_469382:
	mov(mv, x86::mem(ts->edx, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0x8, 4), 0x3DCCCCCD);
	mov(mv, x86::mem(ts->eax, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax - 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + (ts->ecx), 1), ts->bl);
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	add(&ts->eax, 0x1C);
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_469382;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0xFFFFFFFF);
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esi, 0x3);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_469380;
    }
	mov(mv, x86::mem(ts->edi + 0xE4, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xEC, 4), ts->ebx);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4693F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7724C6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x78A744);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_469453;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_469430;
    }
	game::sub_735550(ts, mv);

loc_469430:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_469453:
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x6);
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x0);
	push(mv, &ts->esp, 0x1C);
	add(&ts->edi, 0x2C);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_7724B0:
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x1C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->eax, 0x2C);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);

SEH_4693F0:
	mov(&ts->eax, 0x7DEA28);
	goto ___CxxFrameHandler;
}

void sub_469490(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46950F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->eax, 0x17);
	cmp(&ts->eflags, ts->eax, 0x49);
	if (!ts->eflags.zero) {
        goto loc_4694D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46950F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xEC, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_46950F;
    }
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x0);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4694D1:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46950E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4694E4;
    }
	game::sub_735550(ts, mv);

loc_4694E4:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);

loc_46950E:
	pop(mv, &ts->esp, ts->edi);

loc_46950F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7722B6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46955F;
    }
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_46955F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4696EC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x5C, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4696EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->ebx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x17, 4));
	cmp(&ts->eflags, ts->eax, 0x49);
	mov(mv, x86::mem(0x7EC844, 4), 0x789D10);
	if (!ts->eflags.zero) {
        goto loc_46963D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_469632;
    }
	push(mv, &ts->esp, 0x14);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_469616;
    }
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4695CB;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4695D5;

loc_4695CB:
	cmp(&ts->eflags, ts->edi, 0x4B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4695D5;
    }
	mov(&ts->eax, 0x4B);

loc_4695D5:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C590);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_469618;
    }
	push(mv, &ts->esp, 0x7EDD98);
	mov(&ts->ecx, 0x82C590);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C590);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_469618;

loc_469616:
	xor_(&ts->esi, ts->esi);

loc_469618:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, 0x82C6E8);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_576A10(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));

loc_469632:
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	goto loc_4696EA;

loc_46963D:
	push(mv, &ts->esp, 0x14);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4696CB;
    }
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_469663;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46966D;

loc_469663:
	cmp(&ts->eflags, ts->edi, 0x4B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46966D;
    }
	mov(&ts->eax, 0x4B);

loc_46966D:
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46967C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_469689;

loc_46967C:
	cmp(&ts->eflags, ts->ebx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_469689;
    }
	mov(&ts->eax, 0x7FFF);

loc_469689:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C660);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4696C7;
    }
	push(mv, &ts->esp, 0x7EDD90);
	mov(&ts->ecx, 0x82C660);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C660);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_4696C7:
	mov(&ts->ecx, ts->esi);
	goto loc_4696CD;

loc_4696CB:
	xor_(&ts->ecx, ts->ecx);

loc_4696CD:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4696E7;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_4696E7:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebp);

loc_4696EA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4696EC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7722A0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_7722AB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469520:
	mov(&ts->eax, 0x7DE7A8);
	goto ___CxxFrameHandler;
}

void sub_469710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x789D24);
	if (ts->eflags.zero) {
        goto loc_469726;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_469726:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_46973A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_46973A:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_469751;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_469751:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469760(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_46979F;
    }
	mov(mv, &ts->eax, x86::mem(0x82B924, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46979F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46979F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4697B4;
    }

loc_46979F:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_4697B4:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, 0x14);
	mov(&ts->ebx, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x789D40);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_469861;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4697F1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4697FB;

loc_4697F1:
	cmp(&ts->eflags, ts->eax, 0x4B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4697FB;
    }
	mov(&ts->eax, 0x4B);

loc_4697FB:
	test(&ts->eflags, ts->ebx, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46980A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_469817;

loc_46980A:
	cmp(&ts->eflags, ts->ebx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_469817;
    }
	mov(&ts->eax, 0x7FFF);

loc_469817:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5A8);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_469859;
    }
	push(mv, &ts->esp, 0x7EDD88);
	mov(&ts->ecx, 0x82C5A8);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C5A8);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_469859:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ecx, ts->esi);
	goto loc_469863;

loc_469861:
	xor_(&ts->ecx, ts->ecx);

loc_469863:
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46987B;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_46987B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x20, 4), 0x0);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_4698A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_4593B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_458F00(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4698D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x80, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4698E0:
	movzx(&ts->esi, ts->ax);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(0x82A5A0, 4));
	if (ts->eflags.zero) {
        goto loc_46996A;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ax, 0x6);
	if (ts->eflags.carry) {
        goto loc_4698E0;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB3C, 4));
	inc(&ts->eax);
	xor_(&ts->edx, ts->edx);
	mov(&ts->esi, 0x6);
	div(&ts->eax, ts->esi);
	mov(mv, &ts->eax, x86::mem(0x82A5A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x82CB3C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_469930;
    }

loc_469913:
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x1, 4));
	xor_(&ts->edx, ts->edx);
	mov(&ts->esi, 0x6);
	div(&ts->eax, ts->esi);
	mov(mv, &ts->eax, x86::mem(0x82A5A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469913;
    }
	mov(mv, x86::mem(0x82CB3C, 4), ts->edx);

loc_469930:
	mov(mv, &ts->esi, x86::mem(0x82A5A0, 4));
	sub(&ts->esi, 0x7F0DE0);
	mov(&ts->eax, 0xAF286BCB);
	mul(&ts->eax, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esi, ts->edx);
	shr(&ts->esi, 0x1);
	add(&ts->esi, ts->edx);
	shr(&ts->esi, 0x6);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->esi);
	imul(&ts->esi, ts->esi, 0x4C);
	add(&ts->esi, 0x7F0DE0);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46996A:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->eax, ts->edx);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_469992;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	goto sub_459550;

loc_469992:
	mov(mv, x86::mem(ts->ecx + 0xD4, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0xC);
}

void sub_4699A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_469A0C;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0xB0, 4));
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4699C0:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4699E7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4699E7;
    }
	goto loc_4699D0;

loc_4699D0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4699DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4699D0;
    }
	goto loc_4699E7;

loc_4699DE:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4699E7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4699EF;
    }

loc_4699E7:
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4699C0;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4699EF:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_469A0C;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469A0C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_469A00:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_469A0C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_469A00;
    }

loc_469A0C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_469A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x48);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_469B18;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x788484, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_469B18;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788488, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_469B16;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x9);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->esi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469B18;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_469B16:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_469B18:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_469B20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x10, 4));
	add(&ts->edx, 0xFFFFFFDD);
	cmp(&ts->eflags, ts->edx, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_469B3C;
    }
	movzx(mv, &ts->edx, x86::mem(ts->edx + 0x469B7C, 1));
	jmp(x86::mem(0x469B74, 4));

loc_469B43:
	mov(&ts->dl, 0x1);
	goto loc_469B49;

def_469B3C:
	xor_(&ts->dl, ts->dl);

loc_469B49:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x44, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_469B6E;
    }
	goto loc_469B60;

loc_469B60:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_469B60;
    }

loc_469B6E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469B90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x3C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_469BB2;
    }

loc_469BA4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_469BA4;
    }

loc_469BB2:
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_469BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_469BD1;
    }
	jmp(x86::mem(0x469C78, 4));

loc_469BD8:
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0xD8, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xDC, 4), ts->eax);

def_469BD1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_459550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_469BFA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xE4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xE0, 1), 0x1);
	game::sub_459550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_469C1B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xEC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), 0x1);
	game::sub_459550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_469C3C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xF0, 1), 0x1);
	game::sub_459550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_469C53:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_469BD1;
    }
	mov(mv, x86::mem(ts->eax + 0xD0, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_459550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_469C71:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_469CB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_469CCF;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_469CCE;
    }
	nop();

loc_469CC0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_469CC0;
    }

loc_469CCE:
	pop(mv, &ts->esp, ts->esi);

locret_469CCF:
	retn(mv, &ts->esp);
}

void sub_469CD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469CE6;
    }
	game::sub_464BB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), 0x0);

loc_469CE6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_469CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469D12;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_464C10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);

loc_469D12:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_469D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_469D33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_45AD40(ts, mv);

locret_469D33:
	retn(mv, &ts->esp);
}

void sub_469D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(0x82B954, 4), 0x0);
	mov(mv, x86::mem(0x82B958, 4), 0x0);
	mov(mv, x86::mem(0x82B960, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469D6E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	goto loc_469D70;

loc_469D6E:
	xor_(&ts->ecx, ts->ecx);

loc_469D70:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_469D79;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x10, 4));
	goto loc_469D7B;

loc_469D79:
	xor_(&ts->eax, ts->eax);

loc_469D7B:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469DA8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469D8B;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_469D8D;

loc_469D8B:
	xor_(&ts->esi, ts->esi);

loc_469D8D:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	dec(mv, x86::mem(0x82B944, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->esi);
	goto loc_469D70;

loc_469DA8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_469DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469DCF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));

loc_469DC4:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_469DD5;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_469DC4;
    }

loc_469DCF:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_469DD5:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_469E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7884A4, 4));
	mov(mv, &ts->edx, x86::mem(0x7884AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7884A8, 4));
	mov(mv, x86::mem(0x82BCEC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7884B0, 4));
	mov(mv, x86::mem(0x82BCF8, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCF8, 4));
	mov(mv, x86::mem(0x82BCF4, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCF4, 4));
	mov(mv, x86::mem(0x82BCF0, 4), ts->ecx);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_469EA9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCF8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCF8, 4));

loc_469EA9:
	mov(mv, &ts->edx, x86::mem(0x7884B4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7884A4, 4));
	mov(mv, &ts->eax, x86::mem(0x7884B8, 4));
	mov(mv, x86::mem(0x82BD08, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7884C0, 4));
	mov(mv, x86::mem(0x82BD00, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7884BC, 4));
	mov(mv, x86::mem(0x82BD14, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD14, 4));
	mov(mv, x86::mem(0x82BD10, 4), ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD10, 4));
	mov(mv, x86::mem(0x82BD0C, 4), ts->eax);
	mov(mv, x86::mem(0x82BCFC, 4), 0x0);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_469F1A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD14, 4));

loc_469F1A:
	mov(mv, &ts->ecx, x86::mem(0x7884C4, 4));
	mov(mv, &ts->eax, x86::mem(0x7884B4, 4));
	mov(mv, &ts->edx, x86::mem(0x7884C8, 4));
	mov(mv, x86::mem(0x82BD24, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7884D0, 4));
	mov(mv, x86::mem(0x82BD1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7884CC, 4));
	mov(mv, x86::mem(0x82BD30, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD30, 4));
	mov(mv, x86::mem(0x82BD2C, 4), ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD2C, 4));
	mov(mv, x86::mem(0x82BD18, 4), 0x0);
	mov(mv, x86::mem(0x82BD28, 4), ts->edx);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_469F89;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD30, 4));

loc_469F89:
	mov(mv, &ts->eax, x86::mem(0x7884D4, 4));
	mov(mv, &ts->edx, x86::mem(0x7884C4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7884D8, 4));
	mov(mv, x86::mem(0x82BD40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7884E0, 4));
	mov(mv, x86::mem(0x82BD38, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7884DC, 4));
	mov(mv, x86::mem(0x82BD4C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD4C, 4));
	mov(mv, x86::mem(0x82BD48, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD48, 4));
	mov(mv, x86::mem(0x82BD34, 4), 0x0);
	mov(mv, x86::mem(0x82BD44, 4), ts->ecx);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_469FF8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD4C, 4));

loc_469FF8:
	mov(mv, &ts->edx, x86::mem(0x7884E4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7884D4, 4));
	mov(mv, &ts->eax, x86::mem(0x7884E8, 4));
	mov(mv, x86::mem(0x82BD5C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7884F0, 4));
	mov(mv, x86::mem(0x82BD54, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7884EC, 4));
	mov(mv, x86::mem(0x82BD68, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD68, 4));
	mov(mv, x86::mem(0x82BD64, 4), ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD64, 4));
	mov(mv, x86::mem(0x82BD60, 4), ts->eax);
	mov(mv, x86::mem(0x82BD50, 4), 0x0);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46A069;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BD68, 4));

loc_46A069:
	mov(mv, &ts->eax, x86::mem(0x7884E4, 4));
	mov(mv, x86::mem(0x82BD6C, 4), 0x0);
	mov(mv, x86::mem(0x82BD70, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_46A080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7724DB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x78A760);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x1);
	game::sub_579F20(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	mov(&ts->ecx, 0x2);
	mov(&ts->edx, 0x1000);

loc_46A0E2:
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x7FFF);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	add(&ts->eax, 0x14);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46A0E2;
    }
	mov(mv, x86::mem(ts->esi + 0x132, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x133, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x134, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x9C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x135, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x130, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x131, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x21, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x40, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	game::sub_576A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7724D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x74);
	goto sub_5768E0;

SEH_46A080:
	mov(&ts->eax, 0x7DEA4C);
	goto ___CxxFrameHandler;
}

void sub_46A190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x20, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_46A1A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x135, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, ts->al);
	if (!ts->eflags.zero) {
        goto locret_46A1E7;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->ecx + 0x134, 1));
	mov(&ts->dl, 0x1);
	cmp(&ts->eflags, ts->bl, ts->al);
	mov(mv, x86::mem(ts->ecx + 0x135, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto locret_46A1E7;
    }
	mov(mv, x86::mem(ts->ecx + 0x9C, 1), ts->dl);
	mov(&ts->edx, 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x5C, 4), 0x3DCCCCCD);
	mov(mv, x86::mem(ts->ecx + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x70, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x58, 4), ts->eax);

locret_46A1E7:
	retn(mv, &ts->esp);
}

void sub_46A1F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	add(&ts->eax, 0x20);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	add(&ts->eax, 0x70);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_459680(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_459600(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x124, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_5F1160(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x134, 1), 0x0);
	game::sub_592D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x131, 1), ts->al);
	game::sub_592D00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x130, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(0x82CB40, 4));
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->eax);
	inc(&ts->eax);
	mov(mv, x86::mem(0x82CB40, 4), ts->eax);
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x128, 1), 0x10);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), 0x82BD24);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x82BD40);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46A390;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	game::sub_592C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46A36E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_46A372;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x128, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46A345;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46A33D;
    }
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46A338;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46A372;
    }
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->edx);
	goto loc_46A378;

loc_46A338:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_46A372;
    }

loc_46A33D:
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->edx);
	goto loc_46A378;

loc_46A345:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_46A372;
    }
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->edx);
	goto loc_46A378;

loc_46A36E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));

loc_46A372:
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ecx);

loc_46A378:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x11C, 4));

loc_46A390:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_46A3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46A3CA;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x132, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46A3CA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x0);
	dec(mv, x86::mem(0x82B950, 4));

loc_46A3CA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46A3F3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46A3F3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x134, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46A3F3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x134, 1), 0x0);

loc_46A3F3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46A400(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46A44D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46A41A;
    }
	game::sub_735550(ts, mv);

loc_46A41A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xB8, 4), 0x0);
	dec(mv, x86::mem(0x82B94C, 4));

loc_46A44D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_46A460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A4BB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x134, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46A4CE;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xBC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A4D5;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46A4C4;
    }
	mov(mv, x86::mem(ts->esi + 0x134, 1), ts->bl);

loc_46A4BB:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_46A1A0;

loc_46A4C4:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	goto loc_46A4D5;

loc_46A4CE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));

loc_46A4D5:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	sub(&ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A4F8;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A535;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46A502;
    }
	mov(mv, x86::mem(0x7EC844, 4), 0x78A7C0);
	goto loc_46A502;

loc_46A4F8:
	mov(mv, x86::mem(0x7EC844, 4), 0x78A7B0);

loc_46A502:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x7F3920, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 1), ts->bl);

loc_46A535:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46A540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A615;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x70, 4));
	mov(mv, x86::mem(0x82BCB0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	add(&ts->eax, 0x30);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	mov(&ts->edx, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	add(&ts->eax, 0x30);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(0x82BCC0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46A626;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A626;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xBC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46A626;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46A61E;
    }
	mov(mv, x86::mem(ts->esi + 0x132, 1), ts->bl);

loc_46A615:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_46A1A0;

loc_46A61E:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_46A626:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x133, 1), 0x1);
	inc(mv, x86::mem(0x82B950, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(ts->eax + 0x3C, 4));
}

void sub_46A670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x128, 1));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->bl, 0x1);
	test(&ts->eflags, ts->bl, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46A687;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x50, 4), 0xA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46A687;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46A687:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	add(&ts->edi, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A6A1;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_46A6A3;

loc_46A6A1:
	xor_(&ts->esi, ts->esi);

loc_46A6A3:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x24, 4));
	game::sub_592D80(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A709;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A6BC;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_46A6BE;

loc_46A6BC:
	xor_(&ts->esi, ts->esi);

loc_46A6BE:
	mov(&ts->ecx, ts->edi);
	game::sub_468E20(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46A709;
    }
	goto loc_46A6D0;

loc_46A6D0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46A6EE;
    }
	game::sub_592D80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A709;
    }
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_46A6EE;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x132, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46A707;
    }

loc_46A6EE:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46A6FA;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_46A6FC;

loc_46A6FA:
	xor_(&ts->esi, ts->esi);

loc_46A6FC:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_46A6D0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46A707:
	xor_(&ts->bl, ts->bl);

loc_46A709:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46A710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_46A1F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 4), 0x82BCEC);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x82BD08);
	game::sub_592D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	game::sub_592D80(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x148, 4));
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xD8, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46A770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x8C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x140, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46A9C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46A9C5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x94, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(&ts->eax, ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x90, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ecx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x98, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46A9C5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x140, 4));
	add(&ts->edx, 0x90);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_468E90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	add(&ts->ecx, 0x90);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_468E90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	add(&ts->eax, 0x60);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x60, 4));
	add(&ts->eax, 0x60);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x80, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	game::sub_468E90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	game::sub_468E90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0x20);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46A9CC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46A9D2;
    }

loc_46A9C5:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46A9CC:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_46A9D2:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_46A9E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x140, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_592C90(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_46A1F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), 0x82BD5C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46AA20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	game::sub_592C90(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46AA5A;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46AA5A;
    }

loc_46AA4F:
	mov(&ts->eax, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46AA5A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	add(&ts->eax, 0x70);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ecx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AB49;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AB25;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->eax, 0x2);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46AB25:
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D4, 4));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AA4F;
    }
	mov(&ts->eax, 0x3);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46AB49:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x48, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	mov(&ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_46AB85;
    }
	mov(&ts->eax, 0x5);

loc_46AB85:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_46AB90(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_46A1F0;
}

void sub_46ABA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_46ADC4;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x3C, 4));
	add(&ts->ebx, 0x24);
	if (ts->eflags.zero) {
        goto loc_46ADED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46ABDD;
    }
	add(&ts->eax, 0xFFFFFFF0);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	goto loc_46ABE5;

loc_46ABDD:
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);

loc_46ABE5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46ADED;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x82BCB0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_468E90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x24, 4));
	add(&ts->edx, 0x70);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_468E90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7DC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AD38;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x70, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7DC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7DC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7DC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCB0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46AD34;
    }
	push(mv, &ts->esp, 0x82BCB0);
	game::sub_440F70(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x3F866666);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_440FA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_440F70(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AD34;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, 0x82BCC0);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46AD34;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A7D4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46ADC4;
    }

loc_46AD34:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));

loc_46AD38:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46ADED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46AD4F;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_46AD51;

loc_46AD4F:
	xor_(&ts->esi, ts->esi);

loc_46AD51:
	mov(&ts->ecx, ts->ebx);
	game::sub_468E20(ts, mv);
	mov(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46ADED;
    }
	mov(&ts->edx, 0x5);

loc_46AD67:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46ADD7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x124, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_46ADD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46ADD7;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x118, 4));
	if (!ts->eflags.zero) {
        goto loc_46ADD7;
    }
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46ADCD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	add(&ts->eax, 0x70);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_46ADD7;
    }

loc_46ADC4:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46ADCD:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x133, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46ADC4;
    }

loc_46ADD7:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46ADE3;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_46ADE5;

loc_46ADE3:
	xor_(&ts->esi, ts->esi);

loc_46ADE5:
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46AD67;
    }

loc_46ADED:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_46AE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_46A540(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x140, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_46AF0B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x505, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_46AF0A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x50C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_46AF0A;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x50C, 1), 0x1);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x14C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3);
	goto loc_46AE70;

loc_46AE70:
	mov(mv, x86::mem(0x7EC844, 4), 0x78A7E0);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46AEF6;
    }
	push(mv, &ts->esp, 0x20);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46AEE9;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6B4);
	mov(mv, x86::mem(ts->edi, 4), 0x3);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46AEEB;
    }
	push(mv, &ts->esp, 0x7EDD58);
	mov(&ts->ecx, 0x82C6B4);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C6B4);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_46AEEB;

loc_46AEE9:
	xor_(&ts->esi, ts->esi);

loc_46AEEB:
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp, 4), ts->esi);

loc_46AEF6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ebp, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46AE70;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_46AF0A:
	pop(mv, &ts->esp, ts->ebx);

loc_46AF0B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_46AF20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->ebx);
	xor_(&ts->edx, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));

loc_46AF33:
	mov(mv, x86::mem(ts->eax - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + (ts->edx) + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	inc(&ts->edx);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->edx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46AF33;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x78, 1), ts->bl);
	game::sub_4598F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_46AF70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x78, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46B0D6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_46B0D6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46AFE7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ecx*4) + 0x34, 4));
	dec(&ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46AFDF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->esi) + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46B0D6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x30, 4));
	mov(mv, x86::mem(ts->esi + (ts->eax*4) + 0x1C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46AFDF:
	mov(mv, x86::mem(ts->esi + 0x78, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46AFE7:
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ecx*4) + 0x54, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46AFF5;
    }
	jmp(x86::mem(0x46B0DC, 4));

loc_46AFFC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

loc_46B01D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdivrp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

loc_46B05A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46B07D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46B089;

loc_46B07D:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B089;
    }
	mov(&ts->eax, 0x7FFF);

loc_46B089:
	mov(&ts->edx, 0x7FFF);
	push(mv, &ts->esp, 0x0);
	sub(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2);
	game::sub_468160(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->eax*4) + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

def_46AFF5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x4, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->ecx*4) + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));

loc_46B0D6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46B215;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46B13A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46B13A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46B147;
    }
	jmp(x86::mem(0x46B21C, 4));

loc_46B14E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

loc_46B16B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdivrp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

loc_46B1A4:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46B1C4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46B1D0;

loc_46B1C4:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B1D0;
    }
	mov(&ts->eax, 0x7FFF);

loc_46B1D0:
	mov(&ts->edx, 0x7FFF);
	push(mv, &ts->esp, 0x0);
	sub(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2);
	game::sub_468160(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

def_46B147:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));

loc_46B215:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B240(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46B27F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));

loc_46B27F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);
	mov(&ts->eax, ts->ecx);
	retn(mv, &ts->esp, 0x10);
}

void sub_46B2A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_459B20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46B2B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46B2B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B2C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46B301;
    }
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46B2FE;
    }
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_46B2F4;
    }
	push(mv, &ts->esp, 0x1);
	dec(&ts->eax);
	game::sub_721681(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46B2F4:
	push(mv, &ts->esp, 0x0);
	game::sub_721681(ts, mv);
	add(&ts->esp, 0x4);

loc_46B2FE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));

loc_46B301:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_459CB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46B328;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46B328:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x90, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->edx, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B487;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x1C);
	if (!ts->eflags.zero) {
        goto loc_46B383;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	mov(mv, &ts->edx, x86::mem(0x86344C, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x82B9FC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46B388;
    }

loc_46B379:
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x1D);

loc_46B383:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B388:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x40, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi, 1));
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46B3B4;
    }

loc_46B397:
	cmp(&ts->eflags, ts->al, 0x2E);
	if (ts->eflags.zero) {
        goto loc_46B3B4;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_505300(ts, mv);
	imul(&ts->esi, ts->esi, 0x21);
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	add(&ts->esp, 0x4);
	add(&ts->esi, ts->edx);
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46B397;
    }

loc_46B3B4:
	cmp(mv, &ts->eflags, x86::mem(0x82B9E4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_46B3CC;
    }

loc_46B3BD:
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x17);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B3CC:
	cmp(mv, &ts->eflags, x86::mem(0x82B9E8, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_46B379;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82B9EC, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B407;
    }
	mov(mv, &ts->eax, x86::mem(0x82B9FC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, 0x78A810);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setnz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx) + 0x18, 4));
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B407:
	cmp(mv, &ts->eflags, x86::mem(0x82B9F0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B455;
    }
	mov(mv, &ts->edx, x86::mem(0x82B9FC, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x38, 4));
	push(mv, &ts->esp, 0x78A804);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B3BD;
    }
	mov(mv, &ts->eax, x86::mem(0x82B9FC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, 0x78A7F4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B3BD;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x19);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B455:
	cmp(mv, &ts->eflags, x86::mem(0x82B9F4, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B46C;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x1B);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B46C:
	cmp(mv, &ts->eflags, x86::mem(0x82B9F8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B383;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), 0x16);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B487:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xB0, 4));
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B525;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B525;
    }
	mov(&ts->edi, ts->edi);

loc_46B4B0:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46B4C3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46B4B0;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46B4C3:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B525;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46B525;
    }
	mov(mv, &ts->eax, x86::mem(0x82C71C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B4FB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x82C710);
	game::sub_5FA540(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x82C710);
	game::sub_5F0B80(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0xB4, 4), ts->eax);

loc_46B4FB:
	mov(mv, &ts->eax, x86::mem(0x82BEAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B525;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82BEA0);
	game::sub_5FA540(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x82BEA0);
	game::sub_5F0B80(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x60, 4), ts->eax);

loc_46B525:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46B530(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECBEC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ECBE8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73AE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7ECBF4, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7ECD70, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73AEA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7ECD70, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A81C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECD70, 4));
	add(&ts->esi, ts->edi);
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->eax, 0x11000001);
	mov(mv, x86::mem(0x82BA08, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B58E;
    }
	mov(mv, x86::mem(0x7ECBF0, 4), ts->esi);
	goto loc_46B594;

loc_46B58E:
	mov(mv, x86::mem(0x7ECC04, 4), ts->esi);

loc_46B594:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46B5CB;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46B5CB:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46B5D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B9B8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B66B;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_46B5F0:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B65F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	and_(&ts->eax, 0xFF000000);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46B65F;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x184, 4));
	mov(mv, x86::mem(ts->ecx + 0x190, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x188, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x184, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_46B64A;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x194, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x198, 4), ts->eax);

loc_46B64A:
	cmp(&ts->eflags, ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46B65F;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78A858);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0xC);

loc_46B65F:
	mov(mv, &ts->eax, x86::mem(0x82B9B8, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B5F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_46B66B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46B670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_46B6A1;
    }
	mov(mv, &ts->eax, x86::mem(0x7ECD74, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B69A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B9BC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46B69A;
    }
	mov(mv, &ts->eax, x86::mem(0x82B96C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46B69C;
    }

loc_46B69A:
	xor_(&ts->eax, ts->eax);

loc_46B69C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46B6A1:
	mov(mv, &ts->edx, x86::mem(0x82B9B8, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B69A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_46B6B0:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46B6C6;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x178, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46B6D2;
    }

loc_46B6C6:
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B6B0;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46B6D2:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x2, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x7ECD74, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46B6F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x90, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7B0, 4));
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->edx, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B8DE;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_46B8DE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46BA96;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_46B746;
    }
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);

loc_46B746:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46B7C1;
    }
	goto loc_46B760;
	goto loc_46B760;

loc_46B760:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0xAC, 4));
	mov(mv, &ts->ecx, x86::mem(0x83ACB8, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B7B1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B7B1;
    }
	xor_(&ts->eax, ts->edx);
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->edi);
	shl(&ts->edx, 0x4);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7ECD80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A8C0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->ecx);
	mov(&ts->edi, 0x1B);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x10);

loc_46B7B1:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B760;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46B7C1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(&ts->eax, 0x2);

loc_46B7D0:
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x2, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B7DF;
    }
	inc(&ts->edi);

loc_46B7DF:
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B7EE;
    }
	inc(&ts->edi);

loc_46B7EE:
	mov(&ts->ebp, 0x1);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B7FC;
    }
	inc(&ts->edi);

loc_46B7FC:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B80B;
    }
	inc(&ts->edi);

loc_46B80B:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B81A;
    }
	inc(&ts->edi);

loc_46B81A:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B829;
    }
	inc(&ts->edi);

loc_46B829:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B838;
    }
	inc(&ts->edi);

loc_46B838:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x5, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B847;
    }
	inc(&ts->edi);

loc_46B847:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B856;
    }
	inc(&ts->edi);

loc_46B856:
	add(&ts->eax, 0x9);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x2, 4));
	cmp(&ts->eflags, ts->ecx, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B7D0;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->edi, ts->edi);
	mov(&ts->ebp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	nop();

loc_46B880:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, ts->edi);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B8CE;
    }
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_46B8CA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->eax, ts->edx);
	mov(&ts->ebx, ts->edi);
	mov(&ts->edx, ts->ebx);
	shl(&ts->edx, 0x4);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7ECD80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A878);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, 0x1B);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x18);

loc_46B8CA:
	inc(mv, x86::mem(ts->esp + 0x10, 4));

loc_46B8CE:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B880;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46B8DE:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA5, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46B8F0;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_46BA94;
    }

loc_46B8F0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x84, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46BA96;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x88, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_46B914;
    }
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);

loc_46B914:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46B981;
    }

loc_46B920:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->ecx, x86::mem(0x83ACB8, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46B971;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x88, 4));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46B971;
    }
	xor_(&ts->eax, ts->edx);
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->edi);
	shl(&ts->edx, 0x4);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7ECD80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A8C0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->ecx);
	mov(&ts->edi, 0x1B);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x10);

loc_46B971:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B920;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46B981:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x88, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(&ts->eax, 0x2);

loc_46B990:
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x2, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B99F;
    }
	inc(&ts->edi);

loc_46B99F:
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9AE;
    }
	inc(&ts->edi);

loc_46B9AE:
	mov(&ts->ebp, 0x1);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9BC;
    }
	inc(&ts->edi);

loc_46B9BC:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9CB;
    }
	inc(&ts->edi);

loc_46B9CB:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9DA;
    }
	inc(&ts->edi);

loc_46B9DA:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9E9;
    }
	inc(&ts->edi);

loc_46B9E9:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46B9F8;
    }
	inc(&ts->edi);

loc_46B9F8:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x5, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46BA07;
    }
	inc(&ts->edi);

loc_46BA07:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46BA16;
    }
	inc(&ts->edi);

loc_46BA16:
	add(&ts->eax, 0x9);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x2, 4));
	cmp(&ts->eflags, ts->ecx, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46B990;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->edi, ts->edi);
	mov(&ts->ebp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	nop();

loc_46BA40:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x88, 4));
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, ts->edi);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46BA8E;
    }
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_46BA8A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->eax, ts->edx);
	mov(&ts->ebx, ts->edi);
	mov(&ts->edx, ts->ebx);
	shl(&ts->edx, 0x4);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7ECD80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A878);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, 0x1B);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x18);

loc_46BA8A:
	inc(mv, x86::mem(ts->esp + 0x10, 4));

loc_46BA8E:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BA40;
    }

loc_46BA94:
	mov(&ts->eax, ts->ebx);

loc_46BA96:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_46BAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78A8F0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x88, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0xA8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), 0xFFFFFFFF);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);
}

void sub_46BB10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82C6D4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_46BB85;
    }
	mov(mv, &ts->edx, x86::mem(0x82C6D8, 4));
	add(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_46BB85;
    }
	mov(mv, &ts->ecx, x86::mem(0x7ECF48, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46BB6E;
    }
	mov(mv, &ts->esi, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_46BB53;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	add(&ts->edi, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.carry) {
        goto loc_46BB82;
    }

loc_46BB53:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_46BB85;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x14, 4));
	add(&ts->esi, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_46BB85;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46BB6E:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46BB85;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));

loc_46BB82:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_46BB85:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46BB90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7ECD74, 4));
	sub(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BBB6;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B9BC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46BBB6;
    }
	mov(mv, &ts->eax, x86::mem(0x82B96C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46BBBE;
    }

loc_46BBB6:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);

loc_46BBBE:
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);

loc_46BBC5:
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46BBE4;
    }
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x18);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BBC5;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);
	mov(&ts->eax, 0xFFFFFFF3);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46BBE4:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BBF6;
    }
	mov(&ts->eax, 0xFFFFFFF3);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_46BBF6:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(0x82B620, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(0x82B620, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->edx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1C);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	or_(&ts->edi, 0xFFFFFFFF);
	or_(&ts->ebp, 0xFF0000);
	mov(mv, x86::mem(ts->edx + 0x64, 4), ts->ebp);
	mov(mv, x86::mem(ts->edx, 4), ts->edi);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->edx + 0x5C, 4), ts->edi);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edx + 0x65, 1), 0x1);
	mov(mv, &ts->ebp, x86::mem(0x82B620, 4));
	add(&ts->esi, 0x70);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->ecx*4), 4));
	mov(&ts->edx, ts->ebx);
	sub(&ts->edx, ts->ebp);
	and_(&ts->edx, 0x8000000F);
	mov(mv, x86::mem(ts->ebp + 0x6C, 4), ts->esi);
	if (!ts->eflags.sign) {
        goto loc_46BC5C;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFF0);
	inc(&ts->edx);

loc_46BC5C:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->edx);
	add(&ts->ebx, ts->ecx);
	mov(&ts->edx, ts->ebp);
	sub(&ts->edx, ts->ebx);
	add(&ts->esi, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46BC8D;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_46BC80:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x6C, 4));
	mov(mv, x86::mem(ts->edx + (ts->ecx) + 0x4, 4), ts->edi);
	add(&ts->ecx, 0xC);
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46BC80;
    }

loc_46BC8D:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46BCA1;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x30, 4));
	mov(&ts->ecx, 0x6);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	goto loc_46BCAD;

loc_46BCA1:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_721A6B(ts, mv);
	add(&ts->esp, 0x4);

loc_46BCAD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	push(mv, &ts->esp, 0x78A940);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x35, 1), 0x0);
	game::_sprintf(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46BD03;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_45A4E0(ts, mv);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x8000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_721DB7(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_46BD07;

loc_46BD03:
	mov(mv, x86::mem(ts->ebp + 0x64, 1), 0x1);

loc_46BD07:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BD15;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x64, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46BD2E;
    }

loc_46BD15:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x24, 1));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0x66, 1), ts->dl);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x7F);

loc_46BD2E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_46BD40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_46B670(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46BE41;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x82A5E0);

loc_46BD71:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BE17;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BE1F;
    }

loc_46BD83:
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BDF6;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	or_(&ts->ebp, 0xFFFFFFFF);
	mov(&ts->edi, ts->edi);

loc_46BD90:
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(0x82A5DC, 4));
	lea(mv, &ts->esi, x86::mem(0x82A5D8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_721C4D(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA20, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46BDC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46BDC1;
    }
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x4);

loc_46BDC1:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xA);
	mov(&ts->edi, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), ts->ebp);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x82A5E0);
	goto loc_46BDE0;

loc_46BDE0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BE30;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BE34;
    }

loc_46BDEA:
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BD90;
    }

loc_46BDF0:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_46BDF6:
	mov(&ts->eax, 0x82B620);
	goto loc_46BE00;

loc_46BE00:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46BE0A;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x0);

loc_46BE0A:
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->eax, 0x82B680);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BE00;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46BE17:
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46BD83;
    }

loc_46BE1F:
	add(&ts->eax, 0x28);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x82A9A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BD71;
    }
	goto loc_46BDF6;

loc_46BE30:
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46BDEA;
    }

loc_46BE34:
	add(&ts->eax, 0x28);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x82A9A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BDE0;
    }
	goto loc_46BDF0;

loc_46BE41:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_45A630(ts, mv);
	goto loc_46BDF6;
}

void sub_46BE50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46BE85;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722F98(ts, mv);
	add(&ts->esp, 0x8);

loc_46BE85:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46BE90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xB0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->edx, 4), 0x0);
	mov(mv, x86::mem(ts->ebx, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	mov(&ts->ebp, ts->eax);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFF8);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BEF9;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, 0xFFFFFFFE);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xB0);
	retn(mv, &ts->esp);

loc_46BEF9:
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x65, 1), ts->al);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46BFDE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C105;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C105;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_723B1F(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46BFB1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_723A64(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BF73;
    }
	mov(mv, x86::mem(ts->ebx, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0xFFFFFFFF);
	goto loc_46C105;

loc_46BF73:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*4), 4));
	shl(&ts->edi, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->ebx, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46BF8C;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_46BF8C:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A948, 4));
	game::__ftol2(ts, mv);
	neg(&ts->edi);
	sub(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);

loc_46BFB1:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_723A1C(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	goto loc_46C105;

loc_46BFDE:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x66, 1));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C011;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);

loc_46C011:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46C0FF;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_46C023;

loc_46C021:
	xor_(&ts->ecx, ts->ecx);

loc_46C023:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edx + (ts->edi) + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + (ts->edi) + 0x4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C0E3;
    }
	game::sub_721F99(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_722DB5(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	xor_(&ts->ecx, ts->ecx);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46C09C;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C06E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C09C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edx + (ts->edi) + 0x4, 4), 0xFFFFFFFF);
	goto loc_46C0E3;

loc_46C06E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, x86::mem(ts->eax + (ts->edi) + 0x8, 4), ts->edx);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x54, 4));
	add(&ts->eax, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->edi), 4));
	add(&ts->eax, ts->edi);
	add(&ts->ebp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	goto loc_46C0E3;

loc_46C09C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edx + (ts->edi) + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x50, 4));
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->ebp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46C0D9;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);

loc_46C0D9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi) + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);

loc_46C0E3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x66, 1));
	inc(&ts->eax);
	add(&ts->edi, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C021;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));

loc_46C0FF:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);

loc_46C105:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x0);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xB0);
	retn(mv, &ts->esp);
}

void sub_46C130(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xB8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_721F99(ts, mv);
	mov(&ts->edi, 0x82B620);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);

loc_46C148:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46C3B4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xCC, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46C169;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	goto loc_46C3B4;

loc_46C169:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFF8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C39F;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_46B670(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46C263;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C39F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C39F;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_723B1F(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C238;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_723A64(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46C1FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0xFFFFFFFF);
	goto loc_46C39F;

loc_46C1FF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->eax*4), 4));
	shl(&ts->ebp, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46C216;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_46C216:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x24, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A948, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);

loc_46C238:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_723A1C(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	goto loc_46C39F;

loc_46C263:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x66, 1));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C296;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);

loc_46C296:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46C395;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_46C2B0;

loc_46C2A6:
	xor_(&ts->ecx, ts->ecx);
	goto loc_46C2B0;

loc_46C2B0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edi + (ts->edx) + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + (ts->eax) + 0x4, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C379;
    }
	game::sub_721F99(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_722DB5(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	xor_(&ts->ecx, ts->ecx);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46C329;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C2FB;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C329;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edi + (ts->edx) + 0x4, 4), 0xFFFFFFFF);
	goto loc_46C379;

loc_46C2FB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, x86::mem(ts->eax + (ts->edi) + 0x8, 4), ts->edx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x54, 4));
	add(&ts->eax, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->edi), 4));
	add(&ts->eax, ts->edi);
	add(&ts->ebx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	add(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	goto loc_46C379;

loc_46C329:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46C347;
    }
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46C347;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + (ts->edx), 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);

loc_46C347:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edi + (ts->eax) + 0x8, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x50, 4));
	add(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	add(&ts->ebx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x30, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46C36F;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ecx);

loc_46C36F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx) + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);

loc_46C379:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x66, 1));
	inc(&ts->eax);
	add(&ts->edi, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C2A6;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));

loc_46C395:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);

loc_46C39F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x0);

loc_46C3B4:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x82B680);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46C148;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xB8);
	goto sub_721FA7;
}

void sub_46C3E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_46C3F7;
    }
	mov(&ts->eax, 0xFFFFFFF8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46C3F7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x65, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46C408;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_46C130(ts, mv);
	add(&ts->esp, 0x4);

loc_46C408:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46C424;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));

loc_46C424:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C45D;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x65, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46C451;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_46C130(ts, mv);
	add(&ts->esp, 0x4);

loc_46C451:
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46C45D:
	mov(&ts->eax, 0xFFFFFFF8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->eax, 0xFFFFFFF8);
	if (ts->eflags.zero) {
        goto loc_46C4F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46C4C8;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_723BC1(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ebx, ts->eax);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46C4C8:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_722FD0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ebx, ts->eax);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);

loc_46C4F1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebx, 0xFFFFFFF8);
	if (ts->eflags.zero) {
        goto loc_46C575;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46C555;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_723C41(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46C555:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_723070(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_46C575:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46C600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C631;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 2));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	xor_(&ts->edi, ts->edi);
	goto loc_46C635;

loc_46C631:
	mov(mv, &ts->di, x86::mem(ts->esi + 0x18, 2));

loc_46C635:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46C663;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	movzx(&ts->eax, ts->di);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_723D9B(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_46C663:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	movzx(&ts->eax, ts->di);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46C690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	game::sub_46B670(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46C6D2;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_723E1E(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46C6D2:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7227CB(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C6F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_721A6B(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x64);
	mov(mv, x86::mem(ts->esp + 0x21, 1), ts->bl);
	game::sub_721D90(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	add(&ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46C75B;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_46C75B:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->eax, ts->ebx);
	sub(&ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	add(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	game::sub_45A4E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0xC);
}

void sub_46C790(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46C7F4;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_46C7FA;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_722DB5(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_46C7F4;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C7FA;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_46C7FA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), 0x64);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46C7FA;
    }

loc_46C7F4:
	mov(&ts->al, 0x1);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_46C7FA:
	xor_(&ts->al, ts->al);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_46C800(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46C81D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xFA);
	push(mv, &ts->esp, ts->eax);
	game::sub_45A5A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_46C81D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->esi, ts->eax);
	game::sub_721FA7(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_46C860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_45A9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	dec(&ts->eax);
	mov(&ts->edi, 0x0);
	if (ts->eflags.zero) {
        goto loc_46C879;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46C899;
    }
	goto loc_46C889;

loc_46C879:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46C889;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);

loc_46C889:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46C899;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);

loc_46C899:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46C8AC;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);

loc_46C8AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46C8BC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);

loc_46C8BC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46C8CC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);

loc_46C8CC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C8D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C901;
    }
	mov(mv, x86::mem(ts->eax + 0x2C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_46C901:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C92E;
    }
	mov(mv, x86::mem(ts->eax + 0x2C, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x34, 4));
	add(&ts->esi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	goto sub_721FA7;

loc_46C92E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C964;
    }
	mov(mv, x86::mem(ts->eax + 0x2C, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_46C964:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46C994;
    }
	mov(mv, x86::mem(ts->eax + 0x2C, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x34, 4));
	add(&ts->esi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	goto sub_721FA7;

loc_46C994:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46C9A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->esi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_46C9D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7227CB(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CA0C;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78A950);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);

loc_46CA0C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46CA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CA29;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7227CB(ts, mv);
	add(&ts->esp, 0x4);

loc_46CA29:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CA53;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_46CA53;
    }
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x78A990);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);

loc_46CA53:
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46CA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CA84;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78A9D4);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0xC);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_46CA84:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x14, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x7);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CADB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x0);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_46CADB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), 0x7);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x0);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_46CB00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46CB3E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46CB3E;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x1);
	goto loc_46CB48;

loc_46CB3E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46CCA7;
    }

loc_46CB48:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CBA1;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_45AC20(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A72C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);

loc_46CBA1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CBFE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_46CBFE;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_45AC20(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A72C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x48, 4));
	add(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);

loc_46CBFE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CC2D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46CC2D;
    }
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_736D60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x1);

loc_46CC2D:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46CC66;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46CC66;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->eax);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x0);

loc_46CC66:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CCA7;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46CCA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CCA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	jmp(x86::mem(ts->eax + 0x4, 4));

loc_46CCA7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_46CCB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->ebp, 4), 0x789EC8);
	game::sub_45B160(ts, mv);
	xor_(&ts->esi, ts->esi);

loc_46CCE7:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_45B0C0(ts, mv);
	mov(mv, x86::mem(0x82BAF8, 4), ts->eax);
	mov(&ts->esi, ts->edi);
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46CCE7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x14, 1), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_46CD20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B898, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46CD2F;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_46CD2F:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(&ts->edx, 0x4);
	game::sub_45A6D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x462020);
	push(mv, &ts->esp, 0x7);
	game::sub_46CA60(ts, mv);
	retn(mv, &ts->esp);
}

void sub_46CD60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx*8) + 0x4, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_46CD80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789EBC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_45B230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_46CDD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46CE26;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->ecx, 0x5);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 1));
	sub(&ts->ecx, ts->ebp);
	mov(&ts->edx, 0x7FFF);
	if (ts->eflags.zero) {
        goto loc_46CE0E;
    }
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46CE1A;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x6, 2));
	movzx(mv, &ts->edx, x86::mem(0x7F36E8, 2));
	goto loc_46CE1A;

loc_46CE0E:
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 2));
	movzx(mv, &ts->edx, x86::mem(0x7F34A0, 2));

loc_46CE1A:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	imul(&ts->eax, ts->edx);
	sar(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->eax);

loc_46CE26:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_46CEDE;
    }
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x20, 4));
	nop();

loc_46CE40:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x41C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46CE86;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46CE86;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	add(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_45B260(ts, mv);
	goto loc_46CE88;

loc_46CE86:
	xor_(&ts->eax, ts->eax);

loc_46CE88:
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x18, 4));
	mov(&ts->ecx, 0x5);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 2));
	imul(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	sar(&ts->ecx, 0xF);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_45B280(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edx, 0x10);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x9, 1));
	inc(&ts->eax);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46CE40;
    }

loc_46CEDE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x1C, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);
}

void sub_46CEF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CF2C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CF0A;
    }
	game::sub_735550(ts, mv);

loc_46CF0A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46CF2C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CF63;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46CF41;
    }
	game::sub_735550(ts, mv);

loc_46CF41:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_46CF63:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_46CF70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	imul(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	sar(&ts->edi, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D037;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x8, 2));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) + 0x10000, 4));
	and_(&ts->eax, 0x8000FFFF);
	if (!ts->eflags.sign) {
        goto loc_46CFB3;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFF0000);
	inc(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_46CFB3;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46CFBF;

loc_46CFB3:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46CFBF;
    }
	mov(&ts->eax, 0x10000);

loc_46CFBF:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46CFCF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46CFDC;

loc_46CFCF:
	cmp(&ts->eflags, ts->edi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46CFDC;
    }
	mov(&ts->eax, 0x7FFF);

loc_46CFDC:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46CFED;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46CFF9;

loc_46CFED:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46CFF9;
    }
	mov(&ts->eax, 0x2000);

loc_46CFF9:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D00E;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_46D00E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_46D030;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46D037;
    }

loc_46D030:
	mov(&ts->ecx, ts->esi);
	game::sub_46CEF0(ts, mv);

loc_46D037:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D0EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x8, 2));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) + 0x10000, 4));
	and_(&ts->eax, 0x8000FFFF);
	if (!ts->eflags.sign) {
        goto loc_46D067;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFF0000);
	inc(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_46D067;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46D073;

loc_46D067:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46D073;
    }
	mov(&ts->eax, 0x10000);

loc_46D073:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D083;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46D090;

loc_46D083:
	cmp(&ts->eflags, ts->edi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46D090;
    }
	mov(&ts->eax, 0x7FFF);

loc_46D090:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D0A1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46D0AD;

loc_46D0A1:
	cmp(&ts->eflags, ts->eax, 0x2000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46D0AD;
    }
	mov(&ts->eax, 0x2000);

loc_46D0AD:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D0C2;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_46D0C2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_46D0E4;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46D0EB;
    }

loc_46D0E4:
	mov(&ts->ecx, ts->esi);
	game::sub_46CEF0(ts, mv);

loc_46D0EB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_46D100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46D11B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	setz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);

loc_46D11B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_46D130;
    }
	game::sub_46C790(ts, mv);
	goto loc_46D135;

loc_46D130:
	game::sub_45A550(ts, mv);

loc_46D135:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_46D14A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto locret_46D14A;
    }
	xor_(&ts->al, ts->al);

locret_46D14A:
	retn(mv, &ts->esp, 0x4);
}

void sub_46D150(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C6AC);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D1A2;
    }
	push(mv, &ts->esp, 0x7ED0DC);
	mov(&ts->ecx, 0x82C6AC);
	game::sub_735800(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C6AC);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D1A2:
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D1C0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D1C0:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);
}

void sub_46D1D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C560);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D22A;
    }
	push(mv, &ts->esp, 0x7ED0E4);
	mov(&ts->ecx, 0x82C560);
	game::sub_735800(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C560);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D22A:
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D247;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D247:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_46D250(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C588);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D2AA;
    }
	push(mv, &ts->esp, 0x7ED0EC);
	mov(&ts->ecx, 0x82C588);
	game::sub_735800(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C588);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D2AA:
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D2C7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D2C7:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_46D2D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, 0x4);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46D2FB;
    }
	if (ts->eflags.zero) {
        goto loc_46D2F4;
    }
	mov(&ts->edx, ts->ecx);
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_46D2ED;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_46D314;
    }
	goto loc_46D314;

loc_46D2ED:
	mov(&ts->eax, 0x3);
	goto loc_46D314;

loc_46D2F4:
	mov(&ts->eax, 0x2);
	goto loc_46D314;

loc_46D2FB:
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_46D30F;
    }
	cmp(&ts->eflags, ts->ecx, 0x200);
	if (!ts->eflags.zero) {
        goto loc_46D314;
    }
	mov(&ts->eax, 0x5);
	goto loc_46D314;

loc_46D30F:
	mov(&ts->eax, 0x4);

loc_46D314:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C650);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D363;
    }
	push(mv, &ts->esp, 0x7ED0F4);
	mov(&ts->ecx, 0x82C650);
	game::sub_735800(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C650);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D363:
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D381;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D381:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);
}

void sub_46D390(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C5B8);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D3DA;
    }
	push(mv, &ts->esp, 0x7ED0FC);
	mov(&ts->ecx, 0x82C5B8);
	game::sub_735800(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C5B8);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D3DA:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D3F8;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D3F8:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);
}

void sub_46D400(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x82C658);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D45A;
    }
	push(mv, &ts->esp, 0x7ED104);
	mov(&ts->ecx, 0x82C658);
	game::sub_735800(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C658);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D45A:
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D477;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D477:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_46D480(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C580);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x20);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D4D2;
    }
	push(mv, &ts->esp, 0x7ED114);
	mov(&ts->ecx, 0x82C580);
	game::sub_735800(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C580);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D4D2:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D4F0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D4F0:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_46D500(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C5C0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x10);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D552;
    }
	push(mv, &ts->esp, 0x7ED11C);
	mov(&ts->ecx, 0x82C5C0);
	game::sub_735800(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C5C0);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D552:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D570;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D570:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_46D580(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82C640);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x20);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46D5DA;
    }
	push(mv, &ts->esp, 0x7ED124);
	mov(&ts->ecx, 0x82C640);
	game::sub_735800(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C640);
	game::sub_735880(ts, mv);
	add(&ts->esp, 0x8);

loc_46D5DA:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D5F8;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45B480);
	push(mv, &ts->esp, 0x3);
	game::sub_46CA60(ts, mv);

loc_46D5F8:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);
}

void sub_46D600(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45B730(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46D618;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46D618:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46D620(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18C, 1), 0x0);
	game::sub_45B9F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x184, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46D643;
    }
	jmp(x86::mem(0x46D798, 4));

loc_46D64A:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46D66B;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D65F:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_46D643;
    }

loc_46D66B:
	push(mv, &ts->esp, 0x3);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D678:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_46D643;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D691:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x180, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788584, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x190, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_46D643;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46D70E;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46D723;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46D78B;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_46D643;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D6E6:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x180, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788588, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x190, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_46D643;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46D71B;
    }

loc_46D70E:
	push(mv, &ts->esp, 0x5);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D71B:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46D730;
    }

loc_46D723:
	push(mv, &ts->esp, 0x6);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D730:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_46D643;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_46D643;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D74D:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x180, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788578, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x190, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_46D643;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x3, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	if (ts->eflags.zero) {
        goto loc_46D787;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_46D78B;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_45B9C0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_46D787:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_46D643;
    }

loc_46D78B:
	push(mv, &ts->esp, 0x4);
	game::sub_45B9C0(ts, mv);

def_46D643:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_46D7C0(x86::thread_state* ts, x86::memory_view* mv) {
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED0);
	if (ts->eflags.zero) {
        goto loc_46D7D9;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_46D7D9:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46D7E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xAC, 4));
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }

loc_46D807:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_46D81A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D807;
    }
	goto loc_46DA25;

loc_46D81A:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46D836;
    }

loc_46D828:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D838;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D828;
    }

loc_46D836:
	xor_(&ts->eax, ts->eax);

loc_46D838:
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x18, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x238, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DA25;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(0x82BB40, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(0x82BEF0, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEF8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	mov(&ts->ecx, ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(0x82C610, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C614, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82BE70);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C618, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(0x82BE80, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE84, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BE70, 4));
	mov(mv, &ts->ecx, x86::mem(0x82BE74, 4));
	mov(mv, &ts->edx, x86::mem(0x82BEF0, 4));
	mov(mv, x86::mem(0x82BECC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BEF4, 4));
	mov(mv, x86::mem(0x82BED0, 4), ts->ecx);
	mov(mv, x86::mem(0x82BF10, 4), ts->edx);
	mov(&ts->ecx, ts->edx);
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(0x82BF14, 4), ts->eax);
	mov(mv, x86::mem(0x82BF20, 4), ts->ecx);
	mov(mv, x86::mem(0x82BF24, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x60, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE0, 4));
	mov(mv, x86::mem(0x82BEDC, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEDC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEF0, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C6C4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C670, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C674, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->edx);
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(0x82BB48, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x82BB50, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46D97E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_46D99A;
    }

loc_46D97E:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_46D99A;
    }
	mov(mv, &ts->edx, x86::mem(0x827EC8, 4));
	mov(mv, &ts->ecx, x86::mem(0x827EB0, 4));
	mov(mv, &ts->eax, x86::mem(0x827E98, 4));
	or_(&ts->edx, ts->ecx);
	or_(&ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46D9A3;
    }

loc_46D99A:
	mov(mv, &ts->eax, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46D9AF;
    }

loc_46D9A3:
	mov(mv, x86::mem(0x82BB48, 4), 0x4);
	goto loc_46DA25;

loc_46D9AF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46D9CC;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_46D9C0;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_46D9CC;
    }

loc_46D9C0:
	mov(mv, x86::mem(0x82BB48, 4), 0x3);
	goto loc_46DA25;

loc_46D9CC:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46D9E6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_46D9E6;
    }
	mov(mv, x86::mem(0x82BB48, 4), 0x5);
	goto loc_46DA25;

loc_46D9E6:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_4690B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xA8, 4));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46DA1B;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46DA0F;
    }
	mov(mv, x86::mem(0x82BB48, 4), 0x0);
	goto loc_46DA25;

loc_46DA0F:
	mov(mv, x86::mem(0x82BB48, 4), 0x2);
	goto loc_46DA25;

loc_46DA1B:
	mov(mv, x86::mem(0x82BB48, 4), 0x1);

loc_46DA25:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }
	mov(&ts->edx, 0x1);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_46DA50:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_46DA62;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46DA50;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_46DA62:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }

loc_46DA74:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_46DA86;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46DA74;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_46DA86:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DAA0;
    }

loc_46DA94:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_46DAA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46DA94;
    }

loc_46DAA0:
	xor_(&ts->eax, ts->eax);

loc_46DAA2:
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_46DECB;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46DC37;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x238, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DC37;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(0x82BB44, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(0x82BF00, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF04, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF08, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	mov(&ts->ecx, ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(0x82C620, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C624, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x82BE78);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C628, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(0x82BE90, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE94, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE98, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BE78, 4));
	mov(mv, &ts->ecx, x86::mem(0x82BE7C, 4));
	mov(mv, &ts->edx, x86::mem(0x82BF00, 4));
	mov(mv, x86::mem(0x82BED4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BF04, 4));
	mov(mv, x86::mem(0x82BED8, 4), ts->ecx);
	mov(mv, x86::mem(0x82BF18, 4), ts->edx);
	mov(&ts->ecx, ts->edx);
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(0x82BF1C, 4), ts->eax);
	mov(mv, x86::mem(0x82BF28, 4), ts->ecx);
	mov(mv, x86::mem(0x82BF2C, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE8, 4));
	mov(mv, x86::mem(0x82BEE4, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BEE4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF00, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C6CC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C678, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF04, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C67C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BB4C, 4));
	mov(mv, x86::mem(0x82BB54, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DBF8;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_46DBEC;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_46DBF8;
    }

loc_46DBEC:
	mov(mv, x86::mem(0x82BB4C, 4), 0x3);
	goto loc_46DC37;

loc_46DBF8:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_4690B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xA8, 4));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46DC2D;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46DC21;
    }
	mov(mv, x86::mem(0x82BB4C, 4), 0x0);
	goto loc_46DC37;

loc_46DC21:
	mov(mv, x86::mem(0x82BB4C, 4), 0x2);
	goto loc_46DC37;

loc_46DC2D:
	mov(mv, x86::mem(0x82BB4C, 4), 0x1);

loc_46DC37:
	add(&ts->esi, 0x60);
	push(mv, &ts->esp, ts->esi);
	add(&ts->ebx, 0x60);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43CE10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED12C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED130, 4));
	add(&ts->esp, 0x8);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->edi);
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46DEC7;
    }
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(0x82BE70, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(0x82BE74, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE78, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE7C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BE74, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C678, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C670, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C67C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82C674, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BE78, 4));
	mov(mv, &ts->edx, x86::mem(0x82BE7C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E6D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(0x82BE70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(0x82BE74, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BECC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BECC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED0, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED0, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BED8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF2C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF38, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BF40, 4));
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82BE78, 4));
	mov(mv, &ts->eax, x86::mem(0x82BE7C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43E6D0(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_46DEC7:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_46DECB:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);
}

void sub_46DF20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47E650(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46DF38;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46DF38:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46DF40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x5D4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46DF7D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1D4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DF7D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45BB00;

loc_46DF7D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45BB00:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77235E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->edi, ts->edi);

loc_45BB30:
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_45BB30;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x789EE0);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x2);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x3);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x4);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x5);
	game::sub_579F20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1AC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x194, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772310:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772318:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xA4);
	goto sub_5768E0;

loc_772326:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xCC);
	goto sub_5768E0;

loc_772334:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xF4);
	goto sub_5768E0;

loc_772342:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x11C);
	goto sub_5768E0;

loc_772350:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x144);
	goto sub_5768E0;

SEH_45BC70:
	mov(&ts->eax, 0x7DE838);
	goto ___CxxFrameHandler;
}

void sub_46DF80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45BC70(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46DF98;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46DF98:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46DFA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46DFD0;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46DFD0:
	mov(mv, x86::mem(ts->edi + 0x1CC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46DFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xA4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1BC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C0, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1CC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->ebx);
	fnstsw(&ts->fp, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->edx);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E053;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	goto loc_46E059;

loc_46E053:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_46E059:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E083;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	goto loc_46E089;

loc_46E083:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_46E089:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E0B3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_46E0B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E0C6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_46E0C6:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E0EF;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_46E0EF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E102;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_46E102:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	game::sub_576970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	game::sub_576970(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	mov(mv, x86::mem(ts->esi + 0x194, 4), ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x430, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E1BE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1CC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E2CA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E2CA;
    }
	mov(mv, x86::mem(ts->esi + 0x1AC, 4), 0x0);

loc_46E1BE:
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), 0x0);

loc_46E1C8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x430, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E215;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1CC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E32D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xAC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E32D;
    }
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), 0x0);

loc_46E215:
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), 0x0);

loc_46E21F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x88, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x80, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x90, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	game::sub_43C9D0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C9C0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->eax, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	add(&ts->esp, 0x1C);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E390;
    }
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	goto loc_46E39A;

loc_46E2CA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1AC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1AC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E1BE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E303;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA4, 4));
	goto loc_46E309;

loc_46E303:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));

loc_46E309:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->eax);
	goto loc_46E1C8;

loc_46E32D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E215;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xAC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E366;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	goto loc_46E36C;

loc_46E366:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xAC, 4));

loc_46E36C:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->eax);
	goto loc_46E21F;

loc_46E390:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));

loc_46E39A:
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x40, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_59FA10(ts, mv);
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_59FA10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E3CE;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);

loc_46E3CE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ecx);
	mov(&ts->ecx, ts->edx);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x38, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x34, 4));
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E420;
    }
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46E422;
    }

loc_46E420:
	mov(&ts->eax, ts->ecx);

loc_46E422:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B8, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, x86::mem(ts->esi + 0x1C0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x34, 4));
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E45B;
    }
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46E45B;
    }
	mov(&ts->ecx, ts->eax);

loc_46E45B:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_46E476;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	goto loc_46E479;

loc_46E476:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x3C, 4));

loc_46E479:
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46E4A2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	goto loc_46E4A5;

loc_46E4A2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x3C, 4));

loc_46E4A5:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1CC, 4));
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E4E8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fabs(&ts->fp, x86::fp_index(0));
	goto loc_46E4EE;

loc_46E4E8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_46E4EE:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E518;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fabs(&ts->fp, x86::fp_index(0));
	goto loc_46E51E;

loc_46E518:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_46E51E:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E545;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_46E545:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E558;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_46E558:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E581;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_46E581:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46E594;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_46E594:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x150, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x214, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x210, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46E640;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_46E640:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B8, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F0, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46E691;
    }
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ecx);
	goto loc_46E6A7;

loc_46E691:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);

loc_46E6A7:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E6C5;
    }
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46E6C7;
    }

loc_46E6C5:
	mov(&ts->eax, ts->ecx);

loc_46E6C7:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C8, 4));
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E6F1;
    }
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46E6F1;
    }
	mov(&ts->ecx, ts->eax);

loc_46E6F1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ebx, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	add(&ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->ebx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(&ts->ebx, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	game::__ftol2(ts, mv);
	add(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x194, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E759;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46E765;

loc_46E759:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E765;
    }
	mov(&ts->eax, 0x400);

loc_46E765:
	mov(mv, x86::mem(ts->esi + 0x194, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x198, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E779;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46E785;

loc_46E779:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E785;
    }
	mov(&ts->eax, 0x400);

loc_46E785:
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x19C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E799;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46E7A5;

loc_46E799:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E7A5;
    }
	mov(&ts->eax, 0x400);

loc_46E7A5:
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E7B9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46E7C5;

loc_46E7B9:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E7C5;
    }
	mov(&ts->eax, 0x400);

loc_46E7C5:
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E7D9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_46E7E5;

loc_46E7D9:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E7E5;
    }
	mov(&ts->eax, 0x400);

loc_46E7E5:
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46E804;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_46E804:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46E810;
    }
	mov(&ts->eax, 0x400);

loc_46E810:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_46E820(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4F0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46E85D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xF0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46E85D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45BF00;

loc_46E85D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45BF00:
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x789ED4);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->esi, 0x10);
	xor_(&ts->edx, ts->edx);

loc_45BF13:
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	add(&ts->ecx, 0x4);
	dec(&ts->esi);
	mov(mv, x86::mem(ts->eax + 0x48, 2), ts->dx);
	if (!ts->eflags.zero) {
        goto loc_45BF13;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->eax + 0x58, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), 0x789F04);
	mov(mv, x86::mem(ts->eax + 0xE0, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xE4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xE9, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xE8, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46E860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_46E8A0;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46E895;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46E895:
	mov(mv, x86::mem(ts->edi + 0xE4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46E8A0:
	mov(mv, x86::mem(ts->edi + 0xE0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46E8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x40);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED264, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED264, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED264, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED268, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED268, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xD8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x390, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_46EA25;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x393, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_46EA25;
    }
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), 0x0);

loc_46EA25:
	mov(mv, x86::mem(ts->ecx + 0xE9, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x391, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46EA4A;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x392, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46EA4A;
    }
	mov(mv, x86::mem(ts->ecx + 0xE9, 1), 0x0);

loc_46EA4A:
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_46EA50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_46E8B0(ts, mv);
	game::sub_45BFB0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ebp, 0xFFFFFF90);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->ebx);
	mov(&ts->edx, 0x3D4);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	sub(&ts->ebp, ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_46EA90:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edx), 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx) - 0x334, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esi, ts->ebp);
	cmp(&ts->eflags, ts->edx, 0x3D4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->eax) + 0x3B8, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x3B4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46EAFD;
    }
	cmp(&ts->eflags, ts->edx, 0x3E0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46EAFD;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + (ts->edi) + 0x390, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_46EB29;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	goto loc_46EB29;

loc_46EAFD:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + (ts->edi) + 0x390, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_46EB29;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));

loc_46EB29:
	add(&ts->edx, 0x4);
	inc(&ts->edi);
	add(&ts->eax, 0x8);
	cmp(&ts->eflags, ts->edx, 0x3E4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46EA90;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_46EB50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46EB8D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46EB8D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_46DF00;

loc_46EB8D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_46DF00:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AA3C);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46EB90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46EBCD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46EBCD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_46DEE0;

loc_46EBCD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_46DEE0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AA04);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46EBD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x55C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46EC0D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x15C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46EC0D;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_45C0D0;

loc_46EC0D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_46EC10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475240(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46EC28;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46EC28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46EC30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFF0);
	cmp(&ts->eflags, ts->ecx, 0x50);
	if (ts->eflags.zero) {
        goto loc_46EC60;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46EC60:
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46EC70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_46EE50;
    }
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x1);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x12C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x128, 4));
	mov(mv, x86::mem(ts->ecx + 0x12C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x3DCCCCCD);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(&ts->ecx, 0x3C23D70A);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_46ED68;
    }
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ecx);

loc_46ED68:
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAA0, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	add(&ts->edx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->ebp);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_46EE02;
    }
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ecx);

loc_46EE02:
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x6);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14C, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x148, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x154, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x1);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x71, 1), 0x1);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));

loc_46EE50:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_46EE60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC8, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_46EFEA;
    }
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebx);
	mov(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x12C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x128, 4));
	mov(mv, x86::mem(ts->eax + 0x12C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x3D4CCCCD);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46EFED;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46EF4D;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));

loc_46EF4D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_46EF79;
    }
	mov(mv, x86::mem(ts->esi + 0xCC, 4), 0x3C23D70A);

loc_46EF79:
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x3A83126F);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));

loc_46EFEA:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_46EFED:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	goto loc_46EF4D;
}

void sub_46F000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46F078;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	game::sub_46B100(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x120, 4));
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46F040;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45C430(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46F040:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x118, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);

loc_46F078:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC8, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_46F161;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	if (!ts->eflags.zero) {
        goto loc_46F0A8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885C4, 4));

loc_46F0A8:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_46F0B5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885C8, 4));

loc_46F0B5:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, x86::mem(ts->ecx + 0x13C, 4), 0x1);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x108, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_46F0EB;
    }
	mov(mv, x86::mem(ts->ecx + 0x108, 4), 0x3C23D70A);

loc_46F0EB:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10C, 4));
	xor_(&ts->edx, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x118, 4));
	mov(mv, x86::mem(ts->ecx + 0x110, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x114, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x11C, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x104, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x124, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_46F13D;
    }
	mov(mv, x86::mem(ts->ecx + 0x124, 4), 0x3C23D70A);

loc_46F13D:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x128, 4));
	mov(mv, x86::mem(ts->ecx + 0x12C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x134, 4));
	mov(mv, x86::mem(ts->ecx + 0x130, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x138, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x120, 4), ts->edx);

locret_46F161:
	retn(mv, &ts->esp);
}

void sub_46F170(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x55C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46F1AD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x15C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46F1AD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45C490;

loc_46F1AD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45C490:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45C0D0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x789F4C);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46F1B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772506);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);

loc_46F1E6:
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_46F1E6;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x789F70);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_579F20(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 1), 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11C, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->ebx);
	xor_(&ts->edx, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));

loc_46F296:
	mov(mv, x86::mem(ts->eax - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + (ts->edx) + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	inc(&ts->edx);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->edx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46F296;
    }
	mov(mv, x86::mem(ts->ecx + 0x78, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1E4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E8, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xE4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x108, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x152, 1), 0x1);
	game::sub_46AF20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7724F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_475240;

loc_7724F8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x90);
	goto sub_5768E0;

SEH_46F1B0:
	mov(&ts->eax, 0x7DEA78);
	goto ___CxxFrameHandler;
}

void sub_46F3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45C4D0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_46F3D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_46F3D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F3E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46F3FE;
    }
	jmp(x86::mem(0x46F43C, 4));

loc_46F405:
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46F40D:
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46F415:
	mov(mv, x86::mem(ts->edi + 0x74, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_46F41D:
	mov(mv, x86::mem(ts->edi + 0x78, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

def_46F3FE:
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885DC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46F4A3;
    }
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x900, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_46F4A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46F4A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46F4A3;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_46F49B;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_46F4A3;
    }

loc_46F49B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885E0, 4));

loc_46F4A3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAA8, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46F554;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46F4E9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_46F4E9:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAA4, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	game::sub_468160(ts, mv);
	shl(&ts->eax, 0x1);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0xFFFFDA80);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46F50F;
    }
	mov(&ts->eax, 0xFFFFD8F0);

loc_46F50F:
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	add(&ts->esp, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885D8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885D4, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885D4, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_46F55C;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_46F554:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_46F4E9;

loc_46F55C:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46F568;
    }
	mov(&ts->eax, 0x7FFF);

loc_46F568:
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_46F580(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x154, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x0);
	game::sub_46AF70(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x152, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46F5FF;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x64);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7885E8, 4));
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->esi, 0x19);
	game::sub_43C1F0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885E4, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::sub_4598C0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	game::sub_4598F0(ts, mv);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4598F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x152, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);

loc_46F5FF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_46F7BE;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xE4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_46F713;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_46F70B;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46F70B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788600, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46F7A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0xE4, 1), 0x1);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	mov(&ts->ecx, 0x7F0050);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0060, 4));
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885EC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F0064, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x118, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885FC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	game::sub_459990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885F8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7885FC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	game::sub_459990(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x120, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x0);
	goto loc_46F7A0;

loc_46F70B:
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46F7A0;
    }

loc_46F713:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788600, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_46F736;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_46F736;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46F7A0;
    }

loc_46F736:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46F7A0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esi + 0xE4, 1), 0x0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885F0, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	game::sub_459990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885F4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, 0x0);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	game::sub_459990(ts, mv);

loc_46F7A0:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	game::sub_46B100(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	game::sub_46B100(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_46F7BE:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F7D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46F7F6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_46F7EA;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46F7F6;
    }

loc_46F7EA:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xDC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	goto loc_46F819;

loc_46F7F6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46F80F;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_46F80F;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x88, 4));
	goto loc_46F815;

loc_46F80F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));

loc_46F815:
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);

loc_46F819:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x13C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_46F882;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_46F882;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46F882;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(0x7885CC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_46F87E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_46F87E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_46F87E:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_46F882:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x128, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46F977;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_46F977;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46F8E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	goto loc_46F97D;

loc_46F8E1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_46F981;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x120, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x42480000);
	if (ts->eflags.zero) {
        goto loc_46F93C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, 0x43480000);
	push(mv, &ts->esp, ts->eax);
	game::sub_468E30(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAAC, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_46F967;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x120, 1), 0x0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	goto loc_46F981;

loc_46F93C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_468E30(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_46F967;
    }
	mov(mv, x86::mem(ts->esi + 0x120, 1), 0x1);

loc_46F967:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	goto loc_46F981;

loc_46F977:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x154, 4));

loc_46F97D:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);

loc_46F981:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_576970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	pop(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A290, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_46F9D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_46FA0D;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_46FA0D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_46FA0D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885D0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46FA17;
    }

loc_46FA0D:
	xor_(&ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x13C, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_46FA17:
	mov(&ts->al, 0x1);
	mov(mv, x86::mem(ts->esi + 0x13C, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46FA30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(&ts->ebp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_46FA79;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xB4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_46FA79;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 4), 0x2);
	mov(mv, x86::mem(ts->eax + 0xB4, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB8, 4));
	game::__ftol2(ts, mv);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);

loc_46FA79:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC0, 1), ts->bl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_46FCCC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC4, 4));
	mov(mv, x86::mem(ts->eax + 0xC0, 1), ts->bl);
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebp);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_46FAAD;
    }
	jmp(x86::mem(0x46FF64, 4));

loc_46FAB4:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0198);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x27);
	goto loc_46FC17;

loc_46FACD:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0238);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1A);
	goto loc_46FC17;

loc_46FAE6:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F02A8);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1E);
	goto loc_46FC17;

loc_46FAFF:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0328);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1B);
	goto loc_46FC17;

loc_46FB18:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0398);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x16);
	goto loc_46FC17;

loc_46FB31:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F03F8);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x13);
	goto loc_46FC17;

loc_46FB4A:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0448);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x43);
	goto loc_46FC17;

loc_46FB63:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0558);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x38);
	goto loc_46FC17;

loc_46FB7C:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0640);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x22);
	goto loc_46FC17;

loc_46FB95:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F06D0);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1E);
	goto loc_46FC17;

loc_46FBAB:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0750);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1D);
	goto loc_46FC17;

loc_46FBC1:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F07C8);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x2F);
	goto loc_46FC17;

loc_46FBD7:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0888);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x1B);
	goto loc_46FC17;

loc_46FBED:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F08F8);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x18);
	goto loc_46FC17;

def_46FAAD:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x7F0070);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x48);

loc_46FC17:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xE8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_46FCCC;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 4), 0x3);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 2));
	movzx(mv, &ts->edx, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, 0x40800000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_46B240(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x6, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x2, 1));
	push(mv, &ts->esp, 0x40800000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_46B240(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->eax);

loc_46FCCC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_46FDE9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_46FD07;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xEC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78860C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	goto loc_46FE48;

loc_46FD07:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_46FD38;
    }
	dec(mv, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_46FD31;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebp);
	goto loc_46FD38;

loc_46FD31:
	add(mv, x86::mem(ts->esi + 0xE8, 4), 0x4);

loc_46FD38:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_46FE48;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xE8, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 2));
	movzx(mv, &ts->edx, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, 0x40800000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_46B240(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x6, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x2, 1));
	push(mv, &ts->esp, 0x40800000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_46B240(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ecx);
	goto loc_46FE48;

loc_46FDE9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD4, 4));
	dec(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	mov(&ts->edx, 0x0);
	sets(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_46FE42;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788608, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xEC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	goto loc_46FE48;

loc_46FE42:
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebp);

loc_46FE48:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46FEEB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46FE85;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));

loc_46FE85:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xEC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46FEF3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_46FEC7;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));

loc_46FEC7:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_46FEFB;
    }
	mov(&ts->al, 0x1);
	goto loc_46FEFD;

loc_46FEEB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	goto loc_46FE85;

loc_46FEF3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_46FEC7;

loc_46FEFB:
	xor_(&ts->al, ts->al);

loc_46FEFD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->al);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->edx + 0x48, 4), ts->eax);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_46FF3B;
    }
	mov(&ts->al, 0x1);
	goto loc_46FF3D;

loc_46FF3B:
	xor_(&ts->al, ts->al);

loc_46FF3D:
	mov(mv, x86::mem(ts->ecx + 0x4C, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edx + 0x54, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_46FFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4DC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_46FFDD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xDC);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_46FFDD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45C9C0;

loc_46FFDD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45C9C0:
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x789ED4);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->esi, 0x10);
	xor_(&ts->ecx, ts->ecx);

loc_45C9D3:
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	add(&ts->edx, 0x4);
	dec(&ts->esi);
	mov(mv, x86::mem(ts->eax + 0x48, 2), ts->cx);
	if (!ts->eflags.zero) {
        goto loc_45C9D3;
    }
	mov(mv, x86::mem(ts->eax + 0x58, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x789FB8);
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x74, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x7C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x80, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x78, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->ecx);
	mov(&ts->dl, 0x1);
	mov(mv, x86::mem(ts->eax + 0x8C, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xA4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x98, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x94, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA8, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xBC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC4, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x6C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_46FFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_47001F;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_470017;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470017:
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47001F:
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_470030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x90, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788618, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4700D9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4700D9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_470074;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4700D9;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4700D9;
    }

loc_470074:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5ECD30(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78429C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4700D9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78759C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4700D9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4700D9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x4, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4700DE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x50, 4), 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4700DE;
    }

loc_4700D9:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4700DE:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4700F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x50C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47012D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x10C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47012D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45CE20;

loc_47012D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45CE20:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7723A6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789ED4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->ebx, ts->ebx);

loc_45CE50:
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_45CE50;
    }
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x789FE4);
	game::sub_576770(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->ebp);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_576A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x46BB8000);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC2, 2), ts->bx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772390:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772398:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xC4);
	goto sub_5768E0;

loc_7723A6:
	mov(&ts->eax, 0x7DE890);
	goto ___CxxFrameHandler;
}

void sub_470130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45CF40(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_470148;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_470148:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_470150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_470198;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_470190;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_470188;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470188:
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470190:
	mov(mv, x86::mem(ts->edi + 0x74, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470198:
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4701A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x80, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0x1);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47023C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470202;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_470202:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xD8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_470244;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_470344;

loc_47023C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_470202;

loc_470244:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	game::sub_5ECD70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4702DA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4702DA;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4702DA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4702B1;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47027B;
    }

loc_470279:
	xor_(&ts->bl, ts->bl);

loc_47027B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_470286:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_470344;

loc_4702B1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	add(&ts->ecx, 0x80);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	if (ts->eflags.zero) {
        goto loc_470286;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 1), ts->bl);
	goto loc_47033C;

loc_4702DA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4702E8;
    }
	jmp(x86::mem(0x470520, 4));

loc_4702EF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	if (ts->eflags.zero) {
        goto loc_470336;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	xor_(&ts->bl, ts->bl);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_470344;

def_4702E8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_470336:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));

loc_47033C:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_470344:
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(0x7885D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x48, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885D8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x48, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470384;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_470384:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470397;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_470397:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x138, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4703B3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_4703B3:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_470494;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x100, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78861C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470402;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78861C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_470402;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_470402:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78861C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470448;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78861C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_470448;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_470448:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788624, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_470477;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	goto loc_4704A8;

loc_470477:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788624, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4704A8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	goto loc_4704A8;

loc_470494:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);

loc_4704A8:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xE0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAB4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x80, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x84, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_470540(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(0x78861C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->bl, 0x1);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47064A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4705AA;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4705AA:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x84, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_470655;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4705F6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4705F6:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x40, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0xD8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_470691;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_5ECD70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_470677;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_470677;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_470677;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47065D;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_47063F;
    }
	xor_(&ts->bl, ts->bl);

loc_47063F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x80, 4));
	goto loc_470697;

loc_47064A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4705AA;

loc_470655:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4705F6;

loc_47065D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47066F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x80, 4));
	goto loc_470697;

loc_47066F:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x84, 4));
	goto loc_4706F6;

loc_470677:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_470685;
    }
	jmp(x86::mem(0x470924, 4));

loc_47068C:
	xor_(&ts->bl, ts->bl);

loc_47068E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));

loc_470691:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));

loc_470697:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	goto loc_470714;

loc_4706B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_470718;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_470718;

def_470685:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x84, 4));

loc_4706F6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));

loc_470714:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_470718:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4707B1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47074E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	goto loc_470767;

loc_47074E:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470767;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_470767:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4707A9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4707A9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_4707A9:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	goto loc_4707C1;

loc_4707B1:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ecx);

loc_4707C1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(&ts->edi, ts->edx);
	game::sub_576790(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x138, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xE0, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	sub(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784364, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x80, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xFC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_470940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	xor_(&ts->bl, ts->bl);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4709DD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4709DD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4709C0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC2, 2), 0x0);
	mov(&ts->bl, 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4709B9;
    }
	push(mv, &ts->esp, 0x96);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->eax, 0x3C);
	mov(mv, x86::mem(ts->esi + 0xC2, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x152, 1), ts->bl);

loc_4709B9:
	dec(mv, x86::mem(ts->esi + 0xC2, 2));

loc_4709C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3D7, 4));
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0x7FFF);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4709E5;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4709DD:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edx);
	goto loc_4709C0;

loc_4709E5:
	add(&ts->eax, 0xFFFFFF3C);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4709F4;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4709F4:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_470A00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4F4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_470A3D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xF4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_470A3D;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_45D210;

loc_470A3D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_470A40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45D310(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_470A58;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_470A58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_470A60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786460, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_470A98;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_470AA4;

loc_470A98:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470AA4;
    }
	mov(&ts->eax, 0x7FFF);

loc_470AA4:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_470AD1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_470ADD;

loc_470AD1:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470ADD;
    }
	mov(&ts->eax, 0x7FFF);

loc_470ADD:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_470B0A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_470B16;

loc_470B0A:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470B16;
    }
	mov(&ts->eax, 0x7FFF);

loc_470B16:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AABC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_470B43;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_470B4F;

loc_470B43:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470B4F;
    }
	mov(&ts->eax, 0x7FFF);

loc_470B4F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A290, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_470B77;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_470B83;

loc_470B77:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470B83;
    }
	mov(&ts->eax, 0x7FFF);

loc_470B83:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	game::sub_5EC1F0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(&ts->edi, 0x1);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470BA5;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	goto loc_470BA8;

loc_470BA5:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);

loc_470BA8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xA8, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_470BB6;
    }
	jmp(x86::mem(0x470CCC, 4));

loc_470BBD:
	mov(&ts->eax, 0xFA0);
	goto loc_470BCD;

loc_470BC4:
	mov(&ts->eax, 0x7D00);
	goto loc_470BCD;

def_470BB6:
	xor_(&ts->eax, ts->eax);

loc_470BCD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x3FFF, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_470BDE;
    }
	mov(&ts->eax, ts->edx);
	goto loc_470BEA;

loc_470BDE:
	add(&ts->ecx, 0xFFFFC001);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_470BEA;
    }
	mov(&ts->eax, ts->ecx);

loc_470BEA:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_470C24;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	cmp(&ts->eflags, ts->ecx, 0x6);
	if (ts->eflags.zero) {
        goto loc_470C0D;
    }
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_470C24;
    }

loc_470C0D:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x238, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_470C21;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_470C21;
    }
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	goto loc_470C24;

loc_470C21:
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);

loc_470C24:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_470CBE;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edi, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->ebx, x86::mem(0x89E7C0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx), 4));
	add(&ts->ecx, ts->edi);
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_470CBC;
    }
	mov(mv, &ts->ebx, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_470CC1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	movsx(mv, &ts->ebp, x86::mem(ts->ecx + 0x9, 1));
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0xBE8, 4));
	dec(&ts->ebx);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_470CC1;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0xA, 1));
	mov(mv, &ts->ebp, x86::mem(0x89E7C0, 4));
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, ts->edx);
	add(&ts->eax, ts->edi);
	add(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	push(mv, &ts->esp, 0x1EB);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fidiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAB8, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_468E70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_470CBC:
	xor_(&ts->ebx, ts->ebx);

loc_470CBE:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);

loc_470CC1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_470CF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x6B4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_470D2D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x2B4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_470D2D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45D3F0;

loc_470D2D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45D3F0:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7723D8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_45D210(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x78A030);
	game::sub_45B590(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2A0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x29C, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x2A8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2A4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x294, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x290, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x291, 1), ts->bl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7723D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_45D310;

loc_7723D8:
	mov(&ts->eax, 0x7DE8E0);
	goto ___CxxFrameHandler;
}

void sub_470D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45D480(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_470D48;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_470D48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_470D50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_470E8E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_470E8E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xBC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_470E2D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470DD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470DD2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2B0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x460CA000);
	push(mv, &ts->esp, ts->eax);
	game::sub_468E30(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_470DD2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2B0, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470ECC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_470ECC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_470E2D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_470E6C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, 0x42480000);
	push(mv, &ts->esp, 0x447A0000);
	push(mv, &ts->esp, ts->edx);
	game::sub_468E30(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_470E6C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2B0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x457A0000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_468E30(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_470E8E:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_470EA5;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_470EA5;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_470EA5;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_470EB3;
    }

loc_470EA5:
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x45FA0000);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_470EB3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886AC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x298, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));

loc_470ECC:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_470EE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xBC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_470F3B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470F81;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_470F81;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_470F3B:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_470F81;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_470F81;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_470F81:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_470F90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_470FD0;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_470FC5;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470FC5:
	mov(mv, x86::mem(ts->edi + 0xF4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_470FD0:
	mov(mv, x86::mem(ts->edi + 0xF8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_471000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47103D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47103D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45D950;

loc_47103D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45D950:
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), 0x789ED4);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->esi, 0x10);
	xor_(&ts->ecx, ts->ecx);

loc_45D963:
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	add(&ts->edx, 0x4);
	dec(&ts->esi);
	mov(mv, x86::mem(ts->eax + 0x48, 2), ts->cx);
	if (!ts->eflags.zero) {
        goto loc_45D963;
    }
	mov(mv, x86::mem(ts->eax + 0x58, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A064);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xBC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD0, 1), 0x1);
	mov(mv, x86::mem(0x82B078, 4), ts->ecx);
	mov(mv, x86::mem(0x82A998, 4), 0x7F);
	mov(mv, x86::mem(0x82B070, 4), ts->ecx);
	mov(mv, x86::mem(0x82B880, 4), ts->ecx);
	mov(mv, x86::mem(0x82A5B8, 4), 0x0);
	mov(mv, x86::mem(0x82B618, 4), 0x3F800000);
	mov(mv, x86::mem(0x82A5CC, 4), 0x0);
	mov(mv, x86::mem(0x82A5D0, 4), 0x3F800000);
	mov(mv, x86::mem(0x82B064, 4), 0x0);
	mov(mv, x86::mem(0x82AF30, 4), 0x0);
	mov(mv, x86::mem(0x82AFAC, 4), 0x3F800000);
	mov(mv, x86::mem(0x82B074, 4), 0x3F800000);
	mov(&ts->edx, 0x5);
	mov(mv, x86::mem(0x82B060, 4), ts->edx);
	mov(mv, x86::mem(0x82AF2C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xB0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x80, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x84, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x7C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x94, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x98, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD4, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xD5, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xD6, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xBC, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->eax + 0xC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD0, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(0x82AF28, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xD7, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_471040(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFF0);
	cmp(&ts->eflags, ts->ecx, 0xA0);
	if (ts->eflags.zero) {
        goto loc_471073;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_471073:
	mov(mv, x86::mem(ts->edi + 0x6C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_471080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x9C, 1), 0x0);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4710BF;
    }
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x0);

loc_4710BF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4710E5;
    }
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x0);

loc_4710E5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x2);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x90, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_43CE50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x42C, 4));
	add(&ts->esp, 0x8);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7886EC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);

loc_471160:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4711A7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_47119B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_471160;
    }

loc_47119B:
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x5);
	goto loc_471235;

loc_4711A7:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4711F0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4711E2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4711A7;
    }

loc_4711E2:
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x6);
	goto loc_471235;
	goto loc_4711F0;

loc_4711F0:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_471235;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_47122E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4711F0;
    }

loc_47122E:
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x7);

loc_471235:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->dl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_471313;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_471308;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_471267;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x98, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_471273;
    }

loc_471267:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x98, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_471308;
    }

loc_471273:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x430, 4));
	mov(&ts->ecx, 0x7F0B40);
	mov(mv, x86::mem(0x7F0B50, 4), ts->eax);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0B54, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_471308;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(0x7886F0, 4));
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), ts->dl);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x430, 4));
	mov(mv, x86::mem(0x7F0B50, 4), ts->ecx);
	mov(&ts->ecx, 0x7F0B40);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F0B54, 4));
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);

loc_471308:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4713E7;
    }

loc_471313:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4713E7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x78, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_4713E7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_471342;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_47134E;
    }

loc_471342:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4713E7;
    }

loc_47134E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x430, 4));
	mov(mv, x86::mem(0x7F0B50, 4), ts->ecx);
	mov(&ts->ecx, 0x7F0B40);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0B54, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4713E7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(0x7886F0, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x430, 4));
	mov(&ts->ecx, 0x7F0B40);
	mov(mv, x86::mem(0x7F0B50, 4), ts->edx);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F0B54, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);

loc_4713E7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4713F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_47148D;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_47148D;
    }
	mov(mv, &ts->eax, x86::mem(0x82B060, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->ecx, 0x3);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A99C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x7F3778, 4));
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0xFFFFD8F0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_471490;
    }
	mov(&ts->eax, 0xFFFFD8F0);

loc_47143B:
	mov(&ts->edi, ts->eax);

loc_47143D:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x7F3780, 4));
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0xFFFFD8F0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_471498;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_471454;
    }
	xor_(&ts->esi, ts->esi);

loc_471454:
	push(mv, &ts->esp, ts->edi);
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));

locret_47148D:
	retn(mv, &ts->esp, 0x4);

loc_471490:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47143B;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_47143D;

loc_471498:
	mov(&ts->esi, 0xFFFFD8F0);
	goto loc_471454;
}

void sub_4714A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), ts->bl);
	game::sub_46B100(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_471626;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD0, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_471668;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xAC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_471668;
    }
	mov(mv, x86::mem(ts->esi + 0xD6, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xD5, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x82AF2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(0x7F378C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(0x82B060, 4), ts->eax);
	game::sub_459990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A99C, 4));
	mov(mv, &ts->eax, x86::mem(0x82B064, 4));
	mov(mv, &ts->ecx, x86::mem(0x82AFAC, 4));
	mov(mv, &ts->edx, x86::mem(0x82AF30, 4));
	mov(mv, x86::mem(0x82A5B8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B074, 4));
	mov(mv, x86::mem(0x82A5D0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B060, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, x86::mem(0x82B618, 4), ts->ecx);
	mov(mv, x86::mem(0x82A5CC, 4), ts->edx);
	shl(&ts->edi, 0x3);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7F3778, 4));
	add(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0xFFFFD8F0);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47160D;
    }
	mov(&ts->ecx, 0xFFFFD8F0);

loc_471576:
	mov(&ts->edx, ts->ecx);

loc_471578:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7F3780, 4));
	add(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0xFFFFD8F0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47161C;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_471594;
    }
	xor_(&ts->ebp, ts->ebp);

loc_471594:
	push(mv, &ts->esp, ts->edx);
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));
	game::sub_467FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7F377C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));
	game::sub_467FF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x7F3784, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AFAC, 4));
	game::sub_467FF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x10);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B074, 4));
	goto loc_471668;

loc_47160D:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_471576;
    }
	xor_(&ts->edx, ts->edx);
	goto loc_471578;

loc_47161C:
	mov(&ts->ebp, 0xFFFFD8F0);
	goto loc_471594;

loc_471626:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_471668;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD0, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_471668;
    }
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x82B064, 4));
	mov(mv, &ts->ecx, x86::mem(0x82AFAC, 4));
	mov(mv, &ts->edx, x86::mem(0x82AF30, 4));
	mov(mv, x86::mem(0x82A5B8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B074, 4));
	mov(mv, x86::mem(0x82B618, 4), ts->ecx);
	mov(mv, x86::mem(0x82A5CC, 4), ts->edx);
	mov(mv, x86::mem(0x82A5D0, 4), ts->eax);

loc_471668:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4717D7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4717D7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5B8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4716C0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5B8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4716C0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));

loc_4716C0:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5B8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B618, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AFAC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_471706;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B618, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AFAC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_471706;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AFAC, 4));

loc_471706:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B618, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5CC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_47174C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5CC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_47174C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));

loc_47174C:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5CC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B074, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_471792;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5D0, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B074, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_471792;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B074, 4));

loc_471792:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5D0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, x86::mem(0x82B078, 4), ts->ebp);
	game::__ftol2(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(0x82A998, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x82B070, 4), ts->edi);
	goto loc_47186D;

loc_4717D7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B064, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5B8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5B8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AFAC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B618, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, x86::mem(0x82B078, 4), ts->ebp);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B618, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82AF30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5CC, 4));
	mov(mv, x86::mem(0x82A998, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5CC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82B074, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5D0, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x82B070, 4), ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xCC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82A5D0, 4));

loc_47186D:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x82B880, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x82AF28, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4718D2;
    }
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4718BF;
    }
	cmp(&ts->eflags, ts->edi, 0x7FFF);
	mov(&ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_471899;
    }
	mov(&ts->eax, 0x7FFF);

loc_471899:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(mv, x86::mem(0x82B070, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4718C3;
    }
	cmp(&ts->eflags, ts->ebp, 0x7FFF);
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4718B2;
    }
	mov(&ts->eax, 0x7FFF);

loc_4718B2:
	mov(mv, x86::mem(0x82B078, 4), ts->eax);
	mov(mv, x86::mem(0x82AF28, 1), ts->bl);
	goto loc_4718D9;

loc_4718BF:
	xor_(&ts->eax, ts->eax);
	goto loc_471899;

loc_4718C3:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82B078, 4), ts->eax);
	mov(mv, x86::mem(0x82AF28, 1), ts->bl);
	goto loc_4718D9;

loc_4718D2:
	mov(mv, x86::mem(0x82AF28, 1), 0x1);

loc_4718D9:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD0, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0xAC, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4718F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47192D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47192D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_470FE0;

loc_47192D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_470FE0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AAC0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_471930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x46C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47196A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47196A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45DC80;

loc_47196A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45DC80:
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x789ED4);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->edx, 0x10);
	xor_(&ts->ebx, ts->ebx);

loc_45DC93:
	mov(mv, x86::mem(ts->ecx, 4), ts->ebx);
	add(&ts->ecx, 0x4);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->eax + 0x48, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_45DC93;
    }
	mov(mv, x86::mem(ts->eax + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A08C);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_471970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_471BCA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0x7FFF);
	push(mv, &ts->esp, 0x0);
	sub(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_468160(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A6C8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471AA7;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471AA7:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471ACF;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471ACF:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471AF6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471AF6:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471B1E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471B1E:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471B46;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471B46:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471B6D;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_471B6D:
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_471BB4;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_471BB4;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_471BB4;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_471BB4;
    }
	mov(mv, &ts->eax, x86::mem(0x82B9C8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471BAC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x98, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_471BB4;
    }

loc_471BAC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->ecx);
	goto loc_471BBB;

loc_471BB4:
	mov(mv, x86::mem(ts->esi + 0x3C, 4), 0x7FFF);

loc_471BBB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->edi, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(0x7ED344, 4), ts->edx);

loc_471BCA:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_471C1B;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471C12;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_471C1B;
    }
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_471BF9;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_435950(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_471C1B;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));

loc_471BF9:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471C12;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_471C12;
    }
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471C12;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_471C1B;
    }

loc_471C12:
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	goto loc_471C22;

loc_471C1B:
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);

loc_471C22:
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_471C49;
    }
	mov(mv, &ts->eax, x86::mem(0x8383A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471C49;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x1E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_471C49;
    }
	cmp(&ts->eflags, ts->eax, 0x22);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_471C49;
    }
	mov(mv, x86::mem(ts->esi + 0x40, 4), 0x1);
	goto loc_471C50;

loc_471C49:
	mov(mv, x86::mem(ts->esi + 0x40, 4), 0x0);

loc_471C50:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_471C8C;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471C8C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_471C8C;
    }
	mov(mv, &ts->eax, x86::mem(0x827EC8, 4));
	mov(mv, &ts->edx, x86::mem(0x827EB0, 4));
	mov(mv, &ts->ecx, x86::mem(0x827E98, 4));
	or_(&ts->eax, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_471C8C;
    }
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_471C8C:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_471CE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_471D1D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471D1D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_471CA0;

loc_471D1D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_471CA0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AAF8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_471D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_471D5D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471D5D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_471CC0;

loc_471D5D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_471CC0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AB30);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_471D80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_471DBD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471DBD;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_45DD60;

loc_471DBD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_471DC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_471DDB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_471DDB:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_45E1F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_471E00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_471E3D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_471E3D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_45E430;

loc_471E3D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_45E430:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A130);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_471E40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A130);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_471EA6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_471E83;
    }
	game::sub_735550(ts, mv);

loc_471E83:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_471EA6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_471F30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471F75;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471F4D;
    }
	game::sub_735550(ts, mv);

loc_471F4D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);

loc_471F75:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471FB2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471F8A;
    }
	game::sub_735550(ts, mv);

loc_471F8A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);

loc_471FB2:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471FEF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_471FC7;
    }
	game::sub_735550(ts, mv);

loc_471FC7:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);

loc_471FEF:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47202C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472004;
    }
	game::sub_735550(ts, mv);

loc_472004:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);

loc_47202C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472069;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472041;
    }
	game::sub_735550(ts, mv);

loc_472041:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);

loc_472069:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_472070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4720C0;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4720B5;
    }
	sub(&ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4720AA;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4720AA:
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4720B5:
	mov(mv, x86::mem(ts->edi + 0xCC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4720C0:
	mov(mv, x86::mem(ts->edi + 0xC8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4720D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_472293;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78ABF8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_472291;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xD4, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F096C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x7F095C);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F0970, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebp, ts->eax);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	imul(&ts->edi, ts->esi);
	sar(&ts->edi, 0xF);
	imul(&ts->edi, ts->ebp);
	push(mv, &ts->esp, 0x20);
	sar(&ts->edi, 0xF);
	mov(mv, x86::mem(0x7EC844, 4), 0x78ABE4);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_472254;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x80, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebp, 4), 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4721B9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4721C3;

loc_4721B9:
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4721C3;
    }
	mov(&ts->eax, 0x3C);

loc_4721C3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::__ftol2(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4721D9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4721E5;

loc_4721D9:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4721E5;
    }
	mov(&ts->eax, 0x2710);

loc_4721E5:
	cmp(&ts->eflags, ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4721F0;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4721FD;

loc_4721F0:
	cmp(&ts->eflags, ts->edi, 0x8013);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4721FD;
    }
	mov(&ts->edi, 0x8013);

loc_4721FD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47220C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_472218;

loc_47220C:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_472218;
    }
	mov(&ts->eax, 0x10000);

loc_472218:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C680);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_472256;
    }
	push(mv, &ts->esp, 0x7EDE20);
	mov(&ts->ecx, 0x82C680);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C680);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_472256;

loc_472254:
	xor_(&ts->esi, ts->esi);

loc_472256:
	mov(mv, x86::mem(ts->ebx + 0xBC, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_472293;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_735070(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_472291:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_472293:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_4722B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47246B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78ABF8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_472469;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xD4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F096C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x7F095C);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F0970, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebp, ts->eax);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	imul(&ts->edi, ts->esi);
	sar(&ts->edi, 0xF);
	imul(&ts->edi, ts->ebp);
	push(mv, &ts->esp, 0x20);
	sar(&ts->edi, 0xF);
	mov(mv, x86::mem(0x7EC844, 4), 0x78ABFC);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47244E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x80, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebp, 4), 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47239C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4723A6;

loc_47239C:
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4723A6;
    }
	mov(&ts->eax, 0x3C);

loc_4723A6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::__ftol2(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4723BC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4723C8;

loc_4723BC:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4723C8;
    }
	mov(&ts->eax, 0x2710);

loc_4723C8:
	cmp(&ts->eflags, ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4723D3;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4723E0;

loc_4723D3:
	cmp(&ts->eflags, ts->edi, 0x8013);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4723E0;
    }
	mov(&ts->edi, 0x8013);

loc_4723E0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4723EF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4723FB;

loc_4723EF:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4723FB;
    }
	mov(&ts->eax, 0x10000);

loc_4723FB:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C680);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_472450;
    }
	push(mv, &ts->esp, 0x7EDE20);
	mov(&ts->ecx, 0x82C680);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C680);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xC0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_47244E:
	xor_(&ts->esi, ts->esi);

loc_472450:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xC0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_472469:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_47246B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_472590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772526);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78AC10);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_472606;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4725D3;
    }
	game::sub_735550(ts, mv);

loc_4725D3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x0);
	dec(mv, x86::mem(0x82BC18, 4));

loc_472606:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47264E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47261B;
    }
	game::sub_735550(ts, mv);

loc_47261B:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x0);
	dec(mv, x86::mem(0x82BC1C, 4));

loc_47264E:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x188, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772510:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772518:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x188);
	goto sub_5768E0;

SEH_472590:
	mov(&ts->eax, 0x7DEAA4);
	goto ___CxxFrameHandler;
}

void sub_472680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4726D2;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4726C7;
    }
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4726BC;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4726BC:
	mov(mv, x86::mem(ts->edi + 0x1BC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4726C7:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4726D2:
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4726E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_472761;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED3A4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47274E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_47274E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_47274E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47274E;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x96);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->edi);
	game::sub_459990(ts, mv);

loc_47274E:
	mov(&ts->ecx, ts->esi);
	game::sub_45EFF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_472761;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45F050(ts, mv);

loc_472761:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_472770(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_472798;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_45F0A0(ts, mv);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_472798:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4727DA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4727C5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	goto loc_4727D4;

loc_4727C5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));

loc_4727D4:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));

loc_4727DA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	push(mv, &ts->esp, ts->edi);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_472803;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_472803:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_472816;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_472816:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	sub(&ts->eax, 0x3E8);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_472922;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47286F;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_47286F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788810, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788810, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4728A9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_4728A9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4728BC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4728BC:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_47292D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x100, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47292D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x100, 1), 0x1);
	game::sub_4598C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3E8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_4598F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78880C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7D0);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_4598F0(ts, mv);
	goto loc_472948;

loc_472922:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_47286F;

loc_47292D:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_472948;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x100, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_472948;
    }
	mov(mv, x86::mem(ts->esi + 0x100, 1), 0x0);

loc_472948:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xE0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	imul(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x100, 1));
	sar(&ts->ecx, 0xF);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4729BA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	game::sub_46AF70(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7EF7F8, 4));
	imul(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	sar(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);

loc_4729BA:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_472A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78AC58);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_45F410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_472AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_472AE2;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_472AD7;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_472AD7:
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_472AE2:
	mov(mv, x86::mem(ts->edi + 0xC8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_472AF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77253B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_472BF5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_472BF5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_472B71;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_472B44;
    }
	game::sub_735550(ts, mv);

loc_472B44:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x0);

loc_472B71:
	push(mv, &ts->esp, 0x14);
	mov(mv, x86::mem(0x7EC844, 4), 0x78AC9C);
	game::sub_457E20(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_472BB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_457E70(ts, mv);
	goto loc_472BB4;

loc_472BB2:
	xor_(&ts->eax, ts->eax);

loc_472BB4:
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_472BEE;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_472BEE;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_472BEE;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x1);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_472BEE:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_472BF5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

unknown_libname_53:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_469760:
	mov(&ts->eax, 0x7DE77C);
	goto ___CxxFrameHandler;
}

void sub_472C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_472CC2;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_472CB7;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_472CB7:
	mov(mv, x86::mem(ts->edi + 0xFC, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_472CC2:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_472CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->ecx + 0xF8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_472CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472D35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472D0D;
    }
	game::sub_735550(ts, mv);

loc_472D0D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);

loc_472D35:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xF4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472D63;
    }
	mov(mv, x86::mem(ts->esi + 0xF4, 1), ts->bl);
	add(&ts->esi, 0xC4);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x82C648);
	game::sub_7359A0(ts, mv);
	add(&ts->esp, 0x8);

loc_472D63:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_472E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_472E40;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_472E40:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_472E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772566);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_472E9E;
    }
	push(mv, &ts->esp, 0x78AD40);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->ebp + 0xA0, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);

loc_472E9E:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x20);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_472F2E;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	mov(mv, x86::mem(ts->edi, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_472F30;
    }
	push(mv, &ts->esp, 0x7EDD50);
	mov(&ts->ecx, 0x82C540);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_472F30;

loc_472F2E:
	xor_(&ts->esi, ts->esi);

loc_472F30:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xB8, 4), ts->esi);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x20);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_472FD0;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	mov(mv, x86::mem(ts->edi, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_472FD2;
    }
	push(mv, &ts->esp, 0x7EDD50);
	mov(&ts->ecx, 0x82C540);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C540);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_472FD2;

loc_472FD0:
	xor_(&ts->esi, ts->esi);

loc_472FD2:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x9C, 4));
	mov(mv, x86::mem(ts->ebp + 0xBC, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);

loc_772550:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_77255B:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_472E50:
	mov(&ts->eax, 0x7DEAD0);
	goto ___CxxFrameHandler;
}

void sub_473010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473055;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47302D;
    }
	game::sub_735550(ts, mv);

loc_47302D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);

loc_473055:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473092;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47306A;
    }
	game::sub_735550(ts, mv);

loc_47306A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);

loc_473092:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4730CF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4730A7;
    }
	game::sub_735550(ts, mv);

loc_4730A7:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);

loc_4730CF:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xCC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47310C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4730E4;
    }
	game::sub_735550(ts, mv);

loc_4730E4:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);

loc_47310C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47311C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47311C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473132;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_473132:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47316F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47314D;
    }
	game::sub_735550(ts, mv);

loc_47314D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47316F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4731AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47318A;
    }
	game::sub_735550(ts, mv);

loc_47318A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_4731AC:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4731C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772466);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4735B9;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4735B9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	mov(mv, x86::mem(ts->ebp + 0x4, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	push(mv, &ts->esp, ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, 0x7F0978);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0988, 4));
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F098C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47323A;
    }
	jmp(x86::mem(0x4735CC, 4));

loc_473241:
	mov(&ts->esi, 0x2EE0);
	goto loc_473254;

loc_473248:
	mov(&ts->esi, 0x5FB4);
	goto loc_473254;

def_47323A:
	mov(&ts->esi, 0x7FFF);

loc_473254:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	imul(&ts->esi, ts->eax);
	mov(mv, x86::mem(0x7F09A4, 4), ts->ecx);
	mov(&ts->ecx, 0x7F0994);
	sar(&ts->esi, 0xF);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F09A8, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x3C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_473425;
    }
	push(mv, &ts->esp, 0x3);
	mov(mv, x86::mem(ts->ebp + 0xEC, 4), ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(&ts->edi, ts->eax);
	imul(&ts->edi, ts->esi);
	mov(mv, x86::mem(0x7EC844, 4), 0x78AD98);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xCC, 4));
	sar(&ts->edi, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4732BC;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_4732BC:
	push(mv, &ts->esp, 0x20);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47338C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	mov(&ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4732F2;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_4732FC;

loc_4732F2:
	cmp(&ts->eflags, ts->ebx, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4732FC;
    }
	mov(&ts->ecx, 0xF);

loc_4732FC:
	cmp(&ts->eflags, ts->edi, ts->edx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473309;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_473316;

loc_473309:
	cmp(&ts->eflags, ts->edi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473316;
    }
	mov(&ts->edi, 0x7FFF);

loc_473316:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473325;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_473332;

loc_473325:
	cmp(&ts->eflags, ts->ecx, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473332;
    }
	mov(&ts->ecx, 0x1FFF);

loc_473332:
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47333D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_473349;

loc_47333D:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473349;
    }
	mov(&ts->eax, 0xFFFF);

loc_473349:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C6B4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47338E;
    }
	push(mv, &ts->esp, 0x7EDD58);
	mov(&ts->ecx, 0x82C6B4);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C6B4);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_47338E;

loc_47338C:
	xor_(&ts->esi, ts->esi);

loc_47338E:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xCC, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4735B6;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB48, 4));
	and_(&ts->eax, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_4733BB;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFC);
	inc(&ts->eax);

loc_4733BB:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4E, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x82CB48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, 0x78AD84);
	push(mv, &ts->esp, 0x5C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_457AA0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_473418;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0xD4, 4), ts->eax);
	goto loc_4735AA;

loc_473418:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0xD4, 4), ts->eax);
	goto loc_4735AA;

loc_473425:
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->ebp + 0xF0, 4), ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(&ts->edi, ts->eax);
	imul(&ts->edi, ts->esi);
	mov(mv, x86::mem(0x7EC844, 4), 0x78AD68);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC8, 4));
	sar(&ts->edi, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_473453;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_45FA60(ts, mv);

loc_473453:
	push(mv, &ts->esp, 0x20);
	game::sub_457E20(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_473523;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	mov(&ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473489;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_473493;

loc_473489:
	cmp(&ts->eflags, ts->ebx, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473493;
    }
	mov(&ts->ecx, 0xF);

loc_473493:
	cmp(&ts->eflags, ts->edi, ts->edx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4734A0;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4734AD;

loc_4734A0:
	cmp(&ts->eflags, ts->edi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4734AD;
    }
	mov(&ts->edi, 0x7FFF);

loc_4734AD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4734BC;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_4734C9;

loc_4734BC:
	cmp(&ts->eflags, ts->ecx, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4734C9;
    }
	mov(&ts->ecx, 0x1FFF);

loc_4734C9:
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4734D4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4734E0;

loc_4734D4:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4734E0;
    }
	mov(&ts->eax, 0xFFFF);

loc_4734E0:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C6B4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473525;
    }
	push(mv, &ts->esp, 0x7EDD58);
	mov(&ts->ecx, 0x82C6B4);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C6B4);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_473525;

loc_473523:
	xor_(&ts->esi, ts->esi);

loc_473525:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xC8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4735B6;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB44, 4));
	and_(&ts->eax, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47354E;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFC);
	inc(&ts->eax);

loc_47354E:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4E, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x82CB44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, 0x78AD84);
	push(mv, &ts->esp, 0x5C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_457AA0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4735A2;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_4735A4;

loc_4735A2:
	xor_(&ts->eax, ts->eax);

loc_4735A4:
	mov(mv, x86::mem(ts->ebp + 0xD0, 4), ts->eax);

loc_4735AA:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_46CDD0(ts, mv);

loc_4735B6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4735B9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x8);

loc_772450:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_77245B:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_4731C0:
	mov(&ts->eax, 0x7DE9AC);
	goto ___CxxFrameHandler;
}

void sub_4735E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB4, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_47389A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	mov(&ts->ecx, 0x82C69C);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_576790(ts, mv);
	game::__ftol2(ts, mv);
	imul(&ts->eax, ts->eax, 0x7FFF);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788820, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788828, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47368B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788828, 4));

loc_47368B:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78882C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788820, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788828, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4736DE;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788828, 4));

loc_4736DE:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xAC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788824, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78882C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78882C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_473719;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78882C, 4));

loc_473719:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78ADB4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47373A;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x46FA0000);

loc_47373A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78ADB4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_473753;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x46FA0000);

loc_473753:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ecx, 0x7F09D8);
	mov(mv, x86::mem(0x7F09E8, 4), ts->eax);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F09EC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788830, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788838, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4737AD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788838, 4));

loc_4737AD:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xAC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788834, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4737E8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));

loc_4737E8:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FE0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_473809;
    }
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x45BB8000);

loc_473809:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788830, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788838, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_473840;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788838, 4));

loc_473840:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788834, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47387D;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78883C, 4));

loc_47387D:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FE0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47389A;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FE0, 4));

loc_47389A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_473920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x194, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_473967;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47393A;
    }
	game::sub_735550(ts, mv);

loc_47393A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x194, 4), 0x0);

loc_473967:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_473970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_47397F;
    }
	goto loc_4604E0;

locret_47397F:
	retn(mv, &ts->esp);

loc_4604E0:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->edi, ts->eax);
	imul(mv, &ts->edi, x86::mem(ts->esi + 0x190, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(&ts->ebx, ts->eax);
	imul(mv, &ts->ebx, x86::mem(ts->esi + 0x190, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x194, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sar(&ts->ebx, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_46052C;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_735070(ts, mv);

loc_46052C:
	mov(mv, &ts->ecx, x86::mem(0x7ED3EC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x194, 4));
	mov(&ts->eax, ts->ecx);
	imul(&ts->ecx, ts->edi);
	imul(&ts->eax, ts->ebx);
	sar(&ts->ecx, 0xF);
	sar(&ts->eax, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46054E;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_46055B;

loc_46054E:
	cmp(&ts->eflags, ts->ecx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_46055B;
    }
	mov(&ts->ecx, 0x7FFF);

loc_46055B:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x194, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_46056C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460578;

loc_46056C:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460578;
    }
	mov(&ts->eax, 0x7FFF);

loc_460578:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(&ts->ecx, 0x1000);
	if (!ts->eflags.zero) {
        goto loc_4605A6;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4605A8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4605A8;
    }

loc_4605A6:
	xor_(&ts->ecx, ts->ecx);

loc_4605A8:
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x194, 4));
	mov(&ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4605B8;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4605C5;

loc_4605B8:
	cmp(&ts->eflags, ts->ecx, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4605C5;
    }
	mov(&ts->eax, 0x1FFF);

loc_4605C5:
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x194, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4605DF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4605EB;

loc_4605DF:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4605EB;
    }
	mov(&ts->eax, 0xFFFF);

loc_4605EB:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x194, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460605;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460611;

loc_460605:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460611;
    }
	mov(&ts->eax, 0xFFFF);

loc_460611:
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x19C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x194, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_460628;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_460634;

loc_460628:
	cmp(&ts->eflags, ts->eax, 0x410);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_460634;
    }
	mov(&ts->eax, 0x410);

loc_460634:
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x194, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_46064C;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_46064C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4739C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4739FD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4739DA;
    }
	game::sub_735550(ts, mv);

loc_4739DA:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_4739FD:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_473A10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_473A5F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_473A2E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x44, 4));

loc_473A2E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	mov(&ts->ecx, 0x7F09F4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0A04, 4));
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F0A08, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edx);

loc_473A5F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_473AE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xB0, 4));
	mov(&ts->ebx, 0x4);

loc_473AF2:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_473B2C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_473B03;
    }
	game::sub_735550(ts, mv);

loc_473B03:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_473B2C:
	add(&ts->edi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_473AF2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0xA0, 1), 0x0);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_473B40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_473B8E;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_473B83;
    }
	sub(&ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_473B78;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_473B78:
	mov(mv, x86::mem(ts->edi + 0x140, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_473B83:
	mov(mv, x86::mem(ts->edi + 0x138, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_473B8E:
	mov(mv, x86::mem(ts->edi + 0x13C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_473BA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x900, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_473BC0;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x1);

loc_473BC0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1D0, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4608D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_473BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->dl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi, 4), 0x78AE90);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->dl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x6);
	mov(&ts->edi, 0x82AF90);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(0x7ED440, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_473C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x78AE90);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xB0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_473CC6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_473CA3;
    }
	game::sub_735550(ts, mv);

loc_473CA3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_473CC6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_473D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78AEE0);
	goto sub_473C60;
}

void sub_473D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772578);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx, 4), 0x78AF30);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xD0, 4));

loc_473DC2:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_473DD4;
    }
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_473DDE;
    }

loc_473DD4:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_473E3D;
    }
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473E3D;
    }

loc_473DDE:
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473E02;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473E02;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_72387B(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->ebx);

loc_473E02:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473E0E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_473E0E:
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473E1D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_473E1D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_473E30;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_473E30:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	inc(&ts->ebp);
	add(&ts->esi, 0x1C);
	goto loc_473DC2;

loc_473E3D:
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_473C60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772570:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_473C60;

SEH_473D90:
	mov(&ts->eax, 0x7DEAF4);
	goto ___CxxFrameHandler;
}

void sub_473E60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_474024;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x80, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x104, 4));
	imul(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	sar(&ts->ecx, 0xF);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3F800000);
	if (ts->eflags.parity) {
        goto loc_473ECE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_473ECE:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x82A998, 4));
	sar(&ts->ebx, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473EE1;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_473EEB;

loc_473EE1:
	cmp(&ts->eflags, ts->ebx, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473EEB;
    }
	mov(&ts->ebx, 0x7F);

loc_473EEB:
	mov(&ts->eax, ts->ecx);
	sar(&ts->eax, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473EFE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_473F08;

loc_473EFE:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473F08;
    }
	mov(&ts->eax, 0x7F);

loc_473F08:
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(0x82B078, 4));
	imul(&ts->edi, ts->edx);
	sar(&ts->edi, 0x17);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_473F22;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_473F2C;

loc_473F22:
	cmp(&ts->eflags, ts->edi, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_473F2C;
    }
	mov(&ts->edi, 0x7F);

loc_473F2C:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_72412A(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_724093(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_723D9B(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xBC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_72403E(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_723C41(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_723BC1(ts, mv);
	add(&ts->esp, 0x30);
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x42700000);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	game::sub_467230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_473FF3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_474014;

loc_473FF3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4669D0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_474014:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AF80, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));

loc_474024:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_474030(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_474306;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x80, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x104, 4));
	imul(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	sar(&ts->ecx, 0xF);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3F800000);
	if (ts->eflags.parity) {
        goto loc_4740A2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_4740A2:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x82A998, 4));
	sar(&ts->ebx, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4740B6;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_4740C0;

loc_4740B6:
	cmp(&ts->eflags, ts->ebx, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4740C0;
    }
	mov(&ts->ebx, 0x7F);

loc_4740C0:
	mov(&ts->eax, ts->ecx);
	sar(&ts->eax, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4740D3;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4740DD;

loc_4740D3:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4740DD;
    }
	mov(&ts->eax, 0x7F);

loc_4740DD:
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(0x82B078, 4));
	imul(&ts->edi, ts->edx);
	sar(&ts->edi, 0x17);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4740F7;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_474101;

loc_4740F7:
	cmp(&ts->eflags, ts->edi, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474101;
    }
	mov(&ts->edi, 0x7F);

loc_474101:
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_72412A(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_724093(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_723D9B(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xBC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_72403E(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_723C41(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_723BC1(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x42700000);
	push(mv, &ts->esp, ts->ebp);
	game::sub_467230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4741C1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4741E2;

loc_4741C1:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4669D0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_4741E2:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AF80, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(0x82A998, 4));
	imul(&ts->eax, ts->ecx);
	sar(&ts->ebx, 0x8);
	sar(&ts->eax, 0xF);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474219;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_474223;

loc_474219:
	cmp(&ts->eflags, ts->ebx, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474223;
    }
	mov(&ts->ebx, 0x7F);

loc_474223:
	sar(&ts->eax, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474234;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47423E;

loc_474234:
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47423E;
    }
	mov(&ts->eax, 0x7F);

loc_47423E:
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(0x82B078, 4));
	imul(&ts->edi, ts->ecx);
	sar(&ts->edi, 0x17);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474258;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_474262;

loc_474258:
	cmp(&ts->eflags, ts->edi, 0x7F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474262;
    }
	mov(&ts->edi, 0x7F);

loc_474262:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_72412A(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_724093(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A2E0, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_723D9B(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xBC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_72403E(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_723C41(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_723BC1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x42700000);
	push(mv, &ts->esp, ts->ebp);
	game::sub_467230(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	goto sub_721FA7;

loc_474306:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_474310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x3F800000);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_474346;
    }
	game::sub_473E60(ts, mv);
	goto loc_47434B;

loc_474346:
	game::sub_474030(ts, mv);

loc_47434B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47459F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x7C, 4));
	mov(mv, &ts->ebp, x86::mem(0x82B070, 4));
	imul(&ts->ecx, ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82B880, 4));
	imul(&ts->ebp, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->ecx, 0xF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x7FFF, 4));
	mov(&ts->ecx, ts->edx);
	sar(&ts->ebp, 0xF);
	cmp(&ts->eflags, ts->ecx, 0xFFFF8001);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4743A6;
    }
	mov(&ts->ecx, 0xFFFF8001);
	goto loc_4743AC;

loc_4743A6:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4743AC;
    }
	xor_(&ts->ecx, ts->ecx);

loc_4743AC:
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ecx);
	mov(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xFFFF8001);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4743C6;
    }
	mov(&ts->ecx, 0xFFFF8001);
	goto loc_4743CC;

loc_4743C6:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4743CC;
    }
	xor_(&ts->ecx, ts->ecx);

loc_4743CC:
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB8, 4));
	imul(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	sar(&ts->ecx, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4743EF;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_4743FC;

loc_4743EF:
	cmp(&ts->eflags, ts->ecx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4743FC;
    }
	mov(&ts->ecx, 0x7FFF);

loc_4743FC:
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474418;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_474424;

loc_474418:
	cmp(&ts->eflags, ts->eax, 0x2710);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474424;
    }
	mov(&ts->eax, 0x2710);

loc_474424:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AF84, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0xFFFFC001);
	sub(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0xFFFFC001);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474454;
    }
	mov(&ts->ecx, 0xFFFFC001);
	goto loc_474461;

loc_474454:
	cmp(&ts->eflags, ts->ecx, 0x3FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474461;
    }
	mov(&ts->ecx, 0x3FFF);

loc_474461:
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A1C8, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474488;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_474494;

loc_474488:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474494;
    }
	mov(&ts->eax, 0x400);

loc_474494:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x134, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4744B1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4744BD;

loc_4744B1:
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4744BD;
    }
	mov(&ts->eax, 0x400);

loc_4744BD:
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4744D7;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4744E3;

loc_4744D7:
	cmp(&ts->eflags, ts->eax, 0x10000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4744E3;
    }
	mov(&ts->eax, 0x10000);

loc_4744E3:
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	add(&ts->eax, 0xFFFF8001);
	cmp(&ts->eflags, ts->eax, 0xFFFF8001);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474503;
    }
	mov(&ts->eax, 0xFFFF8001);
	goto loc_474509;

loc_474503:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474509;
    }
	xor_(&ts->eax, ts->eax);

loc_474509:
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47451C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_474529;

loc_47451C:
	cmp(&ts->eflags, ts->ebp, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474529;
    }
	mov(&ts->eax, 0x7FFF);

loc_474529:
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x138, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_474548;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_474554;

loc_474548:
	cmp(&ts->eflags, ts->eax, 0x61A8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474554;
    }
	mov(&ts->eax, 0x61A8);

loc_474554:
	mov(mv, x86::mem(ts->ecx + 0x58, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xC0, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.zero) {
        goto loc_474576;
    }
	mov(mv, x86::mem(ts->eax + 0x5C, 4), 0x2AF8);
	goto loc_47457D;

loc_474576:
	mov(mv, x86::mem(ts->eax + 0x5C, 4), 0x0);

loc_47457D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->eax + 0x64, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47459F;
    }
	add(&ts->esi, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_735580(ts, mv);

loc_47459F:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_474610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_474650;
    }
	sub(&ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_474645;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_474645:
	mov(mv, x86::mem(ts->edi + 0xF4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_474650:
	mov(mv, x86::mem(ts->edi + 0xF0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_474660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ebx*4) + 0xCC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + (ts->ebx*4) + 0xB8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + (ts->ebx*4) + 0xDC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4746BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47468D;
    }
	game::sub_735550(ts, mv);

loc_47468D:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + (ts->ebx*4) + 0xB8, 4), 0x0);

loc_4746BB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_474720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47475F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47473D;
    }
	game::sub_735550(ts, mv);

loc_47473D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47475F:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_474770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_474920;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_48B1E0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4748D7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1F0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1F0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	if (!ts->eflags.zero) {
        goto loc_4747D8;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4747ED;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_461750(ts, mv);
	goto loc_4747ED;

loc_4747D8:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4747ED;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xCC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4747ED;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_461840(ts, mv);

loc_4747ED:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B020, 8));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4748F2;
    }
	mov(mv, &ts->eax, x86::mem(0x8A329C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4748F2;
    }
	mov(mv, &ts->eax, x86::mem(0x88EC68, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4748F2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4748F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4748BF;
    }
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	game::sub_46C9A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4748F2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_474881;
    }
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);

loc_474881:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, 0x14);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4748A4;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4748A4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B018, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	goto loc_4748F2;

loc_4748BF:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x20);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4748F2;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x0);
	goto loc_4748F2;

loc_4748D7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4748F2;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xCC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4748FC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_461840(ts, mv);

loc_4748F2:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xCC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_474920;
    }

loc_4748FC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_474920;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_474920:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_474930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B028);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	mov(&ts->edx, 0x2);
	mov(&ts->ebx, 0x7FFF);
	mov(&ts->edi, 0x1000);

loc_474973:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	add(&ts->eax, 0x14);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_474973;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xEC, 4));
	mov(&ts->edx, 0x2);

loc_474992:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	add(&ts->eax, 0x14);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_474992;
    }
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	mov(&ts->edx, 0x2);

loc_4749B7:
	mov(mv, x86::mem(ts->eax - 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	add(&ts->eax, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4749B7;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4749D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B028);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_461A20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_474A20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x7C, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_474B48;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474A57;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_474B48;
    }

loc_474A57:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B070, 4));
	mov(&ts->edi, 0x3);
	if (ts->eflags.zero) {
        goto loc_474A94;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB58, 4));
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->edi);
	mov(&ts->edi, ts->edx);
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0xF);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->ecx*2), 4));
	add(&ts->ecx, ts->eax);
	inc(&ts->edi);
	mov(mv, x86::mem(0x82CB58, 4), ts->edi);
	goto loc_474AB6;

loc_474A94:
	mov(mv, &ts->eax, x86::mem(0x82CB54, 4));
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->edi);
	mov(&ts->edi, ts->edx);
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0xF);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx*2), 4));
	add(&ts->ecx, ts->edx);
	inc(&ts->edi);
	mov(mv, x86::mem(0x82CB54, 4), ts->edi);

loc_474AB6:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ebx*4), 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->ecx*4), 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_474B1D;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474B1D;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_474B1F;

loc_474B1D:
	xor_(&ts->eax, ts->eax);

loc_474B1F:
	add(&ts->edi, 0xBC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + (ts->ebx*4) + 0xB4, 4), ts->eax);
	game::sub_46CDD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->ebx*4) + 0xB4, 4));
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x1);

loc_474B48:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_474C57;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474B7B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_474C57;
    }

loc_474B7B:
	mov(mv, &ts->eax, x86::mem(0x82CB50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA0, 4));
	cdq(&ts->eax, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B06C, 4));
	mov(&ts->ebx, 0x3);
	idiv(&ts->eax, ts->ebx);
	mov(&ts->ebp, ts->edx);
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0x12);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp + (ts->ecx*2), 4));
	add(&ts->ecx, ts->edx);
	inc(&ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, x86::mem(0x82CB50, 4), ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->esi + (ts->eax*4), 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0xEC, 4));
	mov(mv, x86::mem(ts->ebx, 4), 0x4);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4) + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx*4), 4), 0x0);
	mov(mv, x86::mem(ts->ebp + 0xF4, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_474C32;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474C32;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_474C34;

loc_474C32:
	xor_(&ts->eax, ts->eax);

loc_474C34:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + (ts->edi*4) + 0xE4, 4), ts->eax);
	game::sub_46CDD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->edi*4) + 0xE4, 4));
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x1);

loc_474C57:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_474CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sar(&ts->eax, 0x4);
	and_(&ts->eax, 0xFFF);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_474D00;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_474CF5;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_474CF5:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_474D00:
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_474D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B0C0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_474DBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_474DBB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_474DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(0x7F0B50, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x7F0B40);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F0B54, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_474E6E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B108, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_474E36;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B108, 4));

loc_474E36:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_474E76;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_474E7C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x42FE0000);
	goto loc_474E80;

loc_474E6E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_474E36;

loc_474E76:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_474E7C:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_474E80:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_474E98;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x474FFC, 1));
	jmp(x86::mem(0x474FF4, 4));

loc_474E9F:
	mov(mv, &ts->eax, x86::mem(0x82CB60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	cdq(&ts->eax, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B070, 4));
	mov(&ts->ecx, 0x6);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->edi, ts->edx);
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->edx, 0x1);
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x9);
	inc(&ts->edi);
	mov(mv, x86::mem(0x82CB60, 4), ts->edi);
	goto loc_474F03;

def_474E98:
	mov(mv, &ts->eax, x86::mem(0x82CB5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	cdq(&ts->eax, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B070, 4));
	mov(&ts->ecx, 0x6);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->edi, ts->edx);
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->edx, 0x1);
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x1B);
	inc(&ts->edi);
	mov(mv, x86::mem(0x82CB5C, 4), ts->edi);

loc_474F03:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0xC);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_474F82;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474F82;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_474F84;

loc_474F82:
	xor_(&ts->eax, ts->eax);

loc_474F84:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	game::sub_46CDD0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474FEF;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_474FBD;
    }
	mov(&ts->edi, 0x7FFF);

loc_474FBD:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_474FDD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_474FDD:
	game::__ftol2(ts, mv);
	imul(&ts->edi, ts->eax);
	sar(&ts->edi, 0xF);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_474FEF:
	xor_(&ts->edi, ts->edi);
	goto loc_474FBD;
}

void sub_475010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFF0);
	if (ts->eflags.zero) {
        goto loc_47503B;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47503B:
	mov(mv, x86::mem(ts->edi + 0xD0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_475080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78B110);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xA0, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4750A3;
    }
	mov(mv, x86::mem(ts->eax + 0xC8, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->edx);

loc_4750A3:
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_4750B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4750CC;
    }
	mov(mv, x86::mem(ts->eax + 0xC8, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0xCC, 4), ts->ecx);

locret_4750CC:
	retn(mv, &ts->esp);
}

void sub_475100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_47511C;
    }
	mov(mv, x86::mem(ts->eax + 0xC8, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0xD0, 4), ts->ecx);

locret_47511C:
	retn(mv, &ts->esp);
}

void sub_475150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78B1A0);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_475171;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_475171;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x54, 4), 0x0);

loc_475171:
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_475180(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_475197;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_475197;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);

locret_475197:
	retn(mv, &ts->esp);
}

void sub_4751A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4751EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_45A550(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4751D4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4C, 1), ts->dl);
	if (ts->eflags.zero) {
        goto loc_4751EF;
    }

loc_4751D4:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4751EF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4751E8;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4751E8:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4751EF:
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_475240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_4752A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78B230);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4752BD;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x50, 4), 0x0);

loc_4752BD:
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_4752D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0xB0, 1), ts->bl);
	mov(mv, x86::mem(0x82BC49, 1), ts->bl);
	mov(mv, x86::mem(0x82BC48, 1), ts->bl);
	mov(mv, x86::mem(0x82BC4A, 1), ts->bl);
	mov(mv, x86::mem(ts->ecx + 0xB1, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47530C;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));

loc_47530C:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x90, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_47532A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47532A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x48, 4), ts->eax);

loc_47532A:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_475330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xB0, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_475394;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82BC48, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_475394;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_45AD40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4753D7;
    }
	mov(mv, x86::mem(ts->esi + 0xB0, 1), ts->bl);
	mov(mv, x86::mem(0x82BC48, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xB1, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4753D7;
    }
	game::sub_46CD20(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, 0x78B300);
	push(mv, &ts->esp, ts->edx);
	game::sub_4691C0(ts, mv);
	goto loc_4753D4;

loc_475394:
	cmp(mv, &ts->eflags, x86::mem(0x82BC49, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4753D7;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82BC4A, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4753D7;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x7);
	game::sub_45AD40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4753D7;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, 0x78B2E4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4691C0(ts, mv);
	mov(mv, x86::mem(0x82BC49, 1), ts->bl);
	mov(mv, x86::mem(0x82BC4A, 1), ts->bl);

loc_4753D4:
	add(&ts->esp, 0x8);

loc_4753D7:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_475494;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_475431;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB1, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_475431;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_475431;
    }
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_475482;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_45A550(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47547C;
    }
	push(mv, &ts->esp, 0x78B2B8);
	goto loc_475459;

loc_475431:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_475482;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB1, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_475482;
    }
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_475482;
    }
	push(mv, &ts->esp, 0x78B28C);

loc_475459:
	mov(mv, &ts->eax, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	add(&ts->esp, 0x8);
	game::sub_46CA10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB1, 1), 0x1);

loc_47547C:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));

loc_475482:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_475494;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_475494;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x1);
	goto loc_475497;

loc_475494:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);

loc_475497:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4754B1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_4754B1;
    }
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4754B1:
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_475530(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, 0x78B340);
	push(mv, &ts->esp, ts->eax);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82BC4A, 1), 0x0);
	mov(mv, x86::mem(0x82BC48, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_475590(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78B360);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4755AE;
    }
	mov(mv, x86::mem(ts->eax + 0xE4, 4), 0x0);

loc_4755AE:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4755BC;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), 0x0);

loc_4755BC:
	mov(mv, x86::mem(ts->ecx, 4), 0x789CE4);
	retn(mv, &ts->esp);
}

void sub_4755D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4755E4;
    }
	mov(mv, x86::mem(ts->eax + 0xE4, 4), ts->ecx);

loc_4755E4:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4755EE;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);

locret_4755EE:
	retn(mv, &ts->esp);
}

void sub_4755F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x24, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_475679;
    }
	mov(mv, &ts->edx, x86::mem(0x890080, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->edx, 0x1C);

loc_475616:
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_475671;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_475671;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x900, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_475671;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x8, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_475682;
    }

loc_475671:
	inc(&ts->esi);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_475616;
    }

loc_475679:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_475682:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_475690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x24, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4756CC;
    }
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	add(&ts->ecx, 0x1C);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4756B0:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4756C4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x900, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4756D1;
    }

loc_4756C4:
	inc(&ts->esi);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4756B0;
    }

loc_4756CC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_4756D1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x42C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4756EA;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_4756EA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_475740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B3A8);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4621F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_475790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4757CD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4757AA;
    }
	game::sub_735550(ts, mv);

loc_4757AA:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_4757CD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_475910(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_4624E0;
}

void sub_475920(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_462550;
}

void sub_475930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFF0);
	if (ts->eflags.zero) {
        goto loc_47595B;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47595B:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_475970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xC4, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, ts->al);
	if (ts->eflags.zero) {
        goto locret_4759BE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xEC, 1), ts->al);
	if (!ts->eflags.zero) {
        goto locret_4759BE;
    }
	mov(mv, x86::mem(ts->ecx + 0xEC, 1), 0x1);
	mov(&ts->edx, 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0xD4, 4), 0x3E19999A);
	mov(mv, x86::mem(ts->ecx + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xD8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xE4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xD0, 4), ts->eax);

locret_4759BE:
	retn(mv, &ts->esp);
}

void sub_4759C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77259B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_475A16;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4759F4;
    }
	game::sub_735550(ts, mv);

loc_4759F4:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_475A16:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7EC844, 4), 0x78B478);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x18);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->edi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_475AC3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_475A72;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_475A7C;

loc_475A72:
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_475A7C;
    }
	mov(&ts->eax, 0x32);

loc_475A7C:
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_475AC0;
    }
	push(mv, &ts->esp, 0x7EDD60);
	mov(&ts->ecx, 0x82C510);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x82C510);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_475AC0:
	pop(mv, &ts->esp, ts->ebp);
	goto loc_475AC5;

loc_475AC3:
	xor_(&ts->edi, ts->edi);

loc_475AC5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(0x82BC50, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	mov(&ts->eax, 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xEC, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_772590:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45E450:
	mov(&ts->eax, 0x7DE734);
	goto ___CxxFrameHandler;
}

void sub_475B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x58);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x44, 4));
	mov(&ts->esi, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x64, 4));
	add(&ts->eax, 0x60);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x68, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78886C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_475C8F;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x74, 4));
	add(&ts->eax, 0x70);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_475C77;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_475C97;
    }

loc_475C77:
	push(mv, &ts->esp, 0x4064FCB9);
	game::sub_43C350(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_475CAF;
    }

loc_475C8F:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_475C97:
	push(mv, &ts->esp, 0x4011361E);
	game::sub_43C350(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_475C8F;
    }

loc_475CAF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ecx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_475D4F;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_475D4F;
    }
	push(mv, &ts->esp, 0x3FF5BE0B);
	game::sub_43C350(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_475C8F;
    }

loc_475D4F:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_475DB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B490);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_475DEB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_475DEB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_475E10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_475F86;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xB4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_475F86;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x550, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_475F86;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, 0x40A00000);
	push(mv, &ts->esp, ts->eax);
	game::sub_4755F0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_475F86;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_462670(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788870, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_475F86;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_475F86;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788870, 4));
	cdq(&ts->eax, ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788874, 4));
	mov(&ts->ecx, 0x6);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788870, 4));
	idiv(&ts->eax, ts->ecx);
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x42FE0000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3F7D70A4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B070, 4));
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xD0, 4));
	shl(&ts->edx, 0x1);
	mov(&ts->esi, ts->edi);
	sub(&ts->esi, ts->edx);
	add(&ts->esi, 0x9);
	push(mv, &ts->esp, ts->esi);
	inc(&ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(0x82CB68, 4), ts->edi);
	game::sub_46CD60(ts, mv);
	push(mv, &ts->esp, 0x78B4D4);
	push(mv, &ts->esp, 0x5C);
	mov(&ts->edi, ts->eax);
	game::sub_457AA0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_475F49;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_475F4B;

loc_475F49:
	xor_(&ts->eax, ts->eax);

loc_475F4B:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_46CDD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x34, 4));
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xB8, 4));
	mov(mv, x86::mem(ts->ebp + 0xC, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);

loc_475F86:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);
}

void sub_475F90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	mov(mv, x86::mem(ts->esi, 4), 0x78B4E8);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->cl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void std__ios_base___ios_base_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B4E8);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_47603A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47603A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476050;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_476050:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476066;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_476066:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_4760E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B530);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_476144;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_476122;
    }
	game::sub_735550(ts, mv);

loc_476122:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_476144:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xDC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_476181;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47615F;
    }
	game::sub_735550(ts, mv);

loc_47615F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_476181:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_4761F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B578);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_476256;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476233;
    }
	game::sub_735550(ts, mv);

loc_476233:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_476256:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_476280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFF0);
	if (ts->eflags.zero) {
        goto loc_4762AB;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4762AB:
	mov(mv, x86::mem(ts->edi + 0xD4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebx, 4), 0x78B5C0);
	mov(mv, &ts->ecx, x86::mem(0x82B08C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_476345;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B08C, 4), 0x0);

loc_476345:
	mov(mv, &ts->ecx, x86::mem(0x82B090, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47635E;
    }
	game::sub_721A63(ts, mv);
	mov(mv, x86::mem(0x82B090, 4), 0x0);

loc_47635E:
	mov(&ts->esi, 0x82AF60);

loc_476363:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_476372;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_476372:
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x82AF90);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476363;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ebx, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_4763A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFF0);
	cmp(&ts->eflags, ts->ecx, 0x70);
	if (ts->eflags.zero) {
        goto loc_4763D0;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4763D0:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4763E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4763FC;
    }
	cmp(&ts->eflags, ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4763FC;
    }
	xor_(&ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->esi);
	goto loc_476404;

loc_4763FC:
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->eax);
	xor_(&ts->esi, ts->esi);

loc_476404:
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xA0, 1), 0x1);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4764AC;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	mov(&ts->edi, 0x82AF60);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(0x82B08C, 4), ts->esi);
	mov(mv, x86::mem(0x82B090, 4), ts->esi);
	mov(mv, x86::mem(0x82BC54, 1), ts->al);
	mov(mv, x86::mem(0x7ED638, 1), 0x1);
	nop();

loc_476440:
	mov(mv, &ts->eax, x86::mem(0x7ED608, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x400, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_476483;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_476483:
	mov(mv, &ts->ecx, x86::mem(0x7ED608, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4632B0);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82AF60, 4), ts->edi);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476440;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_4764AC:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4764F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B608);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_476556;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476533;
    }
	game::sub_735550(ts, mv);

loc_476533:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_476556:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_476580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4765D6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4765D6;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, 0x1F);
	if (ts->eflags.zero) {
        goto loc_4765CF;
    }
	cmp(&ts->eflags, ts->eax, 0x22);
	if (ts->eflags.zero) {
        goto loc_4765CF;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	neg(&ts->eax);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->al, 0x8);
	mov(mv, x86::mem(ts->esi + 0xB8, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4765CF:
	mov(mv, x86::mem(ts->esi + 0xA0, 1), 0x0);

loc_4765D6:
	push(mv, &ts->esp, 0x2);
	game::sub_43C1C0(ts, mv);
	add(&ts->al, 0x8);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xB8, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4765F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);
	mov(&ts->esi, ts->ecx);
	game::sub_43C1C0(ts, mv);
	add(&ts->al, 0x8);
	mov(mv, x86::mem(ts->esi + 0xB8, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_476637;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_476637;
    }
	mov(mv, &ts->eax, x86::mem(0x82CB6C, 4));
	inc(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x6);
	idiv(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(0x82CB6C, 4), ts->edx);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->dl);

loc_476637:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_476640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	and_(&ts->ecx, 0xFFF0);
	cmp(&ts->eflags, ts->ecx, 0x80);
	if (ts->eflags.zero) {
        goto loc_476673;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_476673:
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFF0);
	if (ts->eflags.zero) {
        goto loc_4766AB;
    }
	push(mv, &ts->esp, 0x78AA74);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4766AB:
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78B650);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_476766;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476743;
    }
	game::sub_735550(ts, mv);

loc_476743:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_476766:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_476790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(0x82BEBC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x82BEBC);
	xor_(&ts->edi, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_476878;
    }

loc_4767B3:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, ts->edx);
	sar(&ts->ecx, 0x4);
	and_(&ts->ecx, 0xFFF);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476830;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.zero) {
        goto loc_4767DC;
    }
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4767EC;
    }

loc_4767DC:
	mov(&ts->ecx, ts->edx);
	sar(&ts->ecx, 0x10);
	and_(&ts->ecx, 0xFF);
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4767FF;
    }

loc_4767EC:
	sar(&ts->edx, 0x10);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0xFF);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476830;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476801;
    }

loc_4767FF:
	mov(&ts->edi, ts->ebx);

loc_476801:
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476830;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47680B;
    }
	mov(&ts->edi, ts->ebx);

loc_47680B:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x2, 1));
	and_(&ts->edx, 0xFF);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_47682E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476830;
    }

loc_476821:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47682E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_476821;
    }
	goto loc_476830;

loc_47682E:
	mov(&ts->edi, ts->ebx);

loc_476830:
	mov(mv, &ts->ebp, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4767B3;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476878;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47684A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_476851;

loc_47684A:
	push(mv, &ts->esp, 0x0);
	call(ts, mv, ts->edi);
	add(&ts->esp, 0x4);

loc_476851:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	shl(&ts->edx, 0x5);
	or_(&ts->edx, ts->ebx);
	shl(&ts->edx, 0x7);
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->edx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	shl(&ts->edx, 0x4);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_476878:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_476890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(0x82C6A4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x82C6A4);
	xor_(&ts->edi, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_476978;
    }

loc_4768B3:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, ts->edx);
	sar(&ts->ecx, 0x4);
	and_(&ts->ecx, 0xFFF);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476930;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.zero) {
        goto loc_4768DC;
    }
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4768EC;
    }

loc_4768DC:
	mov(&ts->ecx, ts->edx);
	sar(&ts->ecx, 0x10);
	and_(&ts->ecx, 0xFF);
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4768FF;
    }

loc_4768EC:
	sar(&ts->edx, 0x10);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0xFF);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476930;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476901;
    }

loc_4768FF:
	mov(&ts->edi, ts->ebx);

loc_476901:
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476930;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47690B;
    }
	mov(&ts->edi, ts->ebx);

loc_47690B:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x2, 1));
	and_(&ts->edx, 0xFF);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_47692E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476930;
    }

loc_476921:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47692E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_476921;
    }
	goto loc_476930;

loc_47692E:
	mov(&ts->edi, ts->ebx);

loc_476930:
	mov(mv, &ts->ebp, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4768B3;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476978;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47694A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_476951;

loc_47694A:
	push(mv, &ts->esp, 0x0);
	call(ts, mv, ts->edi);
	add(&ts->esp, 0x4);

loc_476951:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	shl(&ts->edx, 0x5);
	or_(&ts->edx, ts->ebx);
	shl(&ts->edx, 0x7);
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->edx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	shl(&ts->edx, 0x4);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_476978:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_476990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x14, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4769A3;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_4769A3:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x82BEC4, 4));
	mov(&ts->ecx, 0x82BEC4);
	xor_(&ts->esi, ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_476A12;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));

loc_4769C7:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x2, 2));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_476A06;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4769D8;
    }
	mov(&ts->esi, ts->edx);

loc_4769D8:
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	and_(&ts->ecx, 0xFFFF);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_476A06;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	and_(&ts->ecx, 0xFFFF);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_476A04;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476A06;
    }

loc_4769F7:
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_476A04;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4769F7;
    }
	goto loc_476A06;

loc_476A04:
	mov(&ts->esi, ts->edx);

loc_476A06:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4769C7;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476A1C;
    }

loc_476A12:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_476A1C:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476A27;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_476A2E;

loc_476A27:
	push(mv, &ts->esp, 0x0);
	call(ts, mv, ts->esi);
	add(&ts->esp, 0x4);

loc_476A2E:
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_476A59;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_476A59:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_476A6A;
    }

loc_476A60:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_476A60;
    }

loc_476A6A:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_476A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_476ADE;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_476A91:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_476AD2;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x900, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_476AD2;
    }
	push(mv, &ts->esp, 0x5FFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebp);
	game::sub_476990(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5FFF);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_476AD2:
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476A91;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_476ADE:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_476AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_476B28;
    }

loc_476B02:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_476B14;
    }
	inc(&ts->edi);

loc_476B14:
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476B02;
    }
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476B28;
    }
	mov(&ts->edi, 0x6);

loc_476B28:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_476B47;
    }
	mov(&ts->esi, ts->edi);
	mov(&ts->edi, ts->edi);

loc_476B30:
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1F);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476B30;
    }

loc_476B47:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_476B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_476B9D;
    }

loc_476B60:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_476B7D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x900, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_476B93;
    }

loc_476B7D:
	push(mv, &ts->esp, 0x802D);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_476B93:
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476B60;
    }

loc_476B9D:
	mov(&ts->ecx, ts->edi);
	game::sub_463F60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_476BC3;
    }
	goto loc_476BB0;

loc_476BB0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x802D);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476BB0;
    }

loc_476BC3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_476BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476BEF;
    }

loc_476BE0:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476BE0;
    }

loc_476BEF:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xAC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_476D81;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C39;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C39;
    }

loc_476C14:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C22;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476C14;
    }
	goto loc_476C39;

loc_476C22:
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C39;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_458F00(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_476C39:
	mov(mv, &ts->ecx, x86::mem(0x82A5A0, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C4A;
    }
	mov(&ts->eax, 0x1);

loc_476C4A:
	cmp(mv, &ts->eflags, x86::mem(0x82A5A4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C53;
    }
	inc(&ts->eax);

loc_476C53:
	cmp(mv, &ts->eflags, x86::mem(0x82A5A8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C5C;
    }
	inc(&ts->eax);

loc_476C5C:
	cmp(mv, &ts->eflags, x86::mem(0x82A5AC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C65;
    }
	inc(&ts->eax);

loc_476C65:
	cmp(mv, &ts->eflags, x86::mem(0x82A5B0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C6E;
    }
	inc(&ts->eax);

loc_476C6E:
	cmp(mv, &ts->eflags, x86::mem(0x82A5B4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_476C77;
    }
	inc(&ts->eax);

loc_476C77:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_476D81;
    }
	mov(&ts->ebx, 0x3);
	sub(&ts->ebx, ts->eax);

loc_476C87:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	sub(&ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_476CB9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_476CA9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_476C99;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_476CCA;

loc_476C99:
	push(mv, &ts->esp, 0x4);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECB14, 4));
	goto loc_476CC7;

loc_476CA9:
	push(mv, &ts->esp, 0xB);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAE4, 4));
	goto loc_476CC7;

loc_476CB9:
	push(mv, &ts->esp, 0xE);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECAA8, 4));

loc_476CC7:
	add(&ts->esp, 0x4);

loc_476CCA:
	mov(mv, &ts->ecx, x86::mem(0x7ED928, 4));
	imul(&ts->eax, ts->eax, 0x4C);
	add(&ts->eax, 0x7F0DE0);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	add(mv, x86::mem(0x7ED928, 4), 0x4);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->edx + 0x82B098, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED164, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0C0, 4), 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::sub_463AF0(ts, mv);
	add(&ts->esp, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_476C87;
    }

loc_476D81:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_476D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_476DBC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_476DA0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476DA0;
    }

loc_476DBC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->esi, 0x6);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_476DE0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476DE0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476E00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 2), 0x0);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);
	mov(&ts->edi, 0x3);

loc_476E16:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476E16;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edx, x86::mem(0x890108, 4));
	if (!ts->eflags.zero) {
        goto loc_476E40;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_476E82;
    }

loc_476E40:
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->ecx, 0x1130);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476E56;
    }
	cmp(&ts->eflags, ts->ecx, 0x1194);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476E68;
    }

loc_476E56:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x7ED6D8);
	mov(mv, x86::mem(ts->esi + 0x24, 2), 0x5);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_476E68:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_476E70;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_476E82;
    }

loc_476E70:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x7ED718);
	mov(mv, x86::mem(ts->esi + 0x24, 2), 0x6);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_476E82:
	mov(mv, &ts->al, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_476E9D;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x7ED760);
	mov(mv, x86::mem(ts->esi + 0x24, 2), 0x3);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_476E9D:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x7ED690);
	mov(mv, x86::mem(ts->esi + 0x24, 2), 0x6);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->eax, 0x7ED7A0);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_476EC0:
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->eax, 0x7ED8C0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476EC0;
    }
	mov(&ts->esi, 0x6);

loc_476ED5:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476ED5;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, 0xFA0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476F38;
    }
	cmp(&ts->eflags, ts->eax, 0x1067);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_476F38;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x5);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_476F20:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_476990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_476F20;
    }
	pop(mv, &ts->esp, ts->esi);

loc_476F38:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_476F40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x43C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_476F7A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_476F7A;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_4649E0;

loc_476F7A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_476F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->esi, ts->ecx);
	game::sub_464AD0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_476FE3;
    }
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_476FA0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_476FA0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_476890(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_476FCC;
    }
	inc(mv, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_476FCC:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_476FDD;
    }

loc_476FD3:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_476FD3;
    }

loc_476FDD:
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->edi);
	inc(mv, x86::mem(ts->esi + 0x2C, 4));

loc_476FE3:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_477060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A588);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_464C80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_477100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x58, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	push(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_477146;
    }

loc_477138:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_477138;
    }

loc_477146:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(0x82BC5D, 1), ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_477186;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x188, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x11C, 4));
	add(&ts->ecx, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	setnl(ts->eflags, &ts->bl);
	goto loc_4771A2;

loc_477186:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_6F767C(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x188, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	setl(ts->eflags, &ts->bl);

loc_4771A2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	add(&ts->ecx, ts->eax);
	add(&ts->edx, ts->eax);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edx);
	game::sub_464FC0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4771D6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4771D6:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4771F0;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4771F0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_477220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4771F0:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_477207;
    }
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x3);

loc_477207:
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_465220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_477220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_477257;
    }

loc_477230:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_477242;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	goto loc_47724F;

loc_477242:
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_477257;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);

loc_47724F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x60, 4));
	if (!ts->eflags.zero) {
        goto loc_477230;
    }

loc_477257:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4772E7;
    }
	goto loc_477270;

loc_477270:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x4, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4772E7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x124, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_477290;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.carry) {
        goto loc_477298;
    }
	goto loc_477294;

loc_477290:
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_4772E7;
    }

loc_477294:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.carry) {
        goto loc_4772E7;
    }

loc_477298:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x68, 4));
	if (!ts->eflags.zero) {
        goto loc_4772A2;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebp);
	goto loc_4772A8;

loc_4772A2:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->ebp);

loc_4772A8:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_4772B5;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edx);
	goto loc_4772BB;

loc_4772B5:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);

loc_4772BB:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x6C, 4));
	if (!ts->eflags.zero) {
        goto loc_4772CD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4772CA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));

loc_4772CA:
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ecx);

loc_4772CD:
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_477270;
    }

loc_4772E7:
	mov(&ts->ecx, ts->ebx);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_477304;
    }
	sub(&ts->eax, ts->ecx);
	sub(&ts->eax, 0x41);
	mov(&ts->edi, ts->eax);
	goto loc_4773B7;

loc_477304:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18C, 4));
	sub(&ts->edi, ts->ecx);
	sub(&ts->edi, 0x40);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4773B7;
    }
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_477340;
    }
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));

loc_47732D:
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477348;
    }

loc_477334:
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x2);

loc_47733B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_477340:
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	sub(&ts->eax, 0x40);
	goto loc_47732D;

loc_477348:
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x8000003F);
	if (!ts->eflags.sign) {
        goto loc_477356;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFC0);
	inc(&ts->eax);

loc_477356:
	if (ts->eflags.zero) {
        goto loc_47736A;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_47736A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	sub(&ts->ecx, ts->eax);
	add(&ts->ecx, 0x40);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->ecx);
	goto loc_477370;

loc_47736A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edx);

loc_477370:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6FAFE3(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, x86::mem(ts->eax, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4773B4;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x40, 4));
	sub(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	sub(&ts->edi, 0x40);
	goto loc_4773B7;

loc_4773B4:
	sub(&ts->edi, ts->ecx);
	dec(&ts->edi);

loc_4773B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_4773EA;
    }
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_4773EA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_459E00(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4773EA;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82BC64, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4773EA:
	mov(mv, &ts->eax, x86::mem(0x8A329C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4773FC;
    }
	mov(mv, &ts->eax, x86::mem(0x88EC68, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477405;
    }

loc_4773FC:
	mov(mv, x86::mem(0x82BC65, 1), 0x1);
	goto loc_47740C;

loc_477405:
	mov(mv, x86::mem(0x82BC65, 1), 0x0);

loc_47740C:
	mov(mv, x86::mem(0x82BC64, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18C, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477334;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x6C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x10, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47748A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x11C, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi), 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477447;
    }
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->eax);
	goto loc_47744D;

loc_477447:
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->edi);

loc_47744D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x188, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x118, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_6FAFE3(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x188, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x118, 4));
	push(mv, &ts->esp, ts->esi);
	add(&ts->ebx, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ebp + 0x118, 4), ts->ebx);
	game::sub_477150(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_47748A:
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47749E;
    }
	mov(&ts->eax, ts->edi);
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->ecx);
	imul(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->eax);
	goto loc_4774A4;

loc_47749E:
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->ecx);

loc_4774A4:
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BC5D, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x188, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F77BC(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_47733B;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x477150);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_6F76F2;
}

void sub_477500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ecx, ts->ebp);
	imul(&ts->ecx, ts->ecx, 0x128);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->edx*2), 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1D, 4));
	shl(&ts->eax, 0x4);
	shl(&ts->edi, 0x2);
	add(&ts->eax, ts->edi);
	add(&ts->eax, ts->ecx);
	sub(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->ebx, 0x1800);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->ebp, 0x100);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->edx, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->edx, 0x10);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->esi, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4776FC;
    }
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4776FC;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x4D525453);
	game::sub_6F55C7(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x190, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	add(&ts->eax, ts->edi);
	shl(&ts->edx, 0x4);
	add(&ts->edx, ts->eax);
	and_(&ts->edx, 0xFFFFFFC0);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	add(&ts->edx, ts->esi);
	push(mv, &ts->esp, 0x104);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), 0x96);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x32);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ecx);
	game::sub_6FAFED(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebx, 0x4000);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477626;
    }
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x800);
	goto loc_477669;

loc_477626:
	mov(&ts->eax, 0x8000);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47763B;
    }
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x1000);
	goto loc_477669;

loc_47763B:
	cmp(&ts->eflags, ts->ebx, 0x10000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47764F;
    }
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x2000);
	goto loc_477669;

loc_47764F:
	cmp(&ts->eflags, ts->ebx, 0x18000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477663;
    }
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x4000);
	goto loc_477669;

loc_477663:
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->eax);

loc_477669:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477693;
    }
	xor_(&ts->edx, ts->edx);

loc_477671:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	add(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->ebx) + 0x128, 4));
	inc(&ts->ecx);
	add(&ts->edx, 0x128);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477671;
    }

loc_477693:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->edx + (ts->ecx) - 0x11C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4776C7;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_4776B0;

loc_4776B0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	add(&ts->eax, ts->ecx);
	add(&ts->ecx, 0xC);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4776B0;
    }

loc_4776C7:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4776E8;
    }
	xor_(&ts->edx, ts->edx);

loc_4776D3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	add(&ts->eax, ts->edx);
	inc(&ts->ecx);
	add(&ts->edx, 0x10);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4776D3;
    }

loc_4776E8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_46BB10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4776FC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_477760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4777EE;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto loc_4777ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x3C, 4));
	if (ts->eflags.carry) {
        goto loc_4777ED;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	sub(&ts->ecx, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4777ED;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFFFFFFE);
	if (ts->eflags.zero) {
        goto loc_4777ED;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), 0xFFFFFFFE);
	game::sub_464E50(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x44, 4));
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4777BC;
    }
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x1);

loc_4777BC:
	mov(&ts->ecx, ts->edi);
	game::sub_6F55E8(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	cmp(&ts->eflags, ts->ebx, 0x2);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4777ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4777E0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_477220(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4777E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_477220(ts, mv);
	add(&ts->esp, 0x8);

loc_4777ED:
	pop(mv, &ts->esp, ts->esi);

locret_4777EE:
	retn(mv, &ts->esp);
}

void sub_4777F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_466D30(ts, mv);
	retn(mv, &ts->esp);
}

void sub_477800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi, 4), 0x78B71C);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	game::sub_723124(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	sub(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0x3);
	shl(&ts->ecx, 0x1);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x50);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477862;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->ecx*2), 4));
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx*4), 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4777F0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	game::sub_723138(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);

loc_477862:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_477870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78B71C);
	if (ts->eflags.zero) {
        goto loc_47789D;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_72387B(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);

loc_47789D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_72366A(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4778C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xA8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477A21;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477A21;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477903;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_72387B(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);

loc_477903:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	game::sub_466840(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edx);
	game::sub_466AF0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->cx, x86::mem(ts->eax + 0x18, 2));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 2), ts->cx);
	mov(mv, x86::mem(ts->esp + 0xA, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0xB, 1), 0x8);
	game::sub_72423E(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x54, 2), 0x4);
	game::sub_721A6B(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x0);
	game::sub_721F99(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7231D4(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477A0F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	shl(&ts->ecx, 0x1);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	shl(&ts->ecx, 0x1);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	xor_(&ts->edx, ts->eax);
	and_(&ts->edx, 0x7FFFFFFF);
	xor_(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_723515(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_723515(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);

loc_477A0F:
	game::sub_721FA7(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xA8);
	retn(mv, &ts->esp, 0x4);

loc_477A21:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xA8);
	retn(mv, &ts->esp, 0x4);
}

void sub_477A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_467430(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_477A48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_477A48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477A50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->edx, ts->eax);
	and_(&ts->edx, 0xFF00);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	and_(&ts->eax, 0x100000FF);
	or_(&ts->edx, 0x200000);
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	shr(&ts->eax, 0x10);
	movzx(&ts->eax, ts->al);
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), 0x7FFF);
	retn(mv, &ts->esp, 0x8);
}

void sub_477AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477B5B;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_467460(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	and_(&ts->eax, 0xF);
	add(&ts->edi, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477B5A;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->edi, ts->edi);

loc_477AD0:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->eax);
	mov(&ts->dx, ts->ax);
	sar(&ts->eax, 0x18);
	and_(&ts->eax, 0xF);
	sar(&ts->ecx, 0x14);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	and_(&ts->ecx, 0xF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebp, 0x82BC7C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477B0C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x10, 4));
	movsx(&ts->eax, ts->dx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, ts->ebp);
	add(&ts->eax, ts->edx);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + 0x4, 4));
	goto loc_477B14;

loc_477B0C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	movsx(&ts->eax, ts->dx);
	add(&ts->eax, ts->ecx);

loc_477B14:
	cmp(&ts->eflags, ts->eax, 0xFFFFD8F0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477B23;
    }
	mov(mv, x86::mem(ts->ebx, 4), 0x0);
	goto loc_477B3A;

loc_477B23:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477B2F;
    }
	mov(mv, x86::mem(ts->ebx, 4), 0x7FFF);
	goto loc_477B3A;

loc_477B2F:
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);

loc_477B3A:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	shl(&ts->ecx, 0x10);
	or_(&ts->edx, ts->ecx);
	add(&ts->edi, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebx, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_477AD0;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_477B5A:
	pop(mv, &ts->esp, ts->edi);

loc_477B5B:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_477B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ah, ts->ah);
	if (ts->eflags.sign) {
        goto loc_477B9C;
    }
	and_(&ts->eax, 0x7FFF);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	neg(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x7FFF);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_477B9C:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	or_(&ts->eax, 0xFFFF0000);
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(&ts->edx, 0x7FFF);
	sub(&ts->edx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x7FFF);
	sub(&ts->ecx, ts->edx);
	imul(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	sar(&ts->ecx, 0xF);
	mov(&ts->eax, 0x7FFF);
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_468050(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	and_(&ts->ecx, 0xE0000000);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x80000000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	if (!ts->eflags.zero) {
        goto loc_477C1E;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_467FF0(ts, mv);
	add(&ts->esp, 0x4);

loc_477C1E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	imul(&ts->edx, ts->eax);
	sar(&ts->edx, 0xF);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_477C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_477C40;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_477C4C;

loc_477C40:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477C4C;
    }
	mov(&ts->eax, 0x7FFF);

loc_477C4C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_468160(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_468050(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_477C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	shl(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_477CC7;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_477CC7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477CFE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));

loc_477CE0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->edx + (ts->eax*4), 4), 0x0);
	mov(mv, x86::mem(ts->ecx, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	inc(&ts->eax);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477CE0;
    }

loc_477CFE:
	mov(&ts->ecx, ts->esi);
	game::sub_467610(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_477D10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78B73C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(0x0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	add(&ts->eax, ts->ecx);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_477D80;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_477D80:
	mov(mv, &ts->ecx, x86::mem(0x82AF48, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477D9B;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A6BC);
	goto loc_477D9D;

loc_477D9B:
	xor_(&ts->eax, ts->eax);

loc_477D9D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->edx + (ts->edi*4), 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475240(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_477DE8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_477DE8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_477DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477E06;
    }
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_477E06:
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477EA1;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	add(&ts->ecx, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->edi*4), 4));
	mov(mv, x86::mem(ts->eax + 0x94, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_477E46;
    }
	shl(&ts->eax, 0xB);
	mov(&ts->ebx, ts->eax);

loc_477E46:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477EA1;
    }

loc_477E51:
	mov(mv, &ts->ecx, x86::mem(0x82AF4C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_477E77;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A6EC);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x0);
	goto loc_477E79;

loc_477E77:
	xor_(&ts->eax, ts->eax);

loc_477E79:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + (ts->edi*4), 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	inc(mv, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->ebp, 0x1C);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477E51;
    }

loc_477EA1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_477EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477EC6;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_477EC6:
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477F73;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x98, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	add(&ts->ecx, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, x86::mem(ts->eax + 0x98, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_477F06;
    }
	shl(&ts->eax, 0xB);
	mov(&ts->ebp, ts->eax);

loc_477F06:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477F73;
    }

loc_477F11:
	mov(mv, &ts->ecx, x86::mem(0x82AF3C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440E50(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_477F3A;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A6CC);
	mov(mv, x86::mem(0x82BC9C, 4), ts->ecx);
	mov(mv, x86::mem(0x82BCA0, 4), ts->ecx);
	goto loc_477F3C;

loc_477F3A:
	xor_(&ts->eax, ts->eax);

loc_477F3C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->edx + (ts->ebx*4), 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x3, 1));
	and_(&ts->eax, 0xF);
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->ecx*8) + 0x4, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477F11;
    }

loc_477F73:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_477F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_477F9B;
    }
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_477F9B:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->ecx), 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_478119;
    }
	push(mv, &ts->esp, 0x78B78C);
	shl(&ts->eax, 0x2);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	add(&ts->ebx, 0x10);
	game::sub_457A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_477FE4;
    }
	push(mv, &ts->esp, 0x78B774);
	lea(mv, &ts->edx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_457A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);

loc_477FE4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_478119;
    }
	goto loc_478001;

loc_477FFF:
	xor_(&ts->edi, ts->edi);

loc_478001:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47805F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478044;
    }
	game::sub_467E40(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_478037;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_467DC0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_478040;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);

loc_478037:
	mov(&ts->ecx, ts->ebp);
	game::sub_467DC0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_478040:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_478044:
	mov(mv, &ts->edx, x86::mem(0x82AF34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4780C2;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A5CC);
	goto loc_4780C4;

loc_47805F:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478079;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	shl(&ts->eax, 0xB);
	or_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);

loc_478079:
	mov(mv, &ts->ecx, x86::mem(0x82AF38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478094;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A5F0);
	goto loc_478096;

loc_478094:
	xor_(&ts->eax, ts->eax);

loc_478096:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*4), 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax*4), 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	goto loc_478044;

loc_4780C2:
	xor_(&ts->eax, ts->eax);

loc_4780C4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->ecx + (ts->ebp*4), 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebp*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->edx);
	add(&ts->ebx, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_478107;
    }

loc_4780F0:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	sar(&ts->eax, 0x1D);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_478107;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	goto loc_4780F0;

loc_478107:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_477FFF;
    }

loc_478119:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_478120(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_478230;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	goto loc_478140;

loc_47813C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));

loc_478140:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x34, 4));
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47819C;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	nop();

loc_478160:
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	mov(&ts->eax, ts->ecx);
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0xFF);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_478187;
    }
	and_(&ts->ecx, 0xE0000000);
	cmp(&ts->eflags, ts->ecx, 0x80000000);
	if (ts->eflags.zero) {
        goto loc_478184;
    }
	inc(&ts->ebx);
	goto loc_47818E;

loc_478184:
	inc(&ts->ebp);
	goto loc_47818E;

loc_478187:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));

loc_47818E:
	dec(mv, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_478160;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));

loc_47819C:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78B7C8);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78B7A0);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x7C, 4));
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	add(&ts->ecx, ts->ebp);
	add(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xA8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47820B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebx*4), 4));
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	goto loc_478212;

loc_47820B:
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x0);

loc_478212:
	add(&ts->ebx, ts->ebp);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47821E;
    }
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);

loc_47821E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47813C;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_478230:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_478240(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	add(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78B9D4);
	mov(&ts->esi, ts->ebp);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	and_(&ts->esi, 0xF0000000);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_478280:
	cmp(&ts->eflags, ts->esi, 0x20000000);
	if (ts->eflags.zero) {
        goto loc_478294;
    }
	cmp(&ts->eflags, ts->esi, 0x20020000);
	if (!ts->eflags.zero) {
        goto loc_478610;
    }

loc_478294:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	mov(&ts->esi, ts->ebp);
	sar(&ts->esi, 0x10);
	and_(&ts->esi, 0xFF);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_478412;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(&ts->ecx, ts->ebp);
	sar(&ts->ecx, 0x4);
	and_(&ts->ecx, 0xF0);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_478412;
    }
	mov(&ts->ebx, ts->ebp);
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_4782F0;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478303;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4782EC;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478303;

loc_4782EC:
	mov(&ts->eax, ts->edx);
	goto loc_478303;

loc_4782F0:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478303;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478303;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478303;
    }
	mov(&ts->eax, ts->ecx);

loc_478303:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	and_(&ts->ebp, 0xFF);
	shl(&ts->ebp, 0x2);
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ebp), 4));
	add(&ts->eax, 0x10);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478354;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47836D;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478350;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_47836F;

loc_478350:
	mov(&ts->eax, ts->esi);
	goto loc_47836F;

loc_478354:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_47836A;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_47836A;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47836F;
    }
	goto loc_47836D;

loc_47836A:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));

loc_47836D:
	mov(&ts->eax, ts->edx);

loc_47836F:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp), 4));
	add(&ts->esi, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4783AA;
    }
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4783BD;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4783A6;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	goto loc_4783BB;

loc_4783A6:
	mov(&ts->edx, ts->edi);
	goto loc_4783BD;

loc_4783AA:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4783BD;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4783BD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4783BD;
    }

loc_4783BB:
	mov(&ts->edx, ts->eax);

loc_4783BD:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebp), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78B9A0);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x14);

loc_4783F4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	add(&ts->eax, 0x4);
	mov(&ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	and_(&ts->esi, 0xF0000000);
	goto loc_478280;

loc_478412:
	mov(&ts->ebx, ts->ebp);
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_47843E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478459;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47843A;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478459;

loc_47843A:
	mov(&ts->eax, ts->edx);
	goto loc_478459;

loc_47843E:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478456;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478456;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478459;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478459;

loc_478456:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));

loc_478459:
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4783F4;
    }
	lea(mv, &ts->edx, x86::mem(0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);

loc_478474:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47849A;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4784B3;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478496;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_4784B5;

loc_478496:
	mov(&ts->eax, ts->esi);
	goto loc_4784B5;

loc_47849A:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4784B0;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4784B0;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4784B5;
    }
	goto loc_4784B3;

loc_4784B0:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));

loc_4784B3:
	mov(&ts->eax, ts->edx);

loc_4784B5:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + (ts->esi), 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4783F4;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4784E9;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4784FA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4784E5;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_4784FC;

loc_4784E5:
	mov(&ts->eax, ts->esi);
	goto loc_4784FC;

loc_4784E9:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4784FA;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4784FA;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4784FC;
    }

loc_4784FA:
	mov(&ts->eax, ts->edx);

loc_4784FC:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	and_(&ts->esi, 0xFF);
	shl(&ts->esi, 0x2);
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->esi), 4));
	add(&ts->edi, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478544;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_478557;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478540;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_467E40(ts, mv);
	goto loc_478555;

loc_478540:
	mov(&ts->edx, ts->ebp);
	goto loc_478557;

loc_478544:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478557;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478557;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478557;
    }

loc_478555:
	mov(&ts->edx, ts->eax);

loc_478557:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->esi), 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	add(&ts->eax, 0x10);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78B96C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4785B4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4785E0;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4785B0;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_4785E0;

loc_4785B0:
	mov(&ts->eax, ts->edx);
	goto loc_4785E0;

loc_4785B4:
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_4785C2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_4785E0;

loc_4785C2:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4785D9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4785E0;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_4785E0;

loc_4785D9:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));

loc_4785E0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi), 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->ecx, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	goto loc_478474;

loc_478610:
	cmp(&ts->eflags, ts->esi, 0x30000000);
	if (ts->eflags.zero) {
        goto loc_478624;
    }
	cmp(&ts->eflags, ts->esi, 0x20030000);
	if (!ts->eflags.zero) {
        goto loc_4789B8;
    }

loc_478624:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x44, 4));
	mov(&ts->eax, ts->ebp);
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4787BC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(&ts->edx, ts->ebp);
	sar(&ts->edx, 0x4);
	and_(&ts->edx, 0xF0);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4787BC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ebx, ts->edx);
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_478683;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_478696;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47867F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_478696;

loc_47867F:
	mov(&ts->eax, ts->esi);
	goto loc_478696;

loc_478683:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478696;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478696;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478696;
    }
	mov(&ts->eax, ts->ecx);

loc_478696:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	and_(&ts->edx, 0xFF);
	shl(&ts->edx, 0x2);
	mov(&ts->edi, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edi), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4786F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47871B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4786ED;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_47871D;

loc_4786ED:
	mov(&ts->eax, ts->esi);
	goto loc_47871D;

loc_4786F1:
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_4786FF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	goto loc_47871B;

loc_4786FF:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478714;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47871D;
    }
	goto loc_47871B;

loc_478714:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));

loc_47871B:
	mov(&ts->eax, ts->edx);

loc_47871D:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->edi), 4));
	add(&ts->esi, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478754;
    }
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_478767;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478750;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	goto loc_478765;

loc_478750:
	mov(&ts->edx, ts->edi);
	goto loc_478767;

loc_478754:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478767;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478767;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478767;
    }

loc_478765:
	mov(&ts->edx, ts->eax);

loc_478767:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebp*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78B938);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x14);

loc_47879E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	add(&ts->eax, 0x4);
	mov(&ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	and_(&ts->esi, 0xF0000000);
	goto loc_478610;

loc_4787BC:
	mov(&ts->ebx, ts->ebp);
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_4787E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478803;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4787E4;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478803;

loc_4787E4:
	mov(&ts->eax, ts->edx);
	goto loc_478803;

loc_4787E8:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478800;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478800;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478803;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478803;

loc_478800:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));

loc_478803:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx*4) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47879E;
    }
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);

loc_478817:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47883D;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_478856;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478839;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_478858;

loc_478839:
	mov(&ts->eax, ts->esi);
	goto loc_478858;

loc_47883D:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478853;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478853;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478858;
    }
	goto loc_478856;

loc_478853:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));

loc_478856:
	mov(&ts->eax, ts->edx);

loc_478858:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + (ts->esi*4) + 0x4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47879E;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47888D;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47889E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478889;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_4788A0;

loc_478889:
	mov(&ts->eax, ts->esi);
	goto loc_4788A0;

loc_47888D:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_47889E;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_47889E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4788A0;
    }

loc_47889E:
	mov(&ts->eax, ts->edx);

loc_4788A0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	and_(&ts->esi, 0xFF);
	shl(&ts->esi, 0x2);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->esi), 4));
	add(&ts->edi, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4788F2;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4788EC;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4788EA;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_467E40(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->edx, ts->eax);
	goto loc_478905;

loc_4788EA:
	mov(&ts->edx, ts->ebp);

loc_4788EC:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	goto loc_478905;

loc_4788F2:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478905;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478905;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478905;
    }
	mov(&ts->edx, ts->eax);

loc_478905:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebp*4), 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi), 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	add(&ts->ecx, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78B908);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47895E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_47898A;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47895A;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_47898A;

loc_47895A:
	mov(&ts->eax, ts->edx);
	goto loc_47898A;

loc_47895E:
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_47896C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	goto loc_47898A;

loc_47896C:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478983;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47898A;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_47898A;

loc_478983:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));

loc_47898A:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi), 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->ecx, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	goto loc_478817;

loc_4789B8:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4789C8;
    }
	cmp(&ts->eflags, ts->esi, 0xB0000000);
	if (!ts->eflags.zero) {
        goto loc_478FD2;
    }

loc_4789C8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax + 0x28, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_478FD2;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_478D98;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(&ts->edi, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	sar(&ts->edi, 0x10);
	and_(&ts->edi, 0xFF);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78B8E0);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478B81;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(&ts->edx, ts->ebx);
	sar(&ts->edx, 0x8);
	and_(&ts->edx, 0xF);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_478B81;
    }
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_478A53;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478A66;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478A4F;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478A66;

loc_478A4F:
	mov(&ts->eax, ts->edx);
	goto loc_478A66;

loc_478A53:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478A66;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478A66;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478A66;
    }
	mov(&ts->eax, ts->ecx);

loc_478A66:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx, 4));
	and_(&ts->esi, 0xFF);
	shl(&ts->esi, 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->ecx), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478ABD;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_478AD6;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478AB9;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	goto loc_478AD8;

loc_478AB9:
	mov(&ts->eax, ts->edi);
	goto loc_478AD8;

loc_478ABD:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478AD3;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478AD3;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478AD8;
    }
	goto loc_478AD6;

loc_478AD3:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));

loc_478AD6:
	mov(&ts->eax, ts->edx);

loc_478AD8:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + (ts->eax), 4));
	if (!ts->eflags.zero) {
        goto loc_478B10;
    }
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_478B23;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478B0C;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_467E40(ts, mv);
	goto loc_478B21;

loc_478B0C:
	mov(&ts->edx, ts->edi);
	goto loc_478B23;

loc_478B10:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478B23;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478B23;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478B23;
    }

loc_478B21:
	mov(&ts->edx, ts->eax);

loc_478B23:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + (ts->eax), 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78B8AC);

loc_478B55:
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x14);

loc_478B5F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	add(&ts->eax, 0x4);
	mov(&ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	and_(&ts->esi, 0xF0000000);
	goto loc_4789B8;

loc_478B81:
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478BAF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478BCA;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478BAB;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478BCA;

loc_478BAB:
	mov(&ts->eax, ts->edx);
	goto loc_478BCA;

loc_478BAF:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478BC7;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478BC7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478BCA;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478BCA;

loc_478BC7:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));

loc_478BCA:
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478B5F;
    }
	lea(mv, &ts->ecx, x86::mem(0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);

loc_478BE5:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_478C0F;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_478C28;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478C0B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_478C2A;

loc_478C0B:
	mov(&ts->eax, ts->esi);
	goto loc_478C2A;

loc_478C0F:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478C25;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478C25;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478C2A;
    }
	goto loc_478C28;

loc_478C25:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));

loc_478C28:
	mov(&ts->eax, ts->edx);

loc_478C2A:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + (ts->eax), 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_478B5F;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478C5E;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_478C6F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478C5A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_478C71;

loc_478C5A:
	mov(&ts->eax, ts->esi);
	goto loc_478C71;

loc_478C5E:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478C6F;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478C6F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478C71;
    }

loc_478C6F:
	mov(&ts->eax, ts->edx);

loc_478C71:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	and_(&ts->edi, 0xFF);
	shl(&ts->edi, 0x2);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->ebp, x86::mem(ts->edi + (ts->ecx), 4));
	if (!ts->eflags.zero) {
        goto loc_478CB6;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_478CC9;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478CB2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_467E40(ts, mv);
	goto loc_478CC7;

loc_478CB2:
	mov(&ts->edx, ts->esi);
	goto loc_478CC9;

loc_478CB6:
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478CC9;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478CC9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478CC9;
    }

loc_478CC7:
	mov(&ts->edx, ts->eax);

loc_478CC9:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + (ts->ecx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78B878);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478D38;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478D63;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478D34;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478D63;

loc_478D34:
	mov(&ts->eax, ts->edx);
	goto loc_478D63;

loc_478D38:
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_478D45;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	goto loc_478D63;

loc_478D45:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478D5C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478D63;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478D63;

loc_478D5C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_478D63:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax), 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x14, 4));
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	goto loc_478BE5;

loc_478D98:
	cmp(&ts->eflags, ts->esi, 0xB0000000);
	if (!ts->eflags.zero) {
        goto loc_478B5F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x44, 4));
	mov(&ts->eax, ts->ebp);
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478ED3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ebx, ts->esi);
	sar(&ts->ebx, 0x14);
	and_(&ts->ebx, 0xF);
	if (!ts->eflags.zero) {
        goto loc_478DF1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478E1D;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478DED;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478E1D;

loc_478DED:
	mov(&ts->eax, ts->edx);
	goto loc_478E1D;

loc_478DF1:
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_478DFF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	goto loc_478E1D;

loc_478DFF:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478E16;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478E1D;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478E1D;

loc_478E16:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));

loc_478E1D:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi, 4));
	and_(&ts->esi, 0xFF);
	shl(&ts->esi, 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebp + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_478E78;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478EA4;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478E74;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478EA4;

loc_478E74:
	mov(&ts->eax, ts->edx);
	goto loc_478EA4;

loc_478E78:
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_478E86;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	goto loc_478EA4;

loc_478E86:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478E9D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478EA4;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478EA4;

loc_478E9D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));

loc_478EA4:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78B840);
	goto loc_478B55;

loc_478ED3:
	mov(&ts->eax, ts->ebp);
	sar(&ts->eax, 0x14);
	xor_(&ts->ebx, ts->ebx);
	and_(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);

loc_478EE1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478F07;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478F21;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478F03;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478F21;

loc_478F03:
	mov(&ts->eax, ts->edx);
	goto loc_478F21;

loc_478F07:
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478F1E;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478F1E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478F21;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478F21;

loc_478F1E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));

loc_478F21:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->eax + (ts->ecx*4) + 0x4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_478B5F;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78B828);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_478F69;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_478F83;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_478F65;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_467E40(ts, mv);
	goto loc_478F83;

loc_478F65:
	mov(&ts->eax, ts->edx);
	goto loc_478F83;

loc_478F69:
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_478F80;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_478F80;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_478F83;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_478F83;

loc_478F80:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));

loc_478F83:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	mov(&ts->ecx, ts->ebp);
	and_(&ts->ecx, 0xFF);
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78B7F0);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	inc(&ts->ebx);
	goto loc_478EE1;

loc_478FD2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x8);
}

void sub_478FE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x3C, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479029;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	nop();

loc_478FF0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->ebx*4), 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47901F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47901F;
    }

loc_479003:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_479017;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_467E70(ts, mv);

loc_479017:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_479003;
    }

loc_47901F:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x3C, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_478FF0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_479029:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_479030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esi, 0x4);
	add(&ts->esi, 0x4);
	test(&ts->eflags, ts->edx, 0x10000000);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_47909A;
    }
	shr(&ts->eax, 0x10);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->eax);
	movsx(&ts->eax, ts->bx);
	neg(&ts->eax);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);
	add(&ts->eax, 0xFFFFD8F0);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ebp, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	add(&ts->esi, 0x4);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78BA1C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_47909A:
	mov(&ts->ecx, ts->eax);
	or_(&ts->ecx, 0xFFFF0000);
	push(mv, &ts->esp, ts->ecx);
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0x7FFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78B9F0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void stdiobuf___scalar_deleting_destructor__uint_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4790F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4790F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_479100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47912D;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_479110:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_479127;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_479127:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_479110;
    }

loc_47912D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_479130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_479154;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_479154:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4791B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x40000050);
	game::sub_468F70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4791C5;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4754C0;

locret_4791C5:
	retn(mv, &ts->esp, 0x4);

loc_4754C0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_47550E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_45A550(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47550E;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, 0x78B318);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	add(&ts->esp, 0x8);
	game::sub_46CA10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB1, 1), 0x1);

loc_47550E:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_47552B;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_47552B;
    }
	game::sub_46C9D0(ts, mv);

locret_47552B:
	retn(mv, &ts->esp, 0x4);
}

void sub_4791D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x40000050);
	game::sub_468F70(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4791FB;
    }
	mov(mv, &ts->eax, x86::mem(0x82BC4C, 4));
	push(mv, &ts->esp, 0x78B274);
	push(mv, &ts->esp, ts->eax);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xB0, 1), 0x1);

loc_4791FB:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_479200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x40000050);
	game::sub_468F70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_479215;
    }
	mov(mv, x86::mem(0x82BC49, 1), 0x1);

locret_479215:
	retn(mv, &ts->esp);
}

void sub_479220(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x83AA58, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edx, ts->edx);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x83AA28);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ebp, 0x83ACB8);

loc_479248:
	movzx(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 1));
	dec(&ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	if (ts->eflags.zero) {
        goto loc_479273;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_479267;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47927D;
    }
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	or_(&ts->edx, ts->eax);
	inc(&ts->esi);
	or_(&ts->edi, ts->eax);
	inc(&ts->ebx);
	goto loc_47927D;

loc_479267:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	or_(&ts->edi, ts->eax);
	inc(&ts->ebx);
	goto loc_47927D;

loc_479273:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	or_(&ts->edx, ts->eax);
	inc(&ts->esi);

loc_47927D:
	add(&ts->ebp, 0x8);
	cmp(&ts->eflags, ts->ebp, 0x83AD90);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_479248;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4792A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_46BAA0(ts, mv);

loc_4792A4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4792B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x98, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.zero) {
        goto locret_4792C6;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);

locret_4792C6:
	retn(mv, &ts->esp, 0x4);
}

void sub_4792D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4792E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x3C, 4));
	goto loc_469DE0;

locret_4792E1:
	retn(mv, &ts->esp, 0x4);

loc_469DE0:
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_469E48;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	add(&ts->ecx, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_469DF9;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_469DFB;

loc_469DF9:
	xor_(&ts->esi, ts->esi);

loc_469DFB:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	nop();

loc_469E00:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_469E09;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x10, 4));
	goto loc_469E0B;

loc_469E09:
	xor_(&ts->eax, ts->eax);

loc_469E0B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_469E47;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_469E24;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_469E20;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_469E00;

loc_469E20:
	xor_(&ts->esi, ts->esi);
	goto loc_469E00;

loc_469E24:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x134, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_469E47;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_469E47;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_469E47;
    }
	mov(mv, x86::mem(ts->esi + 0x22, 1), 0x1);

loc_469E47:
	pop(mv, &ts->esp, ts->esi);

locret_469E48:
	retn(mv, &ts->esp, 0x4);
}

void sub_4792F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82B920, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D900(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4793A9;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_458890(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47935E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82C6D4);
	game::sub_457A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4692F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_479394;

loc_47935E:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_479394;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_47936D;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_479394;
    }

loc_47936D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edx);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4692F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x20);

loc_479394:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4793A9;
    }
	mov(mv, x86::mem(0x82B910, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(0x82B914, 4), ts->edx);

loc_4793A9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4793B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4693F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4793C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4793C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4793D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4794DD;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_479451;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E5C0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4794DD;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47943F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47941D;
    }
	game::sub_735550(ts, mv);

loc_47941D:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47943F:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0xFFFFFFFF);
	goto loc_4794DD;

loc_479451:
	mov(mv, &ts->eax, x86::mem(0x7EC858, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82C6E8);
	game::sub_576970(ts, mv);
	mov(&ts->ecx, 0x82C6E8);
	game::sub_576910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x6);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_479483;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47948F;

loc_479483:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47948F;
    }
	mov(&ts->eax, 0x7FFF);

loc_47948F:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82C6F4, 4));
	mov(&ts->ecx, 0x7EFFFC);
	mov(mv, x86::mem(0x7F000C, 4), ts->eax);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0010, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4794BC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4794C8;

loc_4794BC:
	cmp(&ts->eflags, ts->eax, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4794C8;
    }
	mov(&ts->eax, 0x1FFF);

loc_4794C8:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4794DD;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_4794DD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_479583;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1000);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x5);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47950D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479519;

loc_47950D:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479519;
    }
	mov(&ts->eax, 0x7FFF);

loc_479519:
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47952E;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47952E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47954C;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479583;
    }

loc_47954C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_479580;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47955E;
    }
	game::sub_735550(ts, mv);

loc_47955E:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_479580:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);

loc_479583:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_479590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4795C3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_464C10(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), 0x0);
	game::sub_469A10(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_4795C3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_479610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_479658;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_464C10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_479658;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xF1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47964A;
    }
	mov(mv, x86::mem(ts->esi + 0xF1, 1), 0x0);

loc_47964A:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x50, 4));

loc_479658:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_479660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x78BAA8);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x7C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x80, 4), 0x7F0DE0);
	mov(mv, x86::mem(ts->eax + 0x88, 4), 0x7F2230);
	mov(mv, x86::mem(ts->eax + 0x8C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x78, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB4, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xBC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC0, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC8, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4796F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	retn(mv, &ts->esp);
}

void sub_479700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x94, 4));
	retn(mv, &ts->esp);
}

void sub_479710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7725C0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78BAA8);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_464C80(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78A588);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_464C80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7725B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_477060;

loc_7725B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_479710:
	mov(&ts->eax, 0x7DEB20);
	goto ___CxxFrameHandler;
}

void sub_479770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE80(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x82B960, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_47979E;
    }
	mov(mv, x86::mem(0x82B960, 4), ts->eax);

locret_47979E:
	retn(mv, &ts->esp, 0x4);
}

void sub_479880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7725DB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A760);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4798B7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));

loc_4798B7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4798C7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4798C7:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x0);
	game::sub_46A400(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7725D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x74);
	goto sub_5768E0;

SEH_479880:
	mov(&ts->eax, 0x7DEB44);
	goto ___CxxFrameHandler;
}

void sub_479900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_479966;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_479950;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_479950;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xAC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_479952;

loc_479950:
	xor_(&ts->eax, ts->eax);

loc_479952:
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	add(&ts->esi, 0xBC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_46CDD0(ts, mv);

loc_479966:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_479970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_479A18;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x134, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_479A18;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xDC, 4));
	add(&ts->edx, 0xFFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x74, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_479A11;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x6C, 4));
	fimul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);

loc_479A11:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));

loc_479A18:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_479A20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x124, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0xA0, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7884F4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_479A85;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_479A85:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_479AAB;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_4599E0(ts, mv);

loc_479AAB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x50, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_479AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_479B1A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_479B1A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_479B09;
    }
	mov(&ts->ecx, ts->edx);
	game::sub_4599E0(ts, mv);

loc_479B09:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);

loc_479B1A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_479B20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xD0, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_479B40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, 0x7);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_479FF5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x140, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x11);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_479B62;
    }
	jmp(x86::mem(0x47A4BC, 4));

loc_479B69:
	mov(mv, &ts->eax, x86::mem(0x82CBD4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479B8F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479B99;

loc_479B8F:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479B99;
    }
	mov(&ts->eax, 0x13);

loc_479B99:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xC7);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBD4, 4), ts->esi);
	goto loc_47A49D;

loc_479BC3:
	mov(mv, &ts->eax, x86::mem(0x82CBD0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479BE9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479BF3;

loc_479BE9:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479BF3;
    }
	mov(&ts->eax, 0x13);

loc_479BF3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x8B);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBD0, 4), ts->esi);
	goto loc_47A49D;

loc_479C1D:
	mov(mv, &ts->eax, x86::mem(0x82CBCC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479C43;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479C4D;

loc_479C43:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479C4D;
    }
	mov(&ts->eax, 0x13);

loc_479C4D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x5E);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBCC, 4), ts->esi);
	goto loc_47A49D;

loc_479C75:
	mov(mv, &ts->eax, x86::mem(0x82CBC8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479C9B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479CA5;

loc_479C9B:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479CA5;
    }
	mov(&ts->eax, 0x13);

loc_479CA5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x103);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBC8, 4), ts->esi);
	goto loc_47A49D;

loc_479CCF:
	mov(mv, &ts->eax, x86::mem(0x82CBC4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479CF5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479CFF;

loc_479CF5:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479CFF;
    }
	mov(&ts->eax, 0x13);

loc_479CFF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xE5);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBC4, 4), ts->esi);
	goto loc_47A49D;

loc_479D29:
	mov(mv, &ts->eax, x86::mem(0x82CBC0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479D4F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479D59;

loc_479D4F:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479D59;
    }
	mov(&ts->eax, 0x13);

loc_479D59:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xF4);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBC0, 4), ts->esi);
	goto loc_47A49D;

loc_479D83:
	mov(mv, &ts->eax, x86::mem(0x82CBBC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479DA9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479DB3;

loc_479DA9:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479DB3;
    }
	mov(&ts->eax, 0x13);

loc_479DB3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x9A);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBBC, 4), ts->esi);
	goto loc_47A49D;

loc_479DDD:
	mov(mv, &ts->eax, x86::mem(0x82CBB8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479E03;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479E0D;

loc_479E03:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479E0D;
    }
	mov(&ts->eax, 0x13);

loc_479E0D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x112);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBB8, 4), ts->esi);
	goto loc_47A49D;

loc_479E37:
	mov(mv, &ts->eax, x86::mem(0x82CBB4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479E5D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479E67;

loc_479E5D:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479E67;
    }
	mov(&ts->eax, 0x13);

loc_479E67:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xD6);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBB4, 4), ts->esi);
	goto loc_47A49D;

loc_479E91:
	mov(mv, &ts->eax, x86::mem(0x82CBB0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479EB7;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479EC1;

loc_479EB7:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479EC1;
    }
	mov(&ts->eax, 0x13);

loc_479EC1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x7C);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBB0, 4), ts->esi);
	goto loc_47A49D;

loc_479EE9:
	mov(mv, &ts->eax, x86::mem(0x82CBAC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479F0F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479F19;

loc_479F0F:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479F19;
    }
	mov(&ts->eax, 0x13);

loc_479F19:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x6D);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBAC, 4), ts->esi);
	goto loc_47A49D;

loc_479F41:
	mov(mv, &ts->eax, x86::mem(0x82CBA8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479F67;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479F71;

loc_479F67:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479F71;
    }
	mov(&ts->eax, 0x13);

loc_479F71:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xA9);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBA8, 4), ts->esi);
	goto loc_47A49D;

def_479B62:
	mov(mv, &ts->eax, x86::mem(0x82CBA4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_479FC1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_479FCB;

loc_479FC1:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_479FCB;
    }
	mov(&ts->eax, 0x13);

loc_479FCB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x103);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBA4, 4), ts->esi);
	goto loc_47A49D;

loc_479FF5:
	cmp(&ts->eflags, ts->edx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_47A49D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x140, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x11);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47A010;
    }
	jmp(x86::mem(0x47A504, 4));

loc_47A017:
	mov(mv, &ts->eax, x86::mem(0x82CBA0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A03D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A047;

loc_47A03D:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A047;
    }
	mov(&ts->eax, 0x13);

loc_47A047:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xCD);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBA0, 4), ts->esi);
	goto loc_47A49D;

loc_47A071:
	mov(mv, &ts->eax, x86::mem(0x82CB9C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A097;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A0A1;

loc_47A097:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A0A1;
    }
	mov(&ts->eax, 0x13);

loc_47A0A1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x91);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB9C, 4), ts->esi);
	goto loc_47A49D;

loc_47A0CB:
	mov(mv, &ts->eax, x86::mem(0x82CB98, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A0F1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A0FB;

loc_47A0F1:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A0FB;
    }
	mov(&ts->eax, 0x13);

loc_47A0FB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x64);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB98, 4), ts->esi);
	goto loc_47A49D;

loc_47A123:
	mov(mv, &ts->eax, x86::mem(0x82CB94, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A149;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A153;

loc_47A149:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A153;
    }
	mov(&ts->eax, 0x13);

loc_47A153:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x109);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB94, 4), ts->esi);
	goto loc_47A49D;

loc_47A17D:
	mov(mv, &ts->eax, x86::mem(0x82CB90, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A1A3;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A1AD;

loc_47A1A3:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A1AD;
    }
	mov(&ts->eax, 0x13);

loc_47A1AD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xEB);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB90, 4), ts->esi);
	goto loc_47A49D;

loc_47A1D7:
	mov(mv, &ts->eax, x86::mem(0x82CB8C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A1FD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A207;

loc_47A1FD:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A207;
    }
	mov(&ts->eax, 0x13);

loc_47A207:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xFA);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB8C, 4), ts->esi);
	goto loc_47A49D;

loc_47A231:
	mov(mv, &ts->eax, x86::mem(0x82CB88, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A257;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A261;

loc_47A257:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A261;
    }
	mov(&ts->eax, 0x13);

loc_47A261:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xA0);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB88, 4), ts->esi);
	goto loc_47A49D;

loc_47A28B:
	mov(mv, &ts->eax, x86::mem(0x82CB84, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A2B1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A2BB;

loc_47A2B1:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A2BB;
    }
	mov(&ts->eax, 0x13);

loc_47A2BB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x118);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB84, 4), ts->esi);
	goto loc_47A49D;

loc_47A2E5:
	mov(mv, &ts->eax, x86::mem(0x82CB80, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A30B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A315;

loc_47A30B:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A315;
    }
	mov(&ts->eax, 0x13);

loc_47A315:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xDC);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB80, 4), ts->esi);
	goto loc_47A49D;

loc_47A33F:
	mov(mv, &ts->eax, x86::mem(0x82CB7C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A365;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A36F;

loc_47A365:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A36F;
    }
	mov(&ts->eax, 0x13);

loc_47A36F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x82);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB7C, 4), ts->esi);
	goto loc_47A49D;

loc_47A399:
	mov(mv, &ts->eax, x86::mem(0x82CB78, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A3BF;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A3C9;

loc_47A3BF:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A3C9;
    }
	mov(&ts->eax, 0x13);

loc_47A3C9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x73);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB78, 4), ts->esi);
	goto loc_47A49D;

loc_47A3F1:
	mov(mv, &ts->eax, x86::mem(0x82CB74, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A417;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A421;

loc_47A417:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A421;
    }
	mov(&ts->eax, 0x13);

loc_47A421:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0xAF);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB74, 4), ts->esi);
	goto loc_47A49D;

def_47A010:
	mov(mv, &ts->eax, x86::mem(0x82CB70, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	mov(&ts->esi, ts->edx);
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A46E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A478;

loc_47A46E:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A478;
    }
	mov(&ts->eax, 0x13);

loc_47A478:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x109);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CB70, 4), ts->esi);

loc_47A49D:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_47A550(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	game::sub_592D80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0xA0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x124, 4));
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7884F4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47A5C9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_47A5C9:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_4599E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47A5EF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_4599E0(ts, mv);

loc_47A5EF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x50, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_47A610(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x124, 4));
	xor_(&ts->eax, ts->eax);
	sub(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47A67F;
    }
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47A6D8;
    }
	mov(mv, &ts->esi, x86::mem(0x82CBDC, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47A637;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47A637:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A64E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A658;

loc_47A64E:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A658;
    }
	mov(&ts->eax, 0x13);

loc_47A658:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x16);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBDC, 4), ts->esi);
	goto loc_47A6D8;

loc_47A67F:
	mov(mv, &ts->esi, x86::mem(0x82CBD8, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47A692;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47A692:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A6A9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A6B3;

loc_47A6A9:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A6B3;
    }
	mov(&ts->eax, 0x13);

loc_47A6B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->edx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x6);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBD8, 4), ts->esi);

loc_47A6D8:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_47A700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_479A20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47A760;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED564, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47A760;
    }
	game::sub_5EC1F0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47A760;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	add(&ts->edx, 0x32);
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0x7F);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A760;
    }
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x7F);

loc_47A760:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47A770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47A79F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47A79F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x58, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_47A79F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->eax, 0x3C);
	cmp(&ts->eflags, ts->eax, 0x7F);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A79F;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x7F);

loc_47A79F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47A7B0;
    }
	jmp(x86::mem(0x47A948, 4));

loc_47A7B7:
	mov(mv, &ts->esi, x86::mem(0x82CBEC, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47A7CA;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47A7CA:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A7E1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A7EB;

loc_47A7E1:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A7EB;
    }
	mov(&ts->eax, 0x13);

loc_47A7EB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x4E);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBEC, 4), ts->esi);
	goto loc_47A92C;

loc_47A815:
	mov(mv, &ts->esi, x86::mem(0x82CBE8, 4));
	and_(&ts->esi, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_47A828;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFE);
	inc(&ts->esi);

loc_47A828:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A83F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A849;

loc_47A83F:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A849;
    }
	mov(&ts->eax, 0x13);

loc_47A849:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	mov(&ts->edx, 0x23);
	sub(&ts->edx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*2), 4));
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBE8, 4), ts->esi);
	goto loc_47A92C;

loc_47A871:
	mov(mv, &ts->esi, x86::mem(0x82CBE4, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47A884;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47A884:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A89B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A8A5;

loc_47A89B:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A8A5;
    }
	mov(&ts->eax, 0x13);

loc_47A8A5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x36);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBE4, 4), ts->esi);
	goto loc_47A92C;

loc_47A8CC:
	mov(mv, &ts->esi, x86::mem(0x82CBE0, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47A8DF;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47A8DF:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB00, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47A8F6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47A900;

loc_47A8F6:
	cmp(&ts->eflags, ts->eax, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47A900;
    }
	mov(&ts->eax, 0x13);

loc_47A900:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ECB78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB04, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->edx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x26);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBE0, 4), ts->esi);
	goto loc_47A92C;

def_47A7B0:
	mov(&ts->eax, 0x26);

loc_47A92C:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_47A960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_46A080(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78BB08);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47A990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7725F8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78BB08);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47A9F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47A9D2;
    }
	game::sub_735550(ts, mv);

loc_47A9D2:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47A9F4:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47AA31;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47AA0F;
    }
	game::sub_735550(ts, mv);

loc_47AA0F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47AA31:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x154, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47AA6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47AA4C;
    }
	game::sub_735550(ts, mv);

loc_47AA4C:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47AA6E:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_479880(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_7725F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_479880;

SEH_47A990:
	mov(&ts->eax, 0x7DEB68);
	goto ___CxxFrameHandler;
}

void sub_47AAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47AAC4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);

loc_47AAC4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_47AAD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	sub(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47AAF7;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x7, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x0);
	game::sub_72163D(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47AAFE;
    }

loc_47AAF7:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_47AAFE:
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	mov(mv, &ts->edx, x86::mem(0x82B06C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78BB58);
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_440DF0(ts, mv);
	push(mv, &ts->esp, 0x82C694);
	mov(mv, x86::mem(0x82AFA8, 4), ts->eax);
	game::sub_734DE0(ts, mv);
	game::sub_734E10(ts, mv);
	game::sub_724314(ts, mv);
	game::sub_7242CD(ts, mv);
	push(mv, &ts->esp, 0x20);
	game::sub_7215C7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x64000);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0x64400);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47AB7E;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x64000);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_47AB7E:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(0x7ECBD0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_7216C6(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x1);
	game::sub_46B2C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x87099C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47ABC2;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(0x7ECBD8, 4), 0xAC44);
	if (!ts->eflags.zero) {
        goto loc_47ABCC;
    }

loc_47ABC2:
	mov(mv, x86::mem(0x7ECBD8, 4), 0x5622);

loc_47ABCC:
	mov(mv, &ts->eax, x86::mem(0x82B96C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47ABDA;
    }
	mov(mv, x86::mem(0x7ECBD8, 4), ts->eax);

loc_47ABDA:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_721776(ts, mv);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, 0x0);
	game::sub_721725(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_721776(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7ECBD4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7215F5(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ECBD8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_7216C6(ts, mv);
	game::__cfltcvt_init_4(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_72192E(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	game::sub_72194E(ts, mv);
	push(mv, &ts->esp, 0x90304);
	game::sub_7217A7(ts, mv);
	add(&ts->esp, 0x3C);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_47AC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47AC7B;
    }
	jmp(x86::mem(0x47AF0C, 4));

loc_47AC82:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto def_47AC7B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47ACB9:
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_46C800(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47AD0F:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47ADB8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_47AD49;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);

loc_47AD49:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47AD69;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_47AD69:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47AD8A;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_47ADAB;

loc_47AD8A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47ADA5;
    }
	mov(mv, &ts->edx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x17C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_47ADA5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);

loc_47ADAB:
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));

loc_47ADB8:
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47ADC6:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47AE0A;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0xC);

loc_47AE0A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47AE32:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47AE65;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	add(&ts->esp, 0x8);

loc_47AE65:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47AE78:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47AEC4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47AEA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	add(&ts->esp, 0x8);

loc_47AEA7:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x1);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82B9CC, 1), 0x1);

loc_47AEC4:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto def_47AC7B;
    }
	test(mv, &ts->eflags, x86::mem(0x83ACBC, 1), 0x1);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, x86::mem(ts->esi + 0x88, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_47AEE2:
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_47AC7B;
    }
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x17C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

def_47AC7B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_47AF40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x82B9D4, 4), ts->ebx);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC8, 1), ts->bl);
	game::sub_47AC50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0xFFFFFFFE);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_47B080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x90, 4), 0x1);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47B196;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA5, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47B15C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B15C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82AFD4, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47B11D;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1A0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B11D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	game::sub_46B6F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B253;
    }
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x14, 2));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_4580E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	shl(&ts->ecx, 0x4);
	add(&ts->ecx, 0x7ECD80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4AC9F0(ts, mv);
	add(&ts->esp, 0x4);

loc_47B11D:
	mov(mv, &ts->edi, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 4));
	sar(&ts->edx, 0x8);
	add(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->edx);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);
	goto loc_47B217;

loc_47B15C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43E5C0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BB94, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47B217;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B217;
    }
	mov(mv, x86::mem(ts->esi + 0xA4, 1), 0x0);
	goto loc_47B217;

loc_47B196:
	cmp(mv, &ts->eflags, x86::mem(0x82AFD4, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47B217;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B217;
    }
	mov(mv, &ts->edx, x86::mem(0x82B974, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1A0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B217;
    }
	game::sub_4A9330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B217;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_46B6F0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47B1DA;
    }
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47B1DA:
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->cx, ts->ax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4580E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	shl(&ts->ecx, 0x4);
	add(&ts->ecx, 0x7ECD80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4AC9F0(ts, mv);
	add(&ts->esp, 0x4);

loc_47B217:
	mov(mv, &ts->edi, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 4));
	sar(&ts->edx, 0x8);
	add(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->edx);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);
	xor_(&ts->eax, ts->eax);

loc_47B253:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47B260(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47B3A0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B2EB;
    }
	game::sub_46B330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7ECC10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->esi + 0x14, 2));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7399E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_47B2EB:
	game::sub_46B330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xB4, 4));
	if (ts->eflags.zero) {
        goto loc_47B31B;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_47B31B:
	cmp(mv, &ts->eflags, x86::mem(0x82AFD4, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x1A0, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7ECC10, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(0x7ECC10, 2));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4580E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_73A450(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_47B3A0:
	game::sub_4A9330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B64D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B466;
    }
	game::sub_46B330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_468140(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_468140(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12C);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0xC, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ECC10, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ax, ts->cx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_7399E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_47B466:
	game::sub_46B330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B64D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x64, 4));
	if (ts->eflags.zero) {
        goto loc_47B4AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_468140(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12C);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);

loc_47B4AE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B4ED;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_47B4ED:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0xC8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47B5AD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B64C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	sar(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_46C800(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47B64C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x7ECC10, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7ECC10, 2));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4580E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC8, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_47B5AD:
	cmp(mv, &ts->eflags, x86::mem(0x82AFD4, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47B612;
    }
	mov(mv, &ts->edx, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_47B612;
    }
	mov(mv, &ts->edx, x86::mem(0x82B974, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x1A0, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_47B612;
    }
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7ECC10, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	movsx(mv, &ts->eax, x86::mem(0x7ECC10, 2));
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_4580E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));

loc_47B612:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B64C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::__ftol2(ts, mv);
	imul(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	sar(&ts->eax, 0x17);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_46C800(ts, mv);

loc_47B64C:
	pop(mv, &ts->esp, ts->edi);

loc_47B64D:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_47B660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x7ECD74, 4));
	mov(mv, &ts->eax, x86::mem(0x82B96C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ECD08, 4));
	mov(mv, x86::mem(ts->eax + 0x174, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B96C, 4));
	add(&ts->edx, 0xFFFFFFFE);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x7ECD74, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edx*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82B984, 4));
	push(mv, &ts->esp, ts->edi);
	shl(&ts->eax, 0x2);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x7ECBF0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x7ECBE8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x7ECBEC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x7ECF48, 4), 0x1);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x46B5D0);
	game::sub_73A9F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47B6E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0x78BB98);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B708;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45A630(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47B708;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47B708:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47B710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x7ECF48, 4), 0x0);
	game::sub_46C6F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B745;
    }
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_47B745:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->ecx*4) + 0x14, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47B764;
    }
	mov(mv, x86::mem(ts->edx + (ts->ecx*4) + 0x14, 4), ts->esi);

loc_47B764:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_47B770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	mov(mv, x86::mem(ts->ecx + 0x1A0, 1), ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_47B780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47B7A1;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x65, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B7A1;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_46C130(ts, mv);
	add(&ts->esp, 0x4);

loc_47B7A1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B7AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_47B7AE:
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x66, 1));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B7CC;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx*4) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4), 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B7CC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_47B7CC:
	mov(&ts->eax, 0xFFFFFFF8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47B7E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B80D;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x65, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47B801;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_46C130(ts, mv);
	add(&ts->esp, 0x4);

loc_47B801:
	mov(mv, &ts->eax, x86::mem(0x82B620, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_47B80D:
	mov(&ts->eax, 0xFFFFFFF8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47B820(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	xor_(&ts->ebp, ts->ebp);
	game::sub_46B670(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x65, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B850;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_46C130(ts, mv);
	add(&ts->esp, 0x4);

loc_47B850:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B867;
    }
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B867;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, 0xFFFFFFF8);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_47B867:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47B8D5;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B8D5;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47B8D5;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47B8AA;
    }
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_72412A(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_47B8AA:
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->edi);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);

loc_47B8D5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_47B8E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47B928;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B928;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x58, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47B928;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78BBC4);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_46C9D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x1);

loc_47B928:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B98A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_47B98A;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_45AC20(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A72C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->esi, 0x4);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x4);
	goto sub_721FA7;

loc_47B98A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47B990(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47B8E0(ts, mv);
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47B9D8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_47BA11;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47B9CD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789CF4, 4));

loc_47B9CD:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47BA11;
    }

loc_47B9D8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7227CB(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47BA11;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78A950);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);

loc_47BA11:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47BA42;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x2C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_47BA42;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	cmp(&ts->eflags, ts->eax, 0x11);
	if (ts->eflags.zero) {
        goto loc_47BA4C;
    }
	cmp(&ts->eflags, ts->eax, 0xD);
	if (ts->eflags.zero) {
        goto loc_47BA4C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	add(&ts->ecx, 0x4);
	game::sub_45A610(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x1);
	goto loc_47BA4C;

loc_47BA42:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47BAFE;
    }

loc_47BA4C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47BA82;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47BA82;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47BA6D;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	goto loc_47BA6F;

loc_47BA6D:
	xor_(&ts->eax, ts->eax);

loc_47BA6F:
	push(mv, &ts->esp, ts->eax);
	game::sub_736D60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1);

loc_47BA82:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47BABC;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47BABC;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x1000);
	push(mv, &ts->esp, ts->edx);
	game::sub_7230A7(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x0);

loc_47BABC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47BAFD;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	add(&ts->edi, 0x4);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_722ECE(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47BAFD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47BAFD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	jmp(x86::mem(ts->edx + 0x4, 4));

loc_47BAFD:
	pop(mv, &ts->esp, ts->edi);

loc_47BAFE:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_47BB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_46CD80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47BB28;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47BB28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BB30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47BBD9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47BB8C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	mov(&ts->ecx, 0x5);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 1));
	sub(&ts->ecx, 0x0);
	mov(&ts->edx, 0x7FFF);
	if (ts->eflags.zero) {
        goto loc_47BB74;
    }
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47BB80;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x6, 2));
	movzx(mv, &ts->edx, x86::mem(0x7F36E8, 2));
	goto loc_47BB80;

loc_47BB74:
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 2));
	movzx(mv, &ts->edx, x86::mem(0x7F34A0, 2));

loc_47BB80:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	imul(&ts->eax, ts->edx);
	sar(&ts->eax, 0xF);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);

loc_47BB8C:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, x86::mem(ts->ebp + 0x1C, 1), 0x0);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9, 1));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_47BBD7;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x20, 4));
	nop();

loc_47BBA0:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47BBC8;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47BBBB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	goto loc_47BBC8;

loc_47BBBB:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_46CF70(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x1C, 1), 0x1);

loc_47BBC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x9, 1));
	inc(&ts->edi);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47BBA0;
    }

loc_47BBD7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_47BBD9:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BBE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x789EC0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_46CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47BC30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x8003B500);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47BCB6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_47BCAD;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_47BC50:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x3B502);
	if (!ts->eflags.zero) {
        goto loc_47BCAD;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_47BC7C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47BC7C;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x8, 1));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx*8) + 0x4, 4));
	game::sub_479130(ts, mv);

loc_47BC7C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax) + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x9, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_47BCA2;
    }

loc_47BC92:
	add(mv, x86::mem(0x82BB30, 4), 0x10);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x9, 1));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47BC92;
    }

loc_47BCA2:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_47BC50;
    }

loc_47BCAD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_47BCB6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_47BCC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_5EBF50(ts, mv);
	movzx(&ts->edx, ts->ax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BC00, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784510, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47BD07;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_47BD07:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_45B4C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_45B4C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x528, 4));
	push(mv, &ts->esp, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x524, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x520, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fsubp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_45B4C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x528, 4));
	push(mv, &ts->esp, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x524, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x520, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fsubp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_45B4C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x134, 4));
	game::sub_45B4C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_46D620(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47BE0B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_47BE0B:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_46DFE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x194, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x198, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1A8, 4));
	add(&ts->ecx, ts->edi);
	add(mv, &ts->edx, x86::mem(ts->esi + 0x19C, 4));
	sar(&ts->eax, 0x1);
	sar(&ts->ecx, 0x1);
	sar(&ts->edx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47BE51;
    }
	mov(&ts->eax, ts->ecx);

loc_47BE51:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47BE57;
    }
	mov(&ts->eax, ts->edx);

loc_47BE57:
	shl(&ts->eax, 0x5);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47BE67;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47BE67:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47BE73;
    }
	mov(&ts->eax, 0x7FFF);

loc_47BE73:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BE80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47BE98;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));

loc_47BE98:
	game::sub_46EA50(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BEA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47BEB4;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x47BF14, 1));
	jmp(x86::mem(0x47BF0C, 4));

loc_47BEBB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xAC, 4));
	game::sub_46B100(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_47BED0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	add(&ts->esi, 0xAC);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_47BEB4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);

def_47BEB4:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BF20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x158, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47BF60;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x140, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47BF5F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->edx);

loc_47BF5F:
	pop(mv, &ts->esp, ts->edi);

loc_47BF60:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47BF70;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x47BFC4, 1));
	jmp(x86::mem(0x47BFBC, 4));

loc_47BF77:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	game::sub_46B100(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_47BF88:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x70, 4));
	add(&ts->esi, 0xC8);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_47BF70;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);

def_47BF70:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47BFD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x5F0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47C00D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1F0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47C00D;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_46F1B0;

loc_47C00D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_47C010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47C033;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_47C033:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->eax, 0x90);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	add(&ts->eax, 0x60);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x98, 4));
	add(&ts->eax, 0x90);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784554, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784554, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784554, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	game::sub_46B100(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_46F9D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_46F580(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_46F460(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC8, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47C1AE;
    }
	jmp(x86::mem(0x47C20C, 4));

loc_47C1B5:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x4);
	add(&ts->ecx, 0x74);
	goto sub_46B100;

loc_47C1C1:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x74, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_47C1AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_47C1F0:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x74);
	game::sub_47AAA0(ts, mv);

def_47C1AE:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47C281;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47C281;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xAC, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_46B100(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47C261;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->edx);

loc_47C261:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47C280;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_459990(ts, mv);

loc_47C280:
	pop(mv, &ts->esp, ts->edi);

loc_47C281:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C290(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_46B100(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_47C1A0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_47C220(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto def_47C335;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_47C329;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.zero) {
        goto loc_47C329;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x4);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(&ts->ecx, ts->ebp);
	game::sub_459990(ts, mv);

loc_47C329:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47C335;
    }
	jmp(x86::mem(0x47C3BC, 4));

loc_47C33C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_47C335;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x3);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(&ts->ecx, ts->ebp);
	game::sub_459990(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_47C39F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_47C335;
    }
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x0);

def_47C335:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C3D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47C3EC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_47C3EC:
	mov(&ts->ecx, ts->esi);
	game::sub_45D0A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47C470;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47C429;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));

loc_47C429:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A290, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xF8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47C478;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4701A0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_45D190(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_47C470:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	goto loc_47C429;

loc_47C478:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_470540(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_45D190(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47C4AC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_47C4AC:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47C52F;
    }
	mov(mv, &ts->cl, x86::mem(0x82BC5C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47C4C6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_47C4CB;
    }

loc_47C4C6:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47C52F;
    }

loc_47C4CB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x447A0000);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->edx + 0x48, 4), ts->eax);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_47C6AC;
    }
	mov(&ts->al, 0x1);
	goto loc_47C6AE;

loc_47C52F:
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47C542;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_47C542;
    }
	mov(&ts->bl, 0x1);

loc_47C542:
	mov(&ts->ecx, 0x827E88);
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47C57C;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_430420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47C57C;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_430350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47C570;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_47C57C;
    }

loc_47C570:
	cmp(mv, &ts->eflags, x86::mem(0x82A3A4, 4), ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47C57C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47C581;

loc_47C57C:
	mov(&ts->eax, 0x1);

loc_47C581:
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xD8, 1), ts->al);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C59D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_46FA30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47C59D:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esi + 0xDC, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x447A0000);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->edi);
	game::sub_47BCC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x280, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_47C5DC;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_47C5DC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47C5E1;

loc_47C5DC:
	mov(&ts->eax, 0x1);

loc_47C5E1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x291, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20C, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x94, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	game::sub_45D560(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2B0, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_45D670(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	game::sub_470D50(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_470EE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->edx);
	game::sub_45D7E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0xBC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	pop(mv, &ts->esp, ts->ebp);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_47C6AC;
    }
	mov(&ts->al, 0x1);
	goto loc_47C6AE;

loc_47C6AC:
	xor_(&ts->al, ts->al);

loc_47C6AE:
	mov(mv, x86::mem(ts->ecx + 0x4C, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x54, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xD7, 1));
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47C79B;
    }
	mov(mv, &ts->ecx, x86::mem(0x82C5F4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47C737;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47C737;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47C737;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82C5E8);
	game::sub_5FA540(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x82C5E8);
	game::sub_5F0B80(ts, mv);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x82C5E8);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	game::sub_5F0B80(ts, mv);

loc_47C737:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, 0xC);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47C746;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47C760;
    }

loc_47C746:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x90, 4));
	dec(&ts->edx);
	neg(&ts->edx);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0x9);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edx);

loc_47C760:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED5D8, 4));
	cmp(&ts->eflags, ts->ecx, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47C777;
    }
	mov(&ts->ecx, 0x9);

loc_47C777:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.zero) {
        goto loc_47C793;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_47C793;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_45DB90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47C793:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4713F0(ts, mv);

loc_47C79B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C7A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47C7DD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47C7DD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_471D60;

loc_47C7DD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_471D60:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AB68);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47C7E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_471E40(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47C7F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47C7F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47C800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47C83D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47C83D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_471ED0;

loc_47C83D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_471ED0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78ABA0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47C840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78ABA0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_471F30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47C890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, 0x1);
	if (ts->eflags.zero) {
        goto loc_47C901;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C8C4;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47C901;
    }

loc_47C8C4:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C8FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C8D9;
    }
	game::sub_735550(ts, mv);

loc_47C8D9:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47C8FB:
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);

loc_47C901:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C964;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C927;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47C964;
    }

loc_47C927:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C95E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C93C;
    }
	game::sub_735550(ts, mv);

loc_47C93C:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47C95E:
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);

loc_47C964:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C9C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C98A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47C9C7;
    }

loc_47C98A:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C9C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C99F;
    }
	game::sub_735550(ts, mv);

loc_47C99F:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47C9C1:
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);

loc_47C9C7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CA2A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47C9ED;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47CA2A;
    }

loc_47C9ED:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CA24;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CA02;
    }
	game::sub_735550(ts, mv);

loc_47CA02:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47CA24:
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);

loc_47CA2A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x70, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47CA3C;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45E730(ts, mv);

loc_47CA3C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x71, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47CA4E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4720D0(ts, mv);

loc_47CA4E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x72, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47CA60;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4722B0(ts, mv);

loc_47CA60:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47CA70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x5C0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47CAAD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1C0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CAAD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_472480;

loc_47CAAD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_472480:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_45E350(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->dl, 0x1);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->dl);
	mov(mv, x86::mem(ts->esi, 4), 0x78AC10);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->ebx);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));

loc_472516:
	mov(mv, x86::mem(ts->eax - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	inc(&ts->ecx);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_472516;
    }
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x188, 4));
	mov(mv, x86::mem(ts->esi + 0x17C, 1), ts->dl);
	game::sub_579F20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x100, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47CAB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_472590(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47CAC8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47CAC8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47CAD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47CBDC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED3A4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47CB12;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	goto loc_47CB1C;

loc_47CB12:
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x0);

loc_47CB1C:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4726E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_472770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_47CBB9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CB64;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47CBDB;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45EFF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47CBDB;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47CB64:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED3A4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47CBDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x2);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_45EE70(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), 0x0);
	game::sub_472770(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_47CBB9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED3A4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47CBDB;
    }
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x1);

loc_47CBDB:
	pop(mv, &ts->esp, ts->edi);

loc_47CBDC:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47CBE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47CC1D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CC1D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4729D0;

loc_47CC1D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4729D0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78AC58);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE4, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47CC20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_472A50(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47CC38;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47CC38:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47CC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x500);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47CC7D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x100);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CC7D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_472C10;

loc_47CC7D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_472C10:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78ACB0);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xF4, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47CC80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78ACB0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_472CF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47CCD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax, 4));
	if (!ts->eflags.zero) {
        goto locret_47CCF3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x472CD0);
	add(&ts->eax, 0x14);
	push(mv, &ts->esp, ts->eax);
	game::sub_735680(ts, mv);

locret_47CCF3:
	retn(mv, &ts->esp);
}

void sub_47CD00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x50C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47CD3D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x10C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CD3D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_472D70;

loc_47CD3D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_472D70:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xE9, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78ACF8);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47CD40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78ACF8);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_473010(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47CD90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47CDA9;
    }
	game::sub_4735E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_45FAA0(ts, mv);

loc_47CDA9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47CDB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47D428;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CE95;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_45F940(ts, mv);
	mov(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->edx);
	game::sub_45F9D0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	add(&ts->esp, 0x8);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_47CE17;
    }
	sub(&ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_47CE10;
    }
	sub(&ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_47CE17;
    }

loc_47CE10:
	mov(&ts->ebp, 0x1);
	goto loc_47CE1A;

loc_47CE17:
	or_(&ts->ebp, 0xFFFFFFFF);

loc_47CE1A:
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CE2B;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_45FB00(ts, mv);
	goto loc_47CE6C;

loc_47CE2B:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CE62;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47CE40;
    }
	game::sub_735550(ts, mv);

loc_47CE40:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47CE62:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);

loc_47CE6C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xE8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47CE95;
    }
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CE86;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	goto loc_47CE8E;

loc_47CE86:
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CE95;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);

loc_47CE8E:
	mov(&ts->ecx, ts->esi);
	game::sub_4731C0(ts, mv);

loc_47CE95:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47CF5B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_45F940(ts, mv);
	mov(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->edx);
	game::sub_45F9D0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	add(&ts->esp, 0x8);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_47CEDC;
    }
	sub(&ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_47CED5;
    }
	sub(&ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_47CEDC;
    }

loc_47CED5:
	mov(&ts->ebp, 0x1);
	goto loc_47CEDF;

loc_47CEDC:
	or_(&ts->ebp, 0xFFFFFFFF);

loc_47CEDF:
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CEF0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_45FB00(ts, mv);
	goto loc_47CF32;

loc_47CEF0:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47CF28;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47CF05;
    }
	game::sub_735550(ts, mv);

loc_47CF05:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47CF28:
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x0);

loc_47CF32:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xE9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47CF5B;
    }
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CF4C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	goto loc_47CF54;

loc_47CF4C:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47CF5B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);

loc_47CF54:
	mov(&ts->ecx, ts->esi);
	game::sub_4731C0(ts, mv);

loc_47CF5B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	mov(mv, &ts->edi, x86::mem(0x7ECF4C, 4));
	imul(mv, &ts->edi, x86::mem(ts->esi + 0x100, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x108, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	imul(&ts->ecx, ts->edi);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x14, 1));
	sar(&ts->ecx, 0xF);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_47CF9B;
    }
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	goto loc_47CFBD;

loc_47CF9B:
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_47CFBB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47CFBB;
    }
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	goto loc_47CFBD;

loc_47CFBB:
	xor_(&ts->ebx, ts->ebx);

loc_47CFBD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xE8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_47CFCF;
    }
	xor_(&ts->ecx, ts->ecx);

loc_47CFCF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D04C;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47CFE1;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_47CFEE;

loc_47CFE1:
	cmp(&ts->eflags, ts->ecx, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47CFEE;
    }
	mov(&ts->ecx, 0x7FFF);

loc_47CFEE:
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D001;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D00E;

loc_47D001:
	cmp(&ts->eflags, ts->ebp, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D00E;
    }
	mov(&ts->eax, 0x1FFF);

loc_47D00E:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D028;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D034;

loc_47D028:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D034;
    }
	mov(&ts->eax, 0xFFFF);

loc_47D034:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D04C;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D04C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D0EF;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x100, 4));
	imul(mv, &ts->edi, x86::mem(0x7ECF5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D085;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D091;

loc_47D085:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D091;
    }
	mov(&ts->eax, 0x7FFF);

loc_47D091:
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D0A4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D0B1;

loc_47D0A4:
	cmp(&ts->eflags, ts->ebp, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D0B1;
    }
	mov(&ts->eax, 0x1FFF);

loc_47D0B1:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D0CB;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D0D7;

loc_47D0CB:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D0D7;
    }
	mov(&ts->eax, 0xFFFF);

loc_47D0D7:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D0EF;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D0EF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D165;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D165;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D165;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47D165;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1000);
	game::sub_45E3D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	game::sub_458230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D165;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D165:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D1BC;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47D184;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	goto loc_47D1BC;

loc_47D184:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	game::sub_47BB30(ts, mv);

loc_47D1BC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, &ts->edi, x86::mem(0x7ECF4C, 4));
	imul(mv, &ts->edi, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	imul(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xE9, 1));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x104, 4));
	sar(&ts->eax, 0xF);
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_47D1F9;
    }
	xor_(&ts->eax, ts->eax);

loc_47D1F9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D274;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D20B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D217;

loc_47D20B:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D217;
    }
	mov(&ts->eax, 0x7FFF);

loc_47D217:
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D22A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D237;

loc_47D22A:
	cmp(&ts->eflags, ts->ebp, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D237;
    }
	mov(&ts->eax, 0x1FFF);

loc_47D237:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D250;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D25C;

loc_47D250:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D25C;
    }
	mov(&ts->eax, 0xFFFF);

loc_47D25C:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D274;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D274:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D317;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x100, 4));
	imul(mv, &ts->edi, x86::mem(0x7ECF5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	sar(&ts->edi, 0xF);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	imul(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	sar(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D2AD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D2B9;

loc_47D2AD:
	cmp(&ts->eflags, ts->eax, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D2B9;
    }
	mov(&ts->eax, 0x7FFF);

loc_47D2B9:
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(&ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D2CC;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D2D9;

loc_47D2CC:
	cmp(&ts->eflags, ts->ebp, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D2D9;
    }
	mov(&ts->eax, 0x1FFF);

loc_47D2D9:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D2F3;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D2FF;

loc_47D2F3:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D2FF;
    }
	mov(&ts->eax, 0xFFFF);

loc_47D2FF:
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D317;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D317:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D38D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D38D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D38D;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47D38D;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1000);
	game::sub_45E3D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	game::sub_458230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D38D;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_47D38D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D3E4;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47D3AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	goto loc_47D3E4;

loc_47D3AC:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	game::sub_47BB30(ts, mv);

loc_47D3E4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_47D3F6;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_47D407;
    }

loc_47D3F6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D407;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x1);

loc_47D407:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_47D417;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_47D428;
    }

loc_47D417:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47D428;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x1);

loc_47D428:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_47D430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x5B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D46D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1B0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D46D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4738E0;

loc_47D46D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4738E0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x194, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78ADB8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47D470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78ADB8);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x194, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47D4E0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47D4B3;
    }
	game::sub_735550(ts, mv);

loc_47D4B3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x194, 4), 0x0);

loc_47D4E0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47D500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4C0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D53D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D53D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_473980;

loc_47D53D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_473980:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78AE00);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47D540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78AE00);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47D5A6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47D583;
    }
	game::sub_735550(ts, mv);

loc_47D583:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47D5A6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47D5D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x544);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D60D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x144);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D60D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_473A70;

loc_47D60D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_473A70:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78AE48);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x128, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(&ts->edi, 0x4);
	mov(&ts->edi, ts->edi);

loc_473AB0:
	mov(mv, x86::mem(ts->edx - 0x78, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	add(&ts->edx, 0x4);
	add(&ts->eax, 0xC);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_473AB0;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47D610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78AE48);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_473AE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47D660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_473C60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47D678;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47D678:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47D680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4C4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D6BD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D6BD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_473CE0;

loc_47D6BD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_473CE0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_473BF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82CB4C, 4));
	add(&ts->eax, 0x64);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x258);
	idiv(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x78AEE0);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x82CB4C, 4), ts->edx);
	add(&ts->edx, 0xFFFFFED4);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47D6C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_473D20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47D6D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47D6D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47D6E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x510);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D71D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x110);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D71D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_473D30;

loc_47D71D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_473D30:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_473BF0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78AF30);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(&ts->edx, 0x2);
	xor_(&ts->ecx, ts->ecx);
	goto loc_473D50;

loc_473D50:
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x18, 1), ts->cl);
	add(&ts->eax, 0x1C);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_473D50;
    }
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC8, 1), ts->cl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47D720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_473D90(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47D738;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47D738:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47D740(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_47D750:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47D762;
    }
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D774;
    }

loc_47D762:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_47D913;
    }
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D913;
    }

loc_47D774:
	mov(&ts->edx, ts->ebp);
	imul(&ts->edx, ts->edx, 0x1C);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx) + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->edx + (ts->ecx) + 0xCC, 4));
	if (!ts->eflags.zero) {
        goto loc_47D7CE;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D7CA;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D7CA;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_466750(ts, mv);
	goto loc_47D7CC;

loc_47D7CA:
	xor_(&ts->eax, ts->eax);

loc_47D7CC:
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_47D7CE:
	push(mv, &ts->esp, 0x8);
	game::sub_723124(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788898, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788894, 4));
	add(&ts->esp, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A5B0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fist(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fisubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sar(&ts->edx, 0x1F);
	sub(&ts->ecx, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->ecx*4) + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47D84F;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47D84C;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_47D84C:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);

loc_47D84F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47D89C;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x444);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47D897;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x44);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47D897;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_477800(ts, mv);
	goto loc_47D899;

loc_47D897:
	xor_(&ts->eax, ts->eax);

loc_47D899:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_47D89C:
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_47D8BC;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4) + 0xDC, 4));
	goto loc_47D8C9;

loc_47D8BC:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0xE4, 4));

loc_47D8C9:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_466770(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47D909;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_467160(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D909;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4778C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);

loc_47D909:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebp);
	goto loc_47D750;

loc_47D913:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_47D920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77261B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	game::sub_47D740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x78, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47D958;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xE0, 4));
	goto loc_47D96C;

loc_47D958:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_47D978;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xE0, 4), 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D978;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xFC, 4));

loc_47D96C:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D978;
    }
	mov(mv, x86::mem(ts->ebp + 0xC8, 1), 0x1);

loc_47D978:
	mov(mv, &ts->edx, x86::mem(0x850078, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x4);
	setnz(ts->eflags, &ts->cl);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x6C);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_47DA8B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47D9E6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47D9F0;

loc_47D9E6:
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47D9F0;
    }
	mov(&ts->eax, 0x3C);

loc_47D9F0:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47DA23;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_47DA2D;

loc_47DA23:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47DA2D;
    }
	mov(&ts->eax, 0x2);

loc_47DA2D:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C538);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47DA88;
    }
	push(mv, &ts->esp, 0x7EDE18);
	mov(&ts->ecx, 0x82C538);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x82C538);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_47DA88:
	pop(mv, &ts->esp, ts->ebx);
	goto loc_47DA8D;

loc_47DA8B:
	xor_(&ts->esi, ts->esi);

loc_47DA8D:
	mov(mv, x86::mem(ts->ebp + 0xB0, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47DACA;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x8, 2));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x48, 2), ts->ax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_47DACA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ebp + 0x48, 2), ts->di);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_772610:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_47D920:
	mov(&ts->eax, 0x7DEB8C);
	goto ___CxxFrameHandler;
}

void sub_47DAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x508);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47DB1D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x108);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47DB1D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4745B0;

loc_47DB1D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4745B0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78AF88);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(&ts->edx, 0x4);

loc_4745E7:
	mov(mv, x86::mem(ts->eax - 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	add(&ts->eax, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4745E7;
    }
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47DB20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebx, 4), 0x78AF88);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0xB8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x4);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_47DB60:
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_47DBA0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47DB77;
    }
	game::sub_735550(ts, mv);

loc_47DB77:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_47DBA0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esi, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47DB60;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0xC8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47DBE7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47DBC4;
    }
	game::sub_735550(ts, mv);

loc_47DBC4:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47DBE7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ebx + 0xC8, 4), 0x0);
	mov(mv, x86::mem(ts->ebx, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47DC10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77263B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47DD26;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47DCA6;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_474660(ts, mv);
	push(mv, &ts->esp, 0x1C);
	mov(mv, x86::mem(0x7EC844, 4), 0x78BC04);
	game::sub_457E20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47DC8F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_457F20(ts, mv);
	goto loc_47DC91;

loc_47DC8F:
	xor_(&ts->eax, ts->eax);

loc_47DC91:
	mov(mv, x86::mem(ts->esi + (ts->edi*4) + 0xB8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edi*4) + 0xCC, 4));
	mov(mv, x86::mem(ts->esi + (ts->edi*4) + 0xDC, 4), ts->eax);

loc_47DCA6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_47DCC0;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_47DCC6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47DCC6;
    }

loc_47DCC0:
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);

loc_47DCC6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_47DCE0;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_47DCE6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47DCE6;
    }

loc_47DCE0:
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);

loc_47DCE6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD4, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_47DD00;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_47DD06;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47DD06;
    }

loc_47DD00:
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);

loc_47DD06:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_47DD20;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_47DD26;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47DD26;
    }

loc_47DD20:
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->eax);

loc_47DD26:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x18);

loc_772630:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_47DC10:
	mov(&ts->eax, 0x7DEBB0);
	goto ___CxxFrameHandler;
}

void sub_47DD40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77265B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xA0, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_47DFB2;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xCC, 4));

loc_47DD76:
	mov(mv, &ts->eax, x86::mem(ts->edi - 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DDA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DDA7;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47DDA7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47DDA7;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_474660(ts, mv);

loc_47DDA7:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_5ED470(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x408, 1));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->ecx);
	inc(&ts->esi);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47DD76;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DE33;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DDF6;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_47DE33;
    }

loc_47DDF6:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DE2D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DE0B;
    }
	game::sub_735550(ts, mv);

loc_47DE0B:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_47DE2D:
	mov(mv, x86::mem(ts->ebp + 0xC8, 4), ts->ebx);

loc_47DE33:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0xF8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	goto loc_47DE50;

loc_47DE50:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DF07;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47DF07;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x7EC844, 4), 0x78BC14);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x14);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DEF7;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C550);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x6F54);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47DEF9;
    }
	push(mv, &ts->esp, 0x7EDDD8);
	mov(&ts->ecx, 0x82C550);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C550);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_47DEF9;

loc_47DEF7:
	xor_(&ts->esi, ts->esi);

loc_47DEF9:
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xC8, 4), ts->esi);

loc_47DF07:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47DE50;
    }
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0xCC, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_47DF30:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.zero) {
        goto def_47DF3C;
    }
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47DF3C;
    }
	jmp(x86::mem(0x47DFC8, 4));

def_47DF3C:
	inc(&ts->esi);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47DF30;
    }
	goto loc_47DFB0;

loc_47DF4E:
	mov(mv, &ts->edi, x86::mem(ts->ebp + (ts->esi*4) + 0xB8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->esi*4) + 0xCC, 4));
	mov(mv, x86::mem(ts->ebp + (ts->esi*4) + 0xDC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_47DFB0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47DF72;
    }
	game::sub_735550(ts, mv);

loc_47DF72:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->ebp + (ts->esi*4) + 0xB8, 4), ts->ebx);
	goto loc_47DFB0;

loc_47DF9D:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	goto loc_47DFA5;

loc_47DFA2:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);

loc_47DFA5:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_47DC10(ts, mv);

loc_47DFB0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_47DFB2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);

loc_772650:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_45FE80:
	mov(&ts->eax, 0x7DE95C);
	goto ___CxxFrameHandler;
}

void sub_47DFE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E01D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E01D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4746D0;

loc_47E01D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4746D0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xCC, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78AFD0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78AFD0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_474720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47E070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x518);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E0AD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x118);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E0AD;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_474930;

loc_47E0AD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_47E0B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4749D0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E0C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E0C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E0D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0xB4, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);

loc_47E0F2:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47E16E;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47E10D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ebx, 4), 0x0);
	goto loc_47E16E;

loc_47E10D:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x114, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47E123;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_47E123:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x1000);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_47E160;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47E166;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47E166;
    }

loc_47E160:
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_47E166:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_47BB30(ts, mv);

loc_47E16E:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47E203;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47E18F;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->ebx + 0x30, 4), 0x0);
	goto loc_47E203;

loc_47E18F:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x114, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx, 4));
	if (!ts->eflags.zero) {
        goto loc_47E1A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);

loc_47E1A7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0x1000);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_47E1F3;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47E1FA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47E1FA;
    }

loc_47E1F3:
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0x0);

loc_47E1FA:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_47BB30(ts, mv);

loc_47E203:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ebx, 0x4);
	add(&ts->esi, 0x14);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47E0F2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47E220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E25D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E25D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_474C60;

loc_47E25D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_474C60:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B078);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->al);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E260(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E29D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E29D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_474D10;

loc_47E29D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_474D10:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B0C0);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x7FFF);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x1000);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E2A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_474D80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E2B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E2B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E2C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x3C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E399;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E399;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1000);
	game::sub_45E3D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_47E313;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x47E3A8, 1));
	jmp(x86::mem(0x47E39C, 4));

loc_47E31A:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edi);

loc_47E33E:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edi);

def_47E313:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edi);
	game::sub_47BB30(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_47E399:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E3ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E3ED;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475050;

loc_47E3ED:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475050:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B110);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475080(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E408;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E408:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E44D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E44D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4750D0;

loc_47E44D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4750D0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B158);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E48D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E48D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475120;

loc_47E48D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475120:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B1A0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475150(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E4A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E4A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E4B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E4ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E4ED;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475210;

loc_47E4ED:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475210:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B1E8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E4F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E52D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E52D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475250;

loc_47E52D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475250:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 1), ts->al);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	mov(mv, x86::mem(ts->esi, 4), 0x78B230);
	mov(mv, x86::mem(0x82BC49, 1), ts->al);
	mov(mv, x86::mem(0x82BC48, 1), ts->al);
	mov(mv, x86::mem(0x82BC4A, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xB1, 1), ts->cl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4752A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E548;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E548:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E58D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E58D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475560;

loc_47E58D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475560:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B360);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475590(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E5A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E5A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E5B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4C0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E5ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E5ED;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4756F0;

loc_47E5ED:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4756F0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B3A8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E5F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475740(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E608;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E608:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E610(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4D8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E64D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E64D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475800;

loc_47E64D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475800:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45DD60(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78B3EC);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78A0B4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_47E6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4F4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E6DD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xF4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E6DD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475820;

loc_47E6DD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475820:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82CB64, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78B428);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	inc(&ts->edx);
	and_(&ts->edx, 0x80000001);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), ts->cl);
	if (!ts->eflags.sign) {
        goto loc_47588B;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_47588B:
	mov(mv, x86::mem(ts->esi + 0xC6, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xC5, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xEC, 1), ts->al);
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), 0x3A83126F);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(0x82BC50, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x82CB64, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E6E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_47E868;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	game::sub_46B100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47E80D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x550, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E84D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47E84D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47E84D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E84D;
    }
	mov(mv, &ts->eax, x86::mem(0x788870, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_475690(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E84D;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_475B30(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E84D;
    }
	push(mv, &ts->esp, 0x3F800000);
	game::sub_43C1F0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788884, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_47E7CB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788878, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BC50, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_47E7CB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ecx);
	goto loc_47E84D;

loc_47E7CB:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3);
	game::sub_43C1C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78887C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788880, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->edi, 0x5);
	mov(mv, x86::mem(ts->esi + 0xC5, 1), 0x1);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C1F0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788880, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	game::sub_4759C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	goto loc_47E84D;

loc_47E80D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x34, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47E832;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47E84D;
    }

loc_47E832:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47E84D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47E857;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_462480(ts, mv);

loc_47E84D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E868;
    }

loc_47E857:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_47E868;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4624E0(ts, mv);

loc_47E868:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E870(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4BC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47E8AD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xBC);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47E8AD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_475D60;

loc_47E8AD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_475D60:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B490);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47E8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475DB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E8C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E8C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E8D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47E972;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1000);
	game::sub_47BB30(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_462670(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788870, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_47E952;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47E96C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_47E952:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47E962;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47E972;
    }

loc_47E962:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47E96C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47E96C:
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);

loc_47E972:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_47E9A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47E9C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47E9B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47E9B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47E9C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78BC30);
	goto ??1ios_base@std@@UAE@XZ_6;
}

void sub_47E9D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47EA0D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47EA0D;
    }
	mov(&ts->ecx, ts->eax);
	goto sub_475F90;

loc_47EA0D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_47EA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__ios_base___ios_base_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47EA28;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47EA28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47EA30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xB4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47EA47;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47EA47:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->ebx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47EAB4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47EA7B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));

loc_47EA7B:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EABC;
    }
	mov(mv, &ts->esi, x86::mem(0x82CBF8, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47EA94;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47EA94:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78453C, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x56);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBF8, 4), ts->esi);
	goto loc_47EAED;

loc_47EAB4:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_47EA7B;

loc_47EABC:
	mov(mv, &ts->esi, x86::mem(0x82CBF4, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47EACF;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47EACF:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B06C, 4));
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x2);
	mov(&ts->edx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x4E);
	inc(&ts->esi);
	mov(mv, x86::mem(0x82CBF4, 4), ts->esi);

loc_47EAED:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47EB41;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47EB41;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_47EB43;

loc_47EB41:
	xor_(&ts->eax, ts->eax);

loc_47EB43:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	game::sub_46CDD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_459AC0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47EC46;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x58, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_47EC46;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xB8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47EB91;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47EB91:
	push(mv, &ts->esp, 0x42FE0000);
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->ebx);
	game::sub_43C1F0(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x82CBF0, 4));
	add(&ts->esp, 0x4);
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47EBB7;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47EBB7:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B06C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xD0, 4));
	add(&ts->eax, 0x2E);
	inc(&ts->esi);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(0x82CBF0, 4), ts->esi);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47EC2A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47EC2A;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_47EC2C;

loc_47EC2A:
	xor_(&ts->eax, ts->eax);

loc_47EC2C:
	mov(mv, x86::mem(ts->edi + 0xB8, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	game::sub_46CDD0(ts, mv);

loc_47EC46:
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_47EC60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47ED77;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47EC83;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_47EC83:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47ED3C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47ECB5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));

loc_47ECB5:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82CBFC, 4));
	and_(&ts->esi, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_47ECC9;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFFC);
	inc(&ts->esi);

loc_47ECC9:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BC74, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	shl(&ts->eax, 0x2);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xD0, 4));
	add(&ts->eax, 0x4E);
	inc(&ts->esi);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(0x82CBFC, 4), ts->esi);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47ED47;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47ED47;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_47ED49;

loc_47ED3C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_47ECB5;

loc_47ED47:
	xor_(&ts->eax, ts->eax);

loc_47ED49:
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	game::sub_46CDD0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);

loc_47ED77:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47ED80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47F0F7;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x390, 1));
	cmp(&ts->eflags, ts->cl, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x17, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x16, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x15, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EDC5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x391, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EDDA;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);

loc_47EDC5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x391, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EDDA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x392, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EDEF;
    }
	mov(mv, x86::mem(ts->esp + 0x16, 1), 0x1);

loc_47EDDA:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x392, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EDEF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x393, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EE00;
    }
	mov(mv, x86::mem(ts->esp + 0x15, 1), 0x1);

loc_47EDEF:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x393, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EE00;
    }
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EE00;
    }
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x1);

loc_47EE00:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47EE33;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x900, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47EE33;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xD8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EE33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xDC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xD8, 1), ts->bl);
	game::sub_47EC60(ts, mv);

loc_47EE33:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47EE7F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xB8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7ED564, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47EE7F;
    }
	game::sub_5EC1F0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47EE7F;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 1), 0x1);

loc_47EE7F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x390, 1));
	xor_(&ts->dl, ts->dl);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EEB8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x391, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EEB8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78888C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47EEB8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xBC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EEE3;
    }

loc_47EEB8:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x392, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EEF1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x393, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EEF1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78888C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_47EEF1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47EEF1;
    }

loc_47EEE3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47EEF9;
    }
	mov(&ts->dl, 0x1);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);

loc_47EEF1:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF38;
    }

loc_47EEF9:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF07;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xBC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF31;
    }

loc_47EF07:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x15, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF15;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF31;
    }

loc_47EF15:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x16, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF23;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xCC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF31;
    }

loc_47EF23:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x17, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EF38;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47EF38;
    }

loc_47EF31:
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	goto loc_47EF40;

loc_47EF38:
	cmp(&ts->eflags, ts->dl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EFBF;
    }

loc_47EF40:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x28, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_47EFAE;
    }
	xor_(&ts->edi, ts->edi);
	mov(&ts->edx, 0x28);

loc_47EF55:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->edi) + 0x184, 4));
	mov(&ts->ecx, 0x7F0B5C);
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0B6C, 4));
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F0B70, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, 0x4);
	add(&ts->edi, 0x20);
	cmp(&ts->eflags, ts->edx, 0x38);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47EF55;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BC78, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	goto loc_47EFB8;

loc_47EFAE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x42FE0000);

loc_47EFB8:
	mov(&ts->ecx, ts->esi);
	game::sub_47EA30(ts, mv);

loc_47EFBF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_5EC1F0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_47EFE5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47EFE5;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 1), ts->bl);

loc_47EFE5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x390, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F004;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x391, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F004;
    }
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x1);
	goto loc_47F02A;

loc_47F004:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xBC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F01B;
    }
	mov(mv, x86::mem(ts->esi + 0xBC, 1), ts->bl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));

loc_47F01B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));

loc_47F02A:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x392, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F046;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x393, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F046;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 1), 0x1);
	goto loc_47F06C;

loc_47F046:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F05D;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->bl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));

loc_47F05D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));

loc_47F06C:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x391, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F088;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x392, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F088;
    }
	mov(mv, x86::mem(ts->esi + 0xCC, 1), 0x1);
	goto loc_47F0AE;

loc_47F088:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xCC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F09F;
    }
	mov(mv, x86::mem(ts->esi + 0xCC, 1), ts->bl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));

loc_47F09F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD0, 4));

loc_47F0AE:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x390, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F0D1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x393, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F0D1;
    }
	mov(mv, x86::mem(ts->esi + 0xD4, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_47F0D1:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F0E8;
    }
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));

loc_47F0E8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));

loc_47F0F7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F100(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F190;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1000);
	if (!ts->eflags.zero) {
        goto loc_47F161;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F165;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47F165;
    }

loc_47F161:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);

loc_47F165:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_47BB30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47F190;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F18A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_47F18A:
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);

loc_47F190:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F213;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1000);
	if (!ts->eflags.zero) {
        goto loc_47F1E4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F1E8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47F1E8;
    }

loc_47F1E4:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);

loc_47F1E8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_47BB30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_47F213;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F20D;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_47F20D:
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);

loc_47F213:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F2A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1000);
	if (!ts->eflags.zero) {
        goto loc_47F269;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F26D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_47F26D;
    }

loc_47F269:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);

loc_47F26D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_47BB30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F293;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_47F2A3;
    }

loc_47F293:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47F29D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_47F29D:
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);

loc_47F2A3:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_47F2B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F2ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F2ED;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_47E980;

loc_47F2ED:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_47E980:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_475F90(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78BC30);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F2F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F32D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F32D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_476090;

loc_47F32D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_476090:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B530);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4760E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F348;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F348:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F38D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F38D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4761A0;

loc_47F38D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4761A0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B578);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4761F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F3A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F3A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F3B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F3ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F3ED;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4762C0;

loc_47F3ED:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4762C0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	mov(mv, x86::mem(ts->esi, 4), 0x78B5C0);
	mov(mv, x86::mem(0x82BC54, 1), ts->al);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x7ED638, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_476300(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F408;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F408:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47F470(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F468;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F468:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78BC80);
	goto sub_4764F0;
}

void sub_47F480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4BC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F4BD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xBC);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F4BD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4764B0;

loc_47F4BD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4764B0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B608);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F4C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4764F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F4D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F4D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F4E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4BC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F51D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xBC);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F51D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_47F410;

loc_47F51D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_47F410:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78BC80);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F520(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F55D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F55D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4766C0;

loc_47F55D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4766C0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_45E350(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x78B650);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_47F560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_476700(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F578;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F578:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x448);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F63A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x48);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F63A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_479170;

loc_47F63A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_479170:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78BA48);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47F640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_477060(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_47F658;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_47F658:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ebx, ts->ebx);

loc_47F667:
	mov(&ts->ecx, ts->ebx);
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F6BD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_476790(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47F6BD;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_47F6A3;
    }
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	goto loc_47F6BD;

loc_47F6A3:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47F6BA;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_47F6B0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47F6B0;
    }

loc_47F6BA:
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->edi);

loc_47F6BD:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x20);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F667;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_47F6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebx, ts->ecx);
	xor_(&ts->esi, ts->esi);
	goto loc_47F6E0;

loc_47F6E0:
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, ts->esi);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F6F5;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_476F80(ts, mv);

loc_47F6F5:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x20);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F6E0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_47F710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_47F75F;
    }

loc_47F723:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47F758;
    }

loc_47F732:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_476F80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47F732;
    }

loc_47F758:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_47F723;
    }

loc_47F75F:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47F7A2;
    }

loc_47F766:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_47F79B;
    }

loc_47F775:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_476F80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47F775;
    }

loc_47F79B:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_47F766;
    }

loc_47F7A2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_464A10;
}

void sub_47F7B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x448);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F7EA;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x48);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F7EA;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_476FF0;

loc_47F7EA:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_476FF0:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78B694);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47F7F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x43C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47F82A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47F82A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_477030;

loc_47F82A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_477030:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x78B6C4);
	retn(mv, &ts->esp);
}

void sub_47FB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x7ECB38);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ECB58);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ECB68);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED8C8);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED8D8);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED8E8);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED67C);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED784);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED8B8);
	mov(&ts->ecx, 0x82BEC4);
	game::sub_479130(ts, mv);
	retn(mv, &ts->esp);
}

void sub_47FC10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x470);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47FC4A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x70);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47FC4A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4770B0;

loc_47FC4A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4770B0:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78B6EC);
	mov(mv, x86::mem(ts->eax + 0x50, 4), 0x5);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_47FC50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_47FE72;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), 0x4D525453);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_47FE70;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x24, 4));
	mov(&ts->eax, ts->ecx);
	and_(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47FD1E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x20, 4));
	imul(&ts->eax, ts->eax, 0x128);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ebx), 4));
	add(&ts->eax, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_47FD1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_47FD1E;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.zero) {
        goto loc_47FD1E;
    }
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47FCD0;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_464F60(ts, mv);
	goto loc_47FD23;

loc_47FCD0:
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x4);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47FCE9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x124, 4));

loc_47FCE9:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47FD0D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_47FD0D;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x124, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->edi, ts->edx);
	goto loc_47FD23;

loc_47FD0D:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x60, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->edi, ts->eax);
	goto loc_47FD23;

loc_47FD1E:
	mov(&ts->ebx, 0x1);

loc_47FD23:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	game::sub_6F55E8(ts, mv);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47FE70;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47FE70;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	goto loc_47FD50;

loc_47FD48:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_47FD50:
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->ecx) + 0x8, 4));
	add(&ts->ebp, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47FE4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_47FD8D;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_47FD78;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry) {
        goto loc_47FD95;
    }

loc_47FD78:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_47FE19;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry) {
        goto loc_47FE4D;
    }
	goto loc_47FE49;

loc_47FD8D:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_47FD95;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_47FD78;
    }

loc_47FD95:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	shl(&ts->ecx, 0x18);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(&ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47FE4D;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_47FDB0:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47FDBE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x3C, 4));
	goto loc_47FE13;

loc_47FDBE:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->edi, ts->eax);
	and_(&ts->eax, 0xFF000000);
	and_(&ts->edi, 0xFFFFFF);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_47FE0D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esi, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	sub(&ts->edx, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edx);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_464E50(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx, 4), 0xFFFFFFFE);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);

loc_47FE0D:
	add(&ts->ebx, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));

loc_47FE13:
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47FDB0;
    }
	goto loc_47FE4D;

loc_47FE19:
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_47FE21;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.carry) {
        goto loc_47FE4D;
    }

loc_47FE21:
	push(mv, &ts->esp, ts->ebp);
	game::sub_465600(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_477760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47FE4D;
    }
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_47FE45;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry) {
        goto loc_47FE4D;
    }
	goto loc_47FE49;

loc_47FE45:
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_47FE21;
    }

loc_47FE49:
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.carry) {
        goto loc_47FE21;
    }

loc_47FE4D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	inc(&ts->eax);
	add(&ts->ebx, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47FD48;
    }

loc_47FE70:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_47FE72:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_47FE80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480029;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto loc_480028;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480028;
    }
	nop();

loc_47FEB0:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_47FEBD;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_47FECE;
    }

loc_47FEBD:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_47FC50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0x8);
	goto loc_47FEB0;

loc_47FECE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_47FF2A;
    }

loc_47FED6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_47FEE6;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edx);
	goto loc_47FEEC;

loc_47FEE6:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);

loc_47FEEC:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_47FEF9;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);
	goto loc_47FEFF;

loc_47FEF9:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);

loc_47FEFF:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x6C, 4));
	if (!ts->eflags.zero) {
        goto loc_47FF16;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_47FF13;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edx);
	goto loc_47FF16;

loc_47FF13:
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ecx);

loc_47FF16:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x68, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_47FED6;
    }

loc_47FF2A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_47FF52;
    }
	xor_(&ts->ecx, ts->ecx);
	nop();

loc_47FF40:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, x86::mem(ts->edx + (ts->ecx) + 0x8, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	inc(&ts->eax);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47FF40;
    }

loc_47FF52:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, ts->ebp);
	sub(&ts->edi, ts->edx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edi);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_47FFA7;
    }
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47FFA7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_47FFA7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_6F7745(ts, mv);
	add(&ts->esp, 0x8);

loc_47FFA7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x60, 4));
	if (ts->eflags.zero) {
        goto loc_47FFD7;
    }
	nop();

loc_47FFB0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_47FFBA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	goto loc_47FFD2;

loc_47FFBA:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	and_(&ts->ecx, 0xFFFFFF);
	mov(mv, x86::mem(ts->eax, 4), 0xFFFFFFFE);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	add(&ts->eax, ts->ecx);

loc_47FFD2:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x60, 4));
	if (!ts->eflags.zero) {
        goto loc_47FFB0;
    }

loc_47FFD7:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x44, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_480028;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x3C, 4));
	if (!ts->eflags.zero) {
        goto loc_47FFF7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_47FFF7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	and_(&ts->ecx, 0x3F);
	mov(&ts->eax, 0x40);
	sub(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (!ts->eflags.zero) {
        goto loc_48000B;
    }
	xor_(&ts->eax, ts->eax);

loc_48000B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->ecx, ts->edx);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);

loc_480028:
	pop(mv, &ts->esp, ts->esi);

loc_480029:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_480030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_477870(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_480048;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_480048:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->eax + 0x4, 2));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_477B60(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->edx, 0x10);
	and_(&ts->eax, 0x1FFF0000);
	and_(&ts->edx, 0xE000);
	or_(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	shl(&ts->eax, 0x8);
	or_(&ts->edx, ts->eax);
	or_(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4800B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480152;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_4800C6:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x78, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(&ts->ecx, ts->esi);
	game::sub_467C90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_467C40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480100;
    }

loc_4800E3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi*4), 4));
	mov(mv, &ts->eax, x86::mem(0x82AF4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	add(&ts->esp, 0x8);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4800E3;
    }

loc_480100:
	mov(&ts->ecx, ts->esi);
	game::sub_467D20(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_467D70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48012F;
    }
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);

loc_48012F:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(0x82AF48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4800C6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_480152:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x78, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_480170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, 0x9);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48024F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480236;
    }
	push(mv, &ts->esp, ts->ebx);

loc_480193:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480226;
    }
	game::sub_4800B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->ebp*4), 4));
	mov(&ts->ecx, ts->esi);
	game::sub_467C90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_467C40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4801E1;
    }

loc_4801C3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebx*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4801C3;
    }

loc_4801E1:
	mov(&ts->ecx, ts->esi);
	game::sub_467D20(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_467D70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_480210;
    }
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);

loc_480210:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->edx, x86::mem(0x82AF48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_480226:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480193;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_480236:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x38, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_48024F:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->esi*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480268;
    }
	game::sub_4800B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	mov(mv, x86::mem(ts->eax + (ts->esi*4), 4), 0x0);

loc_480268:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480316;
    }
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480316;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_477D10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480315;
    }
	push(mv, &ts->esp, ts->ebp);
	nop();

loc_4802B0:
	mov(mv, &ts->eax, x86::mem(0x82AF40, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4802D0;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A5B4);
	goto loc_4802D2;

loc_4802D0:
	xor_(&ts->eax, ts->eax);

loc_4802D2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edi*4), 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_479030(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x12, 1));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4802B0;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_480315:
	pop(mv, &ts->esp, ts->ebx);

loc_480316:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_480320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_480338;
    }
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_480338:
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xAC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x80, 4));
	shl(&ts->ecx, 0x4);
	add(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->edx*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	mov(mv, &ts->ebx, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480410;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xA0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x84, 4));
	add(&ts->ecx, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, x86::mem(ts->eax + 0xA0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480410;
    }
	goto loc_4803A1;

loc_48039F:
	xor_(&ts->edi, ts->edi);

loc_4803A1:
	mov(mv, &ts->ecx, x86::mem(0x82AF44, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4803CC;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78B720);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->edi);
	goto loc_4803CE;

loc_4803CC:
	xor_(&ts->eax, ts->eax);

loc_4803CE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edx + (ts->ebx*4), 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_479030(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x12, 1));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48039F;
    }

loc_480410:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_480420(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480853;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	goto loc_480454;

loc_48044E:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->edi, ts->edi);

loc_480454:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + (ts->ebp), 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(&ts->ecx, ts->eax);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4804EA;
    }
	and_(&ts->ecx, 0xFFFFFFF0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4804A0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0xFFFFFFF0);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4804D8;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4804D0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);
	mov(mv, x86::mem(ts->ebx + 0x48, 4), ts->edx);

loc_4804D0:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x38, 4));
	if (ts->eflags.zero) {
        goto loc_4804EA;
    }
	goto loc_4804E2;

loc_4804D8:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4804E2;
    }
	inc(mv, x86::mem(ts->esp + 0x20, 4));

loc_4804E2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4804A0;
    }

loc_4804EA:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	and_(&ts->eax, 0xFF000000);
	cmp(&ts->eflags, ts->eax, 0xC0000000);
	if (!ts->eflags.zero) {
        goto loc_480507;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	shl(&ts->ecx, 0x6);
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), ts->ecx);

loc_480507:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ebx + 0x50, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	and_(&ts->edx, 0xF);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4) + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48056B;
    }
	mov(&ts->edx, ts->eax);

loc_480525:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0xE0000000);
	cmp(&ts->eflags, ts->ecx, 0x80000000);
	if (!ts->eflags.zero) {
        goto loc_480548;
    }
	inc(mv, x86::mem(ts->esp + 0x1C, 4));
	goto loc_480568;

loc_480548:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48055D;
    }
	inc(mv, x86::mem(ts->esp + 0x18, 4));
	goto loc_480568;

loc_48055D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0x4, 4));
	add(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);

loc_480568:
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_480525;
    }

loc_48056B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebp), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78BDC4);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp), 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78BD98);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp), 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xA4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x78, 4));
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xA4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ebp), 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4805F0;
    }
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx*4), 4));
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edx);
	goto loc_4805F7;

loc_4805F0:
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x0);

loc_4805F7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480605;
    }
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);

loc_480605:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebp), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebp), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	and_(&ts->eax, 0xE0FFFFFF);
	shl(&ts->edi, 0xB);
	or_(&ts->eax, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_468F70(ts, mv);
	mov(&ts->ebp, ts->eax);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48080D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4806B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->ecx, 0x4);
	and_(&ts->eax, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480832;
    }
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);

loc_480671:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->edi), 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	mov(&ts->edx, ts->eax);
	sar(&ts->edx, 0x18);
	sar(&ts->eax, 0x10);
	and_(&ts->edx, 0xF);
	and_(&ts->eax, 0xF);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->edx*4), 4));
	mov(mv, x86::mem(ts->ebp + (ts->eax*4) + 0x58, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->ebp + 0x98, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_480671;
    }
	goto loc_480832;

loc_4806B9:
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480787;
    }

loc_4806C5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	shl(&ts->edi, 0xB);
	or_(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78BD74);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	add(&ts->esp, 0x10);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480712;
    }

loc_4806F7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_480802;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4806F7;
    }

loc_480712:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	and_(&ts->edi, 0xFF);
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->edi*4), 4));

loc_48071E:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_480783;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->edx + (ts->ecx*4), 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi, 4));
	and_(&ts->eax, 0xFFFFF0);
	or_(&ts->eax, 0x60000000);
	push(mv, &ts->esp, ts->eax);
	game::sub_468FE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx), 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4806C5;
    }

loc_480783:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));

loc_480787:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	and_(&ts->eax, 0xF);
	add(&ts->ecx, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4807D2;
    }
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4807A0:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->edx, 0x18);
	sar(&ts->eax, 0x10);
	and_(&ts->edx, 0xF);
	and_(&ts->eax, 0xF);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->edx*4), 4));
	mov(mv, x86::mem(ts->ebp + (ts->eax*4) + 0x58, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x98, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4807A0;
    }

loc_4807D2:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78BD4C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax), 4));
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->edi);
	goto loc_48082F;

loc_480802:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->ebx*4), 4));
	goto loc_48071E;

loc_48080D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78BD24);
	push(mv, &ts->esp, ts->edi);
	game::sub_4691C0(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), ts->edi);

loc_48082F:
	add(&ts->esp, 0x10);

loc_480832:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48044E;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_480853:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);
}

void sub_480860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48090A;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_480876:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi*4), 4));
	mov(mv, &ts->ecx, x86::mem(0x82BC80, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78BE48);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x82BC80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78BE28);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4808DA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_478240(ts, mv);

loc_4808DA:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x82BC80, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78BE00);
	push(mv, &ts->esp, ts->eax);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480876;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_48090A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480910(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0xE0000000);
	cmp(&ts->eflags, ts->eax, 0x80000000);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480992;
    }
	cmp(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_480966;
    }
	cmp(&ts->eflags, ts->eax, 0x60000000);
	if (!ts->eflags.zero) {
        goto loc_4809B9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	and_(&ts->ecx, 0xE0FFFFF0);
	shl(&ts->eax, 0xB);
	or_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_468FE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4809B9;
    }
	and_(&ts->edi, 0xF);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edi*4) + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_480966:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(&ts->eax, ts->edi);
	shl(&ts->edx, 0xB);
	and_(&ts->eax, 0xE0FFFFFF);
	or_(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_468F70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4809B9;
    }
	and_(&ts->edi, 0xF);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edi*4) + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_480992:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4809B9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4809A0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4809C4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4809A0;
    }

loc_4809B9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x7EDE80);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4809C4:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4809E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->eax, ts->esi);
	and_(&ts->eax, 0xE0000000);
	cmp(&ts->eflags, ts->eax, 0x20000000);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_480AA7;
    }
	if (ts->eflags.zero) {
        goto loc_480A56;
    }
	cmp(&ts->eflags, ts->eax, 0x80000000);
	if (ts->eflags.zero) {
        goto loc_480A2E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_480B02;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	and_(&ts->esi, 0xFF);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_480A2E:
	and_(&ts->esi, 0xF00F00FF);
	push(mv, &ts->esp, ts->esi);
	game::sub_467BF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480B02;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_480A56:
	test(&ts->eflags, ts->esi, 0x10000);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0xE, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	if (!ts->eflags.zero) {
        goto loc_480A8D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x34, 4));
	and_(&ts->esi, 0xFF);
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi*4), 4));
	add(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_480A8D:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	and_(&ts->esi, 0xFF);
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi*4), 4));
	add(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_480AA7:
	cmp(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_480AD3;
    }
	cmp(&ts->eflags, ts->eax, 0x60000000);
	if (!ts->eflags.zero) {
        goto loc_480B02;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x50, 4));
	mov(&ts->ecx, ts->esi);
	and_(&ts->ecx, 0xE0FFFFF0);
	shl(&ts->eax, 0xB);
	or_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_468FE0(ts, mv);
	goto loc_480AEF;

loc_480AD3:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x50, 4));
	shl(&ts->ecx, 0xB);
	mov(&ts->edx, ts->esi);
	and_(&ts->edx, 0xE0FFFFFF);
	or_(&ts->ecx, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_468F70(ts, mv);

loc_480AEF:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480B02;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	and_(&ts->esi, 0xF);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*4) + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_480B02:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480B21;
    }
	push(mv, &ts->esp, 0x9);
	game::sub_480170(ts, mv);

loc_480B21:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480B4E;
    }
	game::sub_467510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480B3C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax, 4));
	goto loc_480B3E;

loc_480B3C:
	xor_(&ts->eax, ts->eax);

loc_480B3E:
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);

loc_480B4E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480B65;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);

loc_480B65:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_480B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_46A080(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78BE90);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_480B90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_480BB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_480BA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_480BA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480BB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78BE90);
	goto sub_479880;
}

void sub_480BC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_46A080(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78BEE0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_480BE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_480C00(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_480BF8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_480BF8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480C00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78BEE0);
	goto sub_479880;
}

void sub_480C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_480C1F;
    }
	goto loc_47AF90;

locret_480C1F:
	retn(mv, &ts->esp, 0x4);

loc_47AF90:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ebp, 0x1B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_47B073;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_47AFC7;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);

loc_47AFC7:
	mov(mv, &ts->edx, x86::mem(0x82B974, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x17C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_739320(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_7399E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(0x82B974, 4));
	add(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + 0x18, 4), 0x0);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	add(&ts->esp, 0x8);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_723E9D(ts, mv);
	game::sub_721FA7(ts, mv);
	mov(&ts->ecx, ts->ebp);
	shl(&ts->ecx, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x7ECD80, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4AC9F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78BB6C);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xA4, 1), 0x1);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), 0x5);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_47B073;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_47AC50(ts, mv);

loc_47B073:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_480C30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_480C46;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_47AC50(ts, mv);

locret_480C46:
	retn(mv, &ts->esp, 0x4);
}

void sub_480C50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_480CA1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_480CA1;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480CA1;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480CA1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);

loc_480CA1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_480CB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_480D1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_480D1B;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x6);
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_480D1B;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480D1B;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_480D1B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_46C800(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);

loc_480D1B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_480D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480E50;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480D42;
    }
	game::sub_46C860(ts, mv);

loc_480D42:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xA0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480D8A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC0, 4));
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (ts->eflags.zero) {
        goto loc_480D8A;
    }
	mov(mv, x86::mem(ts->eax + 0xC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC0, 4), 0xB);
	cmp(mv, &ts->eflags, x86::mem(0x82B974, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480D8A;
    }
	mov(mv, x86::mem(ts->eax + 0xA5, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_480D8A:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0xA8, 4));
	mov(&ts->edi, 0x9);

loc_480D97:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480DA2;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_480DA2:
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_480D97;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xCC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480DB7;
    }
	game::sub_480B10(ts, mv);

loc_480DB7:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x74, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480DC7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ebp + 0x74, 4), ts->ebx);

loc_480DC7:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480DD7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->ebp + 0x78, 4), ts->ebx);

loc_480DD7:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x28, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480E47;
    }
	mov(&ts->esi, 0x82B0B0);
	mov(&ts->ebx, 0x6);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_480DF0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_480E3C;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x18, 4));
	mov(mv, x86::mem(0x82B920, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7211AB(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480E22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_480E22:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_480E3C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi - 0x4, 4), 0x0);

loc_480E3C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x28, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x2C);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480DF0;
    }

loc_480E47:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_6F56BD;

loc_480E50:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_480EB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481076;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(0x82B90C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_480ED8;
    }
	game::sub_46C860(ts, mv);

loc_480ED8:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xA0, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_480F3B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_480F3B;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0xA);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480F3B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_480F2C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	add(&ts->esp, 0x8);

loc_480F2C:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_480F3B:
	game::sub_6F56BD(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xCC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480F4F;
    }
	game::sub_480B10(ts, mv);

loc_480F4F:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xA8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480F66;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));

loc_480F66:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x28, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_480FC5;
    }
	mov(&ts->esi, 0x82B0B0);

loc_480F74:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_480FBA;
    }
	mov(&ts->edx, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x82B920, 4), ts->ecx);
	game::sub_7211AB(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480FA4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);

loc_480FA4:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_480FBA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ebx);

loc_480FBA:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x28, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x2C);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_480F74;
    }

loc_480FC5:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x6);
	mov(&ts->edi, 0x82A5A0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(0x7ED928, 4), 0x82A5A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xDC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_480FF8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0xDC, 4), ts->ebx);

loc_480FF8:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xE0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481011;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0xE0, 4), ts->ebx);

loc_481011:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xE4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48102A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0xE4, 4), ts->ebx);

loc_48102A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xE8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481043;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0xE8, 4), ts->ebx);

loc_481043:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481053;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ebp + 0x78, 4), ts->ebx);

loc_481053:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x3C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48106F;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x3C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48106C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_48106C:
	mov(mv, x86::mem(ts->ebp + 0x3C, 4), ts->ebx);

loc_48106F:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_6F56BD;

loc_481076:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_481080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4810D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4810D1;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4810D1;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4810D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);

loc_4810D1:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4810E1;
    }
	goto sub_46C8D0;

locret_4810E1:
	retn(mv, &ts->esp);
}

void sub_4810F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481112;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->edi + 0x14, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_48110E;
    }
	mov(mv, x86::mem(ts->edi + 0x15, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_48110E:
	mov(mv, x86::mem(ts->edi + 0x15, 1), 0x0);

loc_481112:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ebp, 0xD);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_481189;
    }
	cmp(&ts->eflags, ts->ebp, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48112A;
    }
	cmp(&ts->eflags, ts->ebp, 0x13);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_481189;
    }

loc_48112A:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48117A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_48117A;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48117A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48117A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);

loc_48117A:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481189;
    }
	game::sub_46C8D0(ts, mv);

loc_481189:
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4811ED;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4811DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4811DE;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4811DE;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4811DE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);

loc_4811DE:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4811ED;
    }
	game::sub_46C8D0(ts, mv);

loc_4811ED:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x13, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x5C, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_481210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_48122E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x15, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_48122E;
    }
	mov(mv, x86::mem(ts->esi + 0x15, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_48122E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x13, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4813C1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4812C7;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xA0, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x6);
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481434;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_46C800(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4812C7:
	cmp(mv, &ts->eflags, x86::mem(0x8900D8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4813A0;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4813A0;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4812F8;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_4812F8;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_481434;
    }

loc_4812F8:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48133D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x14, 1), ts->bl);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48131D;
    }
	game::sub_736610(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	game::sub_46C9D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));

loc_48131D:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x14, 1), ts->bl);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481337;
    }
	game::sub_736610(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_46C9D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));

loc_481337:
	game::sub_46C930(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_48133D:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xA0, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	cmp(mv, &ts->eflags, x86::mem(0x82AFB0, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_481434;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4813A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	cmp(&ts->eflags, ts->eax, 0x12);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7);
	game::sub_47AC50(ts, mv);
	goto loc_481425;

loc_4813C1:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xA0, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x6);
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481425;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_481425;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_46C800(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);

loc_481425:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481434;
    }
	game::sub_46C930(ts, mv);

loc_481434:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_481440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48147C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481472;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_47AC50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	game::sub_47AF40(ts, mv);

loc_481472:
	mov(mv, x86::mem(0x82B8B8, 4), 0x0);

loc_48147C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_481480(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_481494;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto sub_480D20;

locret_481494:
	retn(mv, &ts->esp);
}

void sub_4814A0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_4814B4;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto sub_480EB0;

locret_4814B4:
	retn(mv, &ts->esp);
}

void sub_4814C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4814D4;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto loc_480E60;

locret_4814D4:
	retn(mv, &ts->esp);

loc_480E60:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(0x82B90C, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_480E77;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));

loc_480E77:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480E86;
    }
	game::sub_480B10(ts, mv);

loc_480E86:
	add(&ts->esi, 0xAC);
	mov(&ts->edi, 0x8);

loc_480E91:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_480E9C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_480E9C:
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_480E91;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4814E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4814F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x3C, 4));
	goto loc_4797B0;

locret_4814F1:
	retn(mv, &ts->esp, 0x4);

loc_4797B0:
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_479871;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4797D9;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_4797DB;

loc_4797D9:
	xor_(&ts->esi, ts->esi);

loc_4797DB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	nop();

loc_4797E0:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4797E9;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x10, 4));
	goto loc_4797EB;

loc_4797E9:
	xor_(&ts->eax, ts->eax);

loc_4797EB:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_47986F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_479802;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_479812;
    }

loc_479802:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_47980E;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_4797E0;

loc_47980E:
	xor_(&ts->esi, ts->esi);
	goto loc_4797E0;

loc_479812:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_479821;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));

loc_479821:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x132, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47986F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47986F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x133, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47986F;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_469DB0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_47986F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_479868;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_479770(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_479868:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));

loc_47986F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_479871:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_481500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48151D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4815A1;
    }

loc_48151D:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xD0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x45C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_481575;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481575;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_45B1F0(ts, mv);
	goto loc_481577;

loc_481575:
	xor_(&ts->eax, ts->eax);

loc_481577:
	mov(mv, x86::mem(ts->esi + (ts->ebx*4) + 0x28, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	goto sub_46CDD0;

loc_4815A1:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4815B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->edi, 0x2);
	xor_(&ts->ebx, ts->ebx);
	nop();

loc_4815C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481608;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4815DD;
    }
	mov(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4815D8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4815D8:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	goto loc_481608;

loc_4815DD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_47BB30(ts, mv);

loc_481608:
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4815C0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772678);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78BF30);
	push(mv, &ts->esp, 0x4699A0);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_5E5390(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_479710(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772670:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_479710;

??1strstreambuf@std@@UAE@XZ_0_SEH:
	mov(&ts->eax, 0x7DEBD4);
	goto ___CxxFrameHandler;
}

void sub_4816E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x448);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48171A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x48);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48171A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_4795D0;

loc_48171A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4795D0:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78BA78);
	mov(mv, x86::mem(ts->eax + 0x44, 1), ts->cl);
	retn(mv, &ts->esp);
}

void sub_481760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78BF88);
	goto sub_479710;
}

void sub_4817B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_479710(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4817C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4817C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7726A3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x78BFE0);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	game::sub_479100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_48182C;
    }

loc_481813:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_481813;
    }

loc_48182C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772690:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

loc_772698:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4835C0;

SEH_4817D0:
	mov(&ts->eax, 0x7DEC00);
	goto ___CxxFrameHandler;
}

void sub_481850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7726C0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481BBD;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B950, 4));
	add(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x7ECBC8, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4818B4;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_481B7B;
    }

loc_4818A1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4818A1;
    }
	goto loc_481B7B;

loc_4818B4:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_481925;
    }
	goto loc_4818F0;

loc_4818F0:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x128, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_48191F;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48190A;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_48190C;

loc_48190A:
	xor_(&ts->eax, ts->eax);

loc_48190C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_48191F:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4818F0;
    }

loc_481925:
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));

loc_481928:
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4819A6;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edx, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_481940:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_48195B;
    }
	goto loc_481950;

loc_481950:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_481974;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_481950;
    }

loc_48195B:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_481972;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xA8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xA8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_481974;
    }

loc_481972:
	mov(&ts->edi, ts->ecx);

loc_481974:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_481940;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4819A6;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48198F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_481991;

loc_48198F:
	xor_(&ts->eax, ts->eax);

loc_481991:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	goto loc_481928;

loc_4819A6:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	add(&ts->ebx, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4819B9;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_4819C0;

loc_4819B9:
	xor_(&ts->esi, ts->esi);
	goto loc_4819C0;

loc_4819C0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4819C9;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x10, 4));
	goto loc_4819CB;

loc_4819C9:
	xor_(&ts->eax, ts->eax);

loc_4819CB:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481A07;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x128, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4819FB;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4819E6;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	goto loc_4819E8;

loc_4819E6:
	xor_(&ts->eax, ts->eax);

loc_4819E8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_4819FB:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4819B9;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_4819C0;

loc_481A07:
	mov(mv, &ts->edi, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_481A12;
    }
	add(&ts->edi, 0xFFFFFFF0);
	goto loc_481A14;

loc_481A12:
	xor_(&ts->edi, ts->edi);

loc_481A14:
	xor_(&ts->ebp, ts->ebp);

loc_481A16:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481A1F;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x10, 4));
	goto loc_481A21;

loc_481A1F:
	xor_(&ts->eax, ts->eax);

loc_481A21:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481A6E;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481A41;
    }

loc_481A36:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_481A5A;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_481A36;
    }

loc_481A41:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_481A58;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xA8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xA8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_481A5A;
    }

loc_481A58:
	mov(&ts->ebp, ts->edi);

loc_481A5A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_481A6A;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x10, 4));
	goto loc_481A16;

loc_481A6A:
	xor_(&ts->edi, ts->edi);
	goto loc_481A16;

loc_481A6E:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_481A9A;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481A80;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_481A82;

loc_481A80:
	xor_(&ts->eax, ts->eax);

loc_481A82:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	goto loc_481A14;

loc_481A9A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x1);
	xor_(&ts->bl, ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_481AB0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x128, 1));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->al, 0x1);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x128, 1));
	if (ts->eflags.zero) {
        goto loc_481AED;
    }
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_481B28;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x0);
	dec(mv, x86::mem(0x82B950, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(&ts->bl, 0x1);
	goto loc_481B2C;

loc_481AED:
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_481B23;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xA8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_481B28;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x132, 1), 0x0);
	dec(mv, x86::mem(0x82B950, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(&ts->bl, 0x1);
	goto loc_481B2C;

loc_481B23:
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x0);

loc_481B28:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_481B58;
    }

loc_481B2C:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_481B58;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481B58;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x17, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481AB0;
    }

loc_481B58:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x0);
	game::sub_4835C0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0xFFFFFFFF);
	game::sub_4835C0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_481B7B:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_481BA0;
    }

loc_481B85:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_481B85;
    }

loc_481BA0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_481BAC;
    }

loc_481BA6:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_481BA6;
    }

loc_481BAC:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	game::sub_43BE80(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);

loc_481BBD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7726B0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4835C0;

loc_7726B8:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	goto sub_4835C0;

SEH_481850:
	mov(&ts->eax, 0x7DEC2C);
	goto ___CxxFrameHandler;
}

void sub_481BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_481850(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_481BEA;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x10, 4));
	goto loc_481BEC;

loc_481BEA:
	xor_(&ts->esi, ts->esi);

loc_481BEC:
	xor_(&ts->ebp, ts->ebp);
	mov(&ts->edi, ts->edi);

loc_481BF0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_481BF9;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x10, 4));
	goto loc_481BFB;

loc_481BF9:
	xor_(&ts->eax, ts->eax);

loc_481BFB:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481CAD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481C47;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	movzx(mv, &ts->edx, x86::mem(ts->edx + 0x9, 1));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_481C43;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_481C30:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481C3D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_481C3D;
    }
	inc(&ts->edi);

loc_481C3D:
	add(&ts->ecx, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_481C30;
    }

loc_481C43:
	mov(&ts->eax, ts->edi);
	goto loc_481C49;

loc_481C47:
	xor_(&ts->eax, ts->eax);

loc_481C49:
	add(&ts->ebp, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x132, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481C97;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x134, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481C97;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_481C97;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481C75;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x10, 4));
	goto loc_481C77;

loc_481C75:
	xor_(&ts->edi, ts->edi);

loc_481C77:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	dec(mv, x86::mem(0x82B944, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(&ts->esi, ts->edi);
	goto loc_481BF0;

loc_481C97:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_481CA6;
    }
	add(&ts->esi, 0xFFFFFFF0);
	goto loc_481BF0;

loc_481CA6:
	xor_(&ts->esi, ts->esi);
	goto loc_481BF0;

loc_481CAD:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(0x82B958, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_481CBB;
    }
	mov(mv, x86::mem(0x82B958, 4), ts->ebp);

loc_481CBB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_481CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772720);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_481E2D;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_481E2D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_481D14;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax - 0x10, 4));
	goto loc_481D16;

loc_481D14:
	xor_(&ts->edx, ts->edx);

loc_481D16:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_481D4B;
    }

loc_481D20:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481D29;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_481D30;

loc_481D29:
	xor_(&ts->eax, ts->eax);
	goto loc_481D30;

loc_481D30:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_481D39;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x10, 4));
	goto loc_481D3B;

loc_481D39:
	xor_(&ts->edx, ts->edx);

loc_481D3B:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_481D4B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_481D49;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_481D20;

loc_481D49:
	mov(&ts->bl, 0x1);

loc_481D4B:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0xA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_481E2D;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_481E2D;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_459680(ts, mv);
	add(&ts->esp, 0x4);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_481DD8;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_481DB2;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_481D8C;
    }
	push(mv, &ts->esp, 0x140);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	goto loc_481DF1;

loc_481D8C:
	push(mv, &ts->esp, 0x160);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_481DFE;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_47A960(ts, mv);
	goto loc_481E00;

loc_481DB2:
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_481DFE;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_480B70(ts, mv);
	goto loc_481E00;

loc_481DD8:
	push(mv, &ts->esp, 0x140);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);

loc_481DF1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481DFE;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_480BC0(ts, mv);
	goto loc_481E00;

loc_481DFE:
	xor_(&ts->eax, ts->eax);

loc_481E00:
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->eax, 0x10);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x82B944, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B948, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(0x82B944, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_481E2D;
    }
	mov(mv, x86::mem(0x82B948, 4), ts->eax);

loc_481E2D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_7726D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78C040);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7726E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78C024);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7726F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78C008);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77270C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78BFF0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_481CD0:
	mov(&ts->eax, 0x7DEC68);
	goto ___CxxFrameHandler;
}

void sub_481EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_479880(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_481F08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_481F08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_481F10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_481FA0;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481F30;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x21, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_481F3B;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_481F3B;
    }

loc_481F30:
	mov(&ts->ecx, ts->esi);
	game::sub_46A460(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x22, 1), 0x0);

loc_481F3B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_481F5C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481F55;
    }
	game::sub_4595D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_481F5C;
    }

loc_481F55:
	mov(&ts->ecx, ts->esi);
	game::sub_46A1A0(ts, mv);

loc_481F5C:
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481F80;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x132, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_481F80;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x1000);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));

loc_481F80:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_479970(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x135, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_481F9F;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_46A3A0(ts, mv);

loc_481F9F:
	pop(mv, &ts->esp, ts->edi);

loc_481FA0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_481FB0(x86::thread_state* ts, x86::memory_view* mv) {
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_47BB30(ts, mv);
	retn(mv, &ts->esp);
}

void sub_481FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_481F10(ts, mv);
	xor_(&ts->ebp, ts->ebp);

loc_481FE1:
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4820F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_482015;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_735070(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_482107;
    }

loc_482015:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xC0, 4));
	imul(mv, &ts->esi, x86::mem(0x7ECF90, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x128, 1));
	sar(&ts->esi, 0xF);
	test(&ts->eflags, ts->al, 0x10);
	if (ts->eflags.zero) {
        goto loc_482058;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x11C, 4));
	mov(&ts->ecx, 0x82BCD0);
	mov(mv, x86::mem(0x82BCE0, 4), ts->edx);
	game::sub_4599E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82BCE4, 4));
	game::__ftol2(ts, mv);
	imul(&ts->eax, ts->esi);
	sar(&ts->eax, 0xF);
	mov(&ts->esi, ts->eax);

loc_482058:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	mov(&ts->eax, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_482069;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_482076;

loc_482069:
	cmp(&ts->eflags, ts->esi, 0x7FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_482076;
    }
	mov(&ts->eax, 0x7FFF);

loc_482076:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48208E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_48209A;

loc_48208E:
	cmp(&ts->eflags, ts->eax, 0xFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48209A;
    }
	mov(&ts->eax, 0xFFFF);

loc_48209A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(&ts->eax, 0xBB8);
	if (!ts->eflags.zero) {
        goto loc_4820AD;
    }
	mov(&ts->eax, 0x7D0);
	goto loc_4820C3;

loc_4820AD:
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4820B9;
    }
	mov(&ts->eax, 0xFA0);
	goto loc_4820C3;

loc_4820B9:
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4820C3;
    }
	mov(&ts->eax, 0x1B58);

loc_4820C3:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4820D2;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4820DE;

loc_4820D2:
	cmp(&ts->eflags, ts->eax, 0x1FFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4820DE;
    }
	mov(&ts->eax, 0x1FFF);

loc_4820DE:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4820F7;
    }
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_735580(ts, mv);

loc_4820F7:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_481FE1;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_482107:
	mov(mv, &ts->esi, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_482140;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48211D;
    }
	game::sub_735550(ts, mv);

loc_48211D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	game::sub_734E60(ts, mv);

loc_482140:
	mov(mv, x86::mem(ts->edi + (ts->ebp*4) + 0x14C, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_482160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47A990(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_482178;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_482178:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_482180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48233F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48233F;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48233F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48233F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_48233F;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_482243;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_482221;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482221;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48220F;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_48220F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	goto loc_4822DD;

loc_482221:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48223C;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_48223C:
	push(mv, &ts->esp, 0x0);
	goto loc_4822D0;

loc_482243:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4822B4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4822B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4822B4;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_401910(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4822B4;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_4018F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4822B4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4822A6;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_4822A6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	goto loc_4822DD;

loc_4822B4:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1B);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4822CF;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);

loc_4822CF:
	push(mv, &ts->esp, ts->ebx);

loc_4822D0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x38, 4));
	xor_(&ts->bl, ts->bl);

loc_4822DD:
	mov(&ts->ecx, ts->eax);
	sar(&ts->ecx, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	add(&ts->ecx, 0x4);
	game::sub_46C800(ts, mv);
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48230C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_47B260(ts, mv);
	goto loc_482325;

loc_48230C:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_47B080(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_482324;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_47B260(ts, mv);

loc_482324:
	pop(mv, &ts->esp, ts->edi);

loc_482325:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	push(mv, &ts->esp, 0x0);
	sar(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_46C800(ts, mv);

loc_48233F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_482350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82B898, 4));
	push(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(0x82BA04, 1));
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_482388;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48272C;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82BA04, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_482388:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48239A;
    }
	mov(mv, x86::mem(0x82BA04, 1), 0x0);

loc_48239A:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_482409;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	cmp(&ts->eflags, ts->eax, 0x11);
	if (ts->eflags.zero) {
        goto loc_482409;
    }
	cmp(&ts->eflags, ts->eax, 0xD);
	if (ts->eflags.zero) {
        goto loc_482409;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	mov(&ts->edi, 0x5);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48272A;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_482409:
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4824B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esi + 0xC9, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_48242C;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_48246A;
    }

loc_48242C:
	mov(&ts->edi, 0x5);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48246A;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48246A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48246A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);

loc_48246A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0xB);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_739320(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4824B5:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC9, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_48254B;
    }
	mov(mv, x86::mem(ts->esi + 0xC9, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x90, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4824EA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), 0xB);
	if (!ts->eflags.zero) {
        goto loc_4824EA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_47AC50(ts, mv);
	goto loc_48254B;

loc_4824EA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_48254B;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x6);
	game::sub_4FE4A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48254B;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48254B;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_48254B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_46C800(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x17C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);

loc_48254B:
	game::sub_4A9330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->edi, 0x5);
	if (ts->eflags.zero) {
        goto loc_48262A;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4825D7;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x46, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x45, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_482654;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	goto loc_482654;

loc_4825D7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4825E9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_482654;
    }

loc_4825E9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482654;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_482654;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	goto loc_482654;

loc_48262A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_48263A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_482654;
    }

loc_48263A:
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_482649;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_482654;
    }

loc_482649:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_47AC50(ts, mv);

loc_482654:
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4826D4;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4826D4;
    }
	mov(&ts->ecx, 0x865480);
	game::sub_571280(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4826D4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_482687;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }

loc_482687:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48272A;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48272A;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4826D4:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, 0x82B974);
	mov(&ts->edi, 0x82AFB0);
	nop();

loc_4826E0:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4826F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x178, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_739130(ts, mv);
	add(&ts->esp, 0x8);

loc_4826F7:
	add(&ts->edi, 0x2C);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->edi, 0x82B060);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4826E0;
    }
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48271D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_482180(ts, mv);

loc_48271D:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	game::sub_46B100(ts, mv);

loc_48272A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_48272C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_482730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47B6E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_482748;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_482748:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_482750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82B9C8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x82B620, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_46B670(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4827A0;
    }
	test(mv, &ts->eflags, x86::mem(0x819B0C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4827A0;
    }
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x64, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78C05C);
	game::nullsub_11(ts, mv);
	add(&ts->esp, 0x10);

loc_4827A0:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4827B5;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x30, 1), ts->al);
	game::sub_47B820(ts, mv);
	add(&ts->esp, 0x8);

loc_4827B5:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_48287B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4827CA;
    }
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);

loc_4827CA:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->eax, ts->edi);
	sar(&ts->eax, 0x10);
	and_(&ts->eax, 0xFFFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_45A0C0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4827F6;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->eax*4), 4));
	shl(&ts->ebp, 0x3);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x82A5DC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4827FE;
    }

loc_4827F6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4827FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	and_(&ts->edi, 0xFFFF);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx) - 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	game::sub_721F99(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_724333(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->edi, ts->eax);
	game::sub_721FA7(ts, mv);
	game::sub_6F5722(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::sub_6F57A1(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ebp + 0x82A5FC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_48287B:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4828B4;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7227CB(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x66, 1));
	add(&ts->esp, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4828B4;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx*2), 4));
	shl(&ts->eax, 0x2);
	or_(&ts->edx, 0xFFFFFFFF);
	nop();

loc_4828A0:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + (ts->ebp) - 0x8, 4), ts->edx);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->eax + (ts->ebp) - 0xC, 4), ts->edx);
	sub(&ts->eax, 0xC);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4828A0;
    }

loc_4828B4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_4828E3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(&ts->ecx, ts->ebp);
	shl(&ts->ecx, 0x7);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4828E3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	shl(&ts->ebp, 0xE);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_722F78(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_48291C;

loc_4828E3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->edi + 0x124, 4), ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x16C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	shl(&ts->ebp, 0x7);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x128, 4), ts->ebp);
	game::sub_7227A3(ts, mv);
	add(&ts->esp, 0x18);

loc_48291C:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_482960;
    }
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x66, 1));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_482951;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->ecx, 0x2);
	mov(&ts->edx, ts->eax);

loc_482933:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	add(&ts->eax, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0xC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x8, 4));
	sub(&ts->ecx, 0xC);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_482933;
    }

loc_482951:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);

loc_482960:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x65, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_482970(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4829F4;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4829F3;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	goto loc_482990;

loc_482990:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4829A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4829C5;

loc_4829A0:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	game::sub_721F99(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_722DB5(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_721FA7(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4829EA;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);

loc_4829C5:
	game::sub_440540(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	add(&ts->esp, 0xC);
	goto loc_4829EC;

loc_4829EA:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));

loc_4829EC:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebx + 0x3C, 4));
	if (!ts->eflags.zero) {
        goto loc_482990;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_4829F3:
	pop(mv, &ts->esp, ts->esi);

loc_4829F4:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_482A00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_482A78;
    }
	push(mv, &ts->esp, 0x174);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482A32;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), 0x78BB98);
	goto loc_482A34;

loc_482A32:
	xor_(&ts->eax, ts->eax);

loc_482A34:
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_459E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x29000);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_47B710(ts, mv);
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482A73;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_482A75;

loc_482A73:
	xor_(&ts->eax, ts->eax);

loc_482A75:
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);

loc_482A78:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED00C, 4));
	mov(mv, x86::mem(0x82BA6C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7ED014, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->esi, ts->esi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_482ACD;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->esi, ts->eax);

loc_482ACD:
	mov(mv, &ts->eax, x86::mem(0x7ED014, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45AF90);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BA70, 4), ts->esi);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7ED018, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	xor_(&ts->esi, ts->esi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_482B2D;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->esi, ts->eax);

loc_482B2D:
	mov(mv, &ts->eax, x86::mem(0x7ED018, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x45AF90);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82BA60, 4), ts->esi);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7ED010, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->esi, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_482B8D;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_482B8D:
	mov(mv, &ts->eax, x86::mem(0x7ED010, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x45AF90);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82BA68, 4), ts->edi);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_482BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	dec(&ts->eax);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x7);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_482BCE;
    }
	jmp(x86::mem(0x482C40, 4));

loc_482BD5:
	mov(mv, x86::mem(0x82BB29, 1), ts->bl);
	goto def_482BCE;

loc_482BDD:
	mov(mv, x86::mem(0x82BB2A, 1), ts->bl);
	goto def_482BCE;

loc_482BE5:
	mov(mv, x86::mem(0x82BB2B, 1), ts->bl);
	goto def_482BCE;

loc_482BED:
	mov(mv, x86::mem(0x82BB2C, 1), ts->bl);

def_482BCE:
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7227CB(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_482970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_482C39;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78C084);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);

loc_482C39:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_482C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78C0C4);
	push(mv, &ts->esp, 0x4835C0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_482CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(&ts->edi, 0x2);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_482CD0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_482CEF;
    }

loc_482CD4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_482CD4;
    }

loc_482CEF:
	add(&ts->esi, 0x8);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_482CD0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_482D00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47BBE0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_482D18;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_482D18:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_482D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x8003B500);
	if (!ts->eflags.zero) {
        goto loc_482D4C;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_482D46;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xD0, 4));
	game::sub_482CC0(ts, mv);

loc_482D46:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_482D4C:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_482D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_482D7A;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_482D7A;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x0);

loc_482D7A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_48310D;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_47BF20(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_47BEA0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_46B100(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_46F000(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	dec(&ts->eax);
	mov(&ts->ebx, 0x6);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_482DC7;
    }
	jmp(x86::mem(0x483114, 4));

loc_482DCE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(&ts->edi, 0x2);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x461C4000);
	push(mv, &ts->esp, 0x447A0000);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	sub(&ts->eax, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_482EB4;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_482E40;
    }
	mov(&ts->ebx, 0x3);

loc_482E40:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7885B0, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x74, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7885A0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	game::sub_459990(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_46F080(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	game::sub_46F000(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x72, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_482EB4:
	xor_(&ts->ebx, ts->ebx);
	goto loc_482E40;

loc_482EB8:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x3);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_482EDC:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_482EF4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x138, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_483104;
    }

loc_482EF4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_482DC7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45C430(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_482F11:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(&ts->eax, 0x5);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x50, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0xC8, 4), 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_482F56;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844D8, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);

loc_482F56:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x70, 4));
	push(mv, &ts->esp, 0x461C4000);
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x4C, 4));
	push(mv, &ts->esp, 0x447A0000);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7ED2A0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED29C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_482FC6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC8, 4), 0x3);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_483008;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x64, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_483008;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844D8, 4));
	game::__ftol2(ts, mv);

loc_483008:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7ED2A0, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED29C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xAC, 4));
	game::sub_459990(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_483059:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(&ts->eax, 0x7);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x44480000);
	fabs(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	game::sub_401090(ts, mv);
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3C);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xAC, 4));
	game::sub_459990(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4830FA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_482DC7;
    }

loc_483104:
	mov(&ts->ecx, ts->esi);
	game::sub_45C430(ts, mv);

def_482DC7:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_48310D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_483130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x58, 1));
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->cl, ts->al);
	if (ts->eflags.zero) {
        goto loc_48314D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_48314D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x71, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x72, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_483183;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_46EC70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_482D50(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_483183:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48318C;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_46EE60(ts, mv);

loc_48318C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_482D50(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4831A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4831BB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_4831BB:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xD0, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0xD8, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xD1, 1), ts->cl);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xD8, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_483219;
    }
	mov(&ts->al, ts->cl);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48320F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45CD30(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4831FF;
    }
	game::sub_45CC30(ts, mv);
	goto loc_48320F;

loc_4831FF:
	game::sub_470030(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_48320F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45CB70(ts, mv);

loc_48320F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_483235;
    }

loc_483219:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_483235;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45CDC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_483235;
    }
	mov(mv, x86::mem(ts->esi + 0xD8, 1), 0x1);

loc_483235:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_47C290(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48326E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_48326E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(0x82B884, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xAC, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx - 0x1, 4));
	and_(&ts->edi, 0x1);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4832A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48329D;
    }

loc_483291:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48329F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_483291;
    }

loc_48329D:
	xor_(&ts->eax, ts->eax);

loc_48329F:
	mov(&ts->ecx, ts->eax);
	goto loc_4832A5;

loc_4832A3:
	xor_(&ts->ecx, ts->ecx);

loc_4832A5:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x84, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4832E9;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4832CC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4832CC;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4832C0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4832CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4832C0;
    }

loc_4832CC:
	xor_(&ts->eax, ts->eax);

loc_4832CE:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->cl, x86::mem(ts->edx + 0xA, 1));
	cmp(mv, &ts->eflags, ts->cl, x86::mem(ts->eax + 0xA, 1));
	setle(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0xD7, 1), ts->dl);

loc_4832E9:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_471080(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x2);
	mov(&ts->ebp, 0x5);

loc_483303:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, 0x20);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483350;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_483437;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_483303;
    }
	goto loc_483437;

loc_483350:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x6);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, 0x40);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4833A0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_483437;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_483350;
    }
	goto loc_483437;

loc_4833A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x7);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, 0x80);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4833EC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_483437;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4833A0;
    }
	goto loc_483437;

loc_4833EC:
	mov(&ts->edi, 0x14);

loc_4833F1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, 0x100000);
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9C70(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483462;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_483437;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4833F1;
    }

loc_483437:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_483498;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_48345E;
    }
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_483457;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_483457;
    }
	mov(&ts->eax, 0x6);
	goto loc_48348E;

loc_483457:
	mov(&ts->eax, 0x3);
	goto loc_48348E;

loc_48345E:
	mov(&ts->eax, ts->ebp);
	goto loc_48348E;

loc_483462:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_483498;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD7, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_483498;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED5D8, 4));
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48348E;
    }
	mov(&ts->eax, 0x9);

loc_48348E:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_45DB90(ts, mv);

loc_483498:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_47C6D0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4714A0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x70, 1));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x71, 1), ts->cl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4834C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47C840(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4834D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4834D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4834E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47CC80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4834F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4834F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47CD40(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483518;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483518:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47D470(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483538;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483538:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47D540(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483558;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483558:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47D610(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483578;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483578:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47DB20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483598;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483598:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4835A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_47E020(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4835B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4835B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4835C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4835E9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4835D0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4835D0;
    }

loc_4835E9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4835F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BEBC, 4));
	cmp(&ts->eflags, ts->eax, 0x82BEBC);
	if (ts->eflags.zero) {
        goto loc_483621;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_483600:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BEBC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x82BEBC);
	if (!ts->eflags.zero) {
        goto loc_483600;
    }

loc_483621:
	mov(mv, &ts->eax, x86::mem(0x82C6A4, 4));
	cmp(&ts->eflags, ts->eax, 0x82C6A4);
	if (ts->eflags.zero) {
        goto loc_483651;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_483630:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82C6A4, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x82C6A4);
	if (!ts->eflags.zero) {
        goto loc_483630;
    }

loc_483651:
	mov(mv, &ts->eax, x86::mem(0x82BEC4, 4));
	cmp(&ts->eflags, ts->eax, 0x82BEC4);
	if (ts->eflags.zero) {
        goto locret_483681;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_483660:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BEC4, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x82BEC4);
	if (!ts->eflags.zero) {
        goto loc_483660;
    }

locret_483681:
	retn(mv, &ts->esp);
}

void sub_483690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7F);
	push(mv, &ts->esp, 0x0);
	game::sub_476990(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x7F);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_47F6D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4836C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x444);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4836FA;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x44);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4836FA;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_47F580;

loc_4836FA:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_47F580:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78BCC4);
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x7);
	retn(mv, &ts->esp);
}

void sub_483700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x448);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48373A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x48);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48373A;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_47F5C0;

loc_48373A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_47F5C0:
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78BCF4);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_483740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	game::sub_47F660(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_47F710(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4837BF;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x4D525453);
	if (!ts->eflags.zero) {
        goto loc_4837BE;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_47FE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48379B;
    }

loc_483784:
	game::sub_6F56BD(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_6F5889(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_483784;
    }

loc_48379B:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	game::sub_6F55D2(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x17C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4837BE;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F879A(ts, mv);
	add(&ts->esp, 0x8);

loc_4837BE:
	pop(mv, &ts->esp, ts->esi);

locret_4837BF:
	retn(mv, &ts->esp);
}

void sub_4837C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_483860;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	shl(&ts->ebp, 0x2);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x400, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_483811;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_483811:
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82AF48, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483830;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A6BC);
	mov(&ts->ecx, ts->eax);
	goto loc_483832;

loc_483830:
	xor_(&ts->ecx, ts->ecx);

loc_483832:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edi, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + (ts->edx), 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->ecx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->edi + (ts->esi) + 0x4, 4), 0x0);
	goto loc_4838A6;

loc_483860:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edi, x86::mem(0x0, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + (ts->eax), 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4838A6;
    }
	mov(mv, &ts->eax, x86::mem(0x82AF48, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48388B;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A6BC);
	goto loc_48388D;

loc_48388B:
	xor_(&ts->eax, ts->eax);

loc_48388D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->edi + (ts->ecx), 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->edx), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));

loc_4838A6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax), 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_477D60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx), 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x78, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi), 4));
	add(&ts->edx, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edx);
	game::sub_477F80(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_477EB0(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_477DF0(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_480270(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_480320(ts, mv);
	inc(mv, x86::mem(ts->edi + (ts->esi) + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_483900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48395A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);

loc_483914:
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi*4), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48394E;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48394E;
    }

loc_483924:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->esi*4), 4));
	game::sub_478120(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->esi*4), 4));
	game::sub_480420(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483924;
    }

loc_48394E:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483914;
    }
	pop(mv, &ts->esp, ts->esi);

loc_48395A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_483960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4839B8;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_483980:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_480910(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483980;
    }
	pop(mv, &ts->esp, ts->esi);

loc_4839B8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4839C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4839D8;
    }
	game::sub_480D20(ts, mv);
	goto loc_4839E4;

loc_4839D8:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_4839F0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_480EB0(ts, mv);

loc_4839E4:
	mov(mv, x86::mem(0x82B8A0, 4), ts->edi);
	mov(mv, x86::mem(0x82B89C, 4), ts->edi);

loc_4839F0:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x98, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A25;
    }
	game::sub_72191F(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A12;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);

loc_483A12:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A25;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edi);

loc_483A25:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A35;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);

loc_483A35:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A45;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);

loc_483A45:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A6A;
    }
	game::sub_46C860(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A64;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_483A64:
	mov(mv, x86::mem(0x82BA30, 4), ts->edi);

loc_483A6A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A86;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A83;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_483A83:
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edi);

loc_483A86:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483A9C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->edi);

loc_483A9C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483AB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->edi);

loc_483AB2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483AC2;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edi);

loc_483AC2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483AD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->edi);

loc_483AD8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483AEB;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);

loc_483AEB:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x98, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483B36;
    }
	game::sub_72191F(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483B0D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);

loc_483B0D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483B20;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edi);

loc_483B20:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_483B30;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_483B30:
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edi);

loc_483B36:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_483B40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483E0E;
    }
	mov(mv, &ts->eax, x86::mem(0x82B8DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_483BC1;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0xA0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_483E0D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_483E0D;
    }
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483E0D;
    }
	mov(mv, &ts->ecx, x86::mem(0x82AFB0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483E0D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x17C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_739030(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_483BC1:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x70, 4));
	game::sub_458A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xA4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43E5C0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_483E0D;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0xA4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x82BC5D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(0x82B8EA, 1));
	if (!ts->eflags.zero) {
        goto loc_483C2B;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_483C56;
    }
	mov(mv, x86::mem(0x82B8EA, 1), 0x1);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82B8F0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43BE20(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	game::sub_43BDF0(ts, mv);
	goto loc_483C51;

loc_483C2B:
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_483C56;
    }
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82B8F0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE20(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(0x82B8EA, 1), 0x0);

loc_483C51:
	mov(mv, x86::mem(0x82B8F0, 4), ts->eax);

loc_483C56:
	cmp(mv, &ts->eflags, x86::mem(0x82BC64, 1), 0x1);
	mov(mv, &ts->al, x86::mem(0x82B8E8, 1));
	if (!ts->eflags.zero) {
        goto loc_483C7B;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_483C9D;
    }
	mov(mv, x86::mem(0x82B8E8, 1), 0x1);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(0x82B8EC, 4), ts->eax);
	goto loc_483C9D;

loc_483C7B:
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_483C9D;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B8EC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43BE20(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82B8E8, 1), 0x0);

loc_483C9D:
	cmp(mv, &ts->eflags, x86::mem(0x82BC65, 1), 0x1);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x82B8E9, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x80, 4));
	game::sub_46D7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483CC7;
    }
	game::sub_45ABE0(ts, mv);

loc_483CC7:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483CD5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_483CD5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_483CFC;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);

loc_483CFC:
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0xA8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->esi);
	mov(&ts->ebp, 0x9);
	goto loc_483D10;

loc_483D10:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483D20;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_483D20:
	add(&ts->edi, 0x4);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_483D10;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483D43;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483D43;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_483D43:
	mov(&ts->edi, 0x9);

loc_483D48:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483D53;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));

loc_483D53:
	add(&ts->esi, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_483D48;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_483D69;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_483D69:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_483D7A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_483D7A:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xA0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_483DDA;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483DD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_483D9E;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_483D9E;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	goto loc_483DA1;

loc_483D9E:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);

loc_483DA1:
	game::sub_482350(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82B8D4, 4));
	if (ts->eflags.zero) {
        goto loc_483DC2;
    }
	mov(mv, x86::mem(0x82B8D4, 4), ts->eax);

loc_483DC2:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x82B8D8, 4));
	if (ts->eflags.zero) {
        goto loc_483DDA;
    }
	mov(mv, x86::mem(0x82B8D8, 4), ts->ecx);
	goto loc_483DDA;

loc_483DD2:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	game::sub_482350(ts, mv);

loc_483DDA:
	mov(mv, &ts->eax, x86::mem(0x82BC6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x7C, 4));
	if (ts->eflags.zero) {
        goto loc_483E08;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_483DEF;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_483E13;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_483DF4;
    }

loc_483DEF:
	game::sub_4672A0(ts, mv);

loc_483DF4:
	mov(mv, x86::mem(0x82BC6C, 4), 0x0);
	mov(mv, x86::mem(0x82B61C, 4), 0x0);

loc_483E08:
	game::sub_6F56BD(ts, mv);

loc_483E0D:
	pop(mv, &ts->esp, ts->esi);

loc_483E0E:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_483E13:
	game::sub_467350(ts, mv);
	goto loc_483DF4;
}

void sub_483E20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_483E31;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x3C, 4));
	goto sub_481CD0;

locret_483E31:
	retn(mv, &ts->esp, 0x4);
}

void sub_483E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_483E51;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x3C, 4));
	goto loc_481E50;

locret_483E51:
	retn(mv, &ts->esp, 0x4);

loc_481E50:
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_481EE7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_481E7E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_481E70:
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_481E8D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_481E70;
    }

loc_481E7E:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_481EB8;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	goto loc_481EC0;

loc_481E8D:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_481EB8:
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_481EC0:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_481EC9;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x10, 4));
	goto loc_481ECB;

loc_481EC9:
	xor_(&ts->eax, ts->eax);

loc_481ECB:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_481EE5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_481EE0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_481EB8;
    }
	add(&ts->ecx, 0xFFFFFFF0);
	goto loc_481EC0;

loc_481EE0:
	game::sub_46A1A0(ts, mv);

loc_481EE5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_481EE7:
	retn(mv, &ts->esp, 0x4);
}

void sub_483E60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483E9D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE0);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483E9D;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_481620;

loc_483E9D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_481620:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772678);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	game::sub_479660(ts, mv);
	push(mv, &ts->esp, 0x40000);
	push(mv, &ts->esp, 0x4699A0);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x78BF30);
	game::sub_5E02B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772670:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_479710;

??1strstreambuf@std@@UAE@XZ_0_SEH:
	mov(&ts->eax, 0x7DEBD4);
	goto ___CxxFrameHandler;
}

void sub_483EA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483EB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483EB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483EC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x500);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_483EFD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x100);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_483EFD;
    }
	mov(&ts->ecx, ts->eax);
	goto loc_481720;

loc_483EFD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_481720:
	mov(&ts->edx, ts->ecx);
	game::sub_479660(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx + 0xD8, 1), ts->al);
	mov(mv, x86::mem(ts->edx + 0xE0, 1), ts->al);
	mov(mv, x86::mem(ts->edx + 0xE4, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xE8, 1), ts->al);
	mov(mv, x86::mem(ts->edx + 0xEC, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xF0, 1), ts->al);
	mov(mv, x86::mem(ts->edx, 4), 0x78BF88);
	mov(mv, x86::mem(ts->edx + 0xF1, 1), 0x1);
	mov(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_483F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_481760(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483F18;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483F18:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x78BFE0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_469E50(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_483F70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_483F88;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_483F88:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_483F90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx - 0x2, 4));
	mov(mv, &ts->eax, x86::mem(0x82B994, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48405B;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x82B9B4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_48405B;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73A7C0(ts, mv);
	mov(&ts->edi, ts->esi);
	imul(&ts->edi, ts->edi, 0x1C);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7ECD38, 4));
	mov(&ts->eax, 0x1000000);
	shl(&ts->eax, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7ECD3C, 4));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x82B9B4, 1), 0x1);
	or_(&ts->eax, ts->edx);
	or_(&ts->eax, 0x10000000);
	mov(mv, x86::mem(0x7ECD70, 4), ts->eax);
	game::sub_46B530(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebx, 0x2);
	mov(mv, x86::mem(0x82B984, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_484029;
    }
	mov(mv, &ts->eax, x86::mem(0x82B9BC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484029;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7ECD74, 4), ts->ebx);
	game::sub_459E40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_47B660(ts, mv);
	add(&ts->esp, 0x4);

loc_484029:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x7ECD50, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48405A;
    }
	push(mv, &ts->esp, ts->edi);
	game::j__malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7ECD08, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x459D40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x82B9A4, 4), ts->eax);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x1C);

loc_48405A:
	pop(mv, &ts->esp, ts->edi);

loc_48405B:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_484060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x1);
	xor_(&ts->edi, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4840A8;
    }
	xor_(&ts->ebp, ts->ebp);
	mov(&ts->edi, ts->edi);

loc_484090:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->ebp) + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4840A8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	inc(&ts->edi);
	add(&ts->ebp, 0xC);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_484090;
    }

loc_4840A8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4840BE;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4840BE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*2), 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->ecx*4) + 0x8, 4));
	add(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(&ts->ebx, 0x7);
	if (ts->eflags.zero) {
        goto loc_484195;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_482970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_45AC20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484154;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4841A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x124, 4), 0x0);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x16C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x128, 4), ts->edi);
	game::sub_7227A3(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x1);
	goto loc_4841A4;

loc_484154:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x124, 4), 0x0);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x16C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x128, 4), ts->edi);
	game::sub_7227A3(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	goto loc_4841A4;

loc_484195:
	push(mv, &ts->esp, 0x78C0C8);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);

loc_4841A4:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A72C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_4841FB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4841FB;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->ebp, 0x4);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);

loc_4841FB:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->ebp, 0x4);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->eax);
	game::sub_721F99(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_723E9D(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_721FA7(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 2));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_484250(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebx, ts->ecx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x404);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_484290;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484290;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	goto loc_484292;

loc_484290:
	xor_(&ts->eax, ts->eax);

loc_484292:
	mov(mv, x86::mem(ts->ebx + 0x6C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_484309;
    }
	push(mv, &ts->esp, 0x174);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4842C5;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), 0x78BB98);
	mov(&ts->ecx, ts->eax);
	goto loc_4842C7;

loc_4842C5:
	xor_(&ts->ecx, ts->ecx);

loc_4842C7:
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x9C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_459E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x20000);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_47B710(ts, mv);
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484304;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_484306;

loc_484304:
	xor_(&ts->eax, ts->eax);

loc_484306:
	mov(mv, x86::mem(ts->ebx + 0x3C, 4), ts->eax);

loc_484309:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(0x82BA50, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xB);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_484321;
    }
	jmp(x86::mem(0x4844DC, 4));

loc_484328:
	mov(&ts->esi, 0x1);
	goto loc_48434D;

loc_48432F:
	mov(&ts->esi, 0x2);
	goto loc_48434D;

loc_484336:
	mov(&ts->esi, 0x3);
	goto loc_48434D;

loc_48433D:
	mov(&ts->esi, 0x5);
	goto loc_48434D;

loc_484344:
	mov(&ts->esi, 0x4);
	goto loc_48434D;

def_484321:
	xor_(&ts->esi, ts->esi);

loc_48434D:
	mov(&ts->eax, ts->esi);
	shl(&ts->eax, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECFA8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4843A5;
    }
	mov(mv, &ts->edx, x86::mem(0x7ECFA8, 4));
	push(mv, &ts->esp, ts->edx);
	xor_(&ts->esi, ts->esi);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4843A5;
    }
	mov(mv, &ts->eax, x86::mem(0x7ECFA8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4843A5;
    }
	mov(&ts->edi, 0x7ECFA8);

loc_484391:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	add(&ts->edi, 0x10);
	push(mv, &ts->esp, ts->ecx);
	inc(&ts->esi);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484391;
    }

loc_4843A5:
	shl(&ts->esi, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7ECFA8, 4));
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ECFB0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x400, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4843F3;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_4843F3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7ECFB0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45AE50);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82BA54, 4), ts->edi);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7ECFB4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57D900(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x400, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_484453;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_484453:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ECFB4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x45AE50);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82BA44, 4), ts->edi);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7ECFAC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x400, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4844B4;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);

loc_4844B4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ECFAC, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x45AE50);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x82BA4C, 4), ts->ebx);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_484510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x82B898, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_48452C;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_48452C:
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, 0x4);
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, ts->ebx);
	game::sub_46C790(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x1, 4));
	setnz(ts->eflags, &ts->dl);
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_484569;
    }
	jmp(x86::mem(0x484B74, 4));

loc_484570:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484578;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }

loc_484578:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4845E9;

loc_48457E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48458F;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_48458F;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4845C6;
    }

loc_48458F:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484597;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }

loc_484597:
	push(mv, &ts->esp, ts->ecx);
	goto loc_4845E9;

loc_48459A:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4845A2;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }

loc_4845A2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_482BC0(ts, mv);
	mov(mv, x86::mem(0x82BB28, 1), 0x0);
	goto def_484569;

loc_4845B6:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4845C6;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4845C3;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }

loc_4845C3:
	push(mv, &ts->esp, ts->ebx);
	goto loc_4845E9;

loc_4845C6:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484B69;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_4845DD:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4845E5;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto def_484569;
    }

loc_4845E5:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);

loc_4845E9:
	mov(&ts->ecx, ts->esi);
	game::sub_482BC0(ts, mv);

def_484569:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82BB48, 4));
	mov(&ts->esi, 0x3);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_484608;
    }
	mov(mv, x86::mem(0x82BB2B, 1), 0x0);

loc_484608:
	push(mv, &ts->esp, 0x78C18C);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484688;
    }
	mov(mv, &ts->al, x86::mem(0x82BB28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484688;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_484B69;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_484B69;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_484B69;
    }
	mov(mv, &ts->al, x86::mem(0x82BB2B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484B69;
    }
	mov(mv, x86::mem(0x82BB29, 1), 0x1);
	mov(&ts->ecx, 0x4);
	mov(&ts->eax, 0x1);

loc_484664:
	game::sub_45A770(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_46CA60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_484688:
	push(mv, &ts->esp, 0x78C17C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4846BB;
    }
	push(mv, &ts->esp, 0x78C160);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x82BB2B, 1), 0x1);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x8);
	mov(&ts->eax, 0x2);
	goto loc_484664;

loc_4846BB:
	push(mv, &ts->esp, 0x78C154);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4846DF;
    }
	mov(mv, x86::mem(0x82BB2C, 1), 0x1);
	mov(&ts->ecx, 0x10);
	mov(&ts->eax, 0x8);
	goto loc_484664;

loc_4846DF:
	push(mv, &ts->esp, 0x78C148);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48471E;
    }
	mov(mv, &ts->al, x86::mem(0x82BB29, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484B69;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x10, 4), 0x2);
	mov(&ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48470D;
    }
	mov(&ts->ecx, 0x2);

loc_48470D:
	mov(mv, x86::mem(0x82BB2A, 1), 0x1);
	mov(&ts->eax, 0x4);
	goto loc_484664;

loc_48471E:
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	game::sub_46C9A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48473E;
    }
	mov(mv, &ts->edx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	game::sub_46C9D0(ts, mv);

loc_48473E:
	mov(mv, &ts->eax, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484755;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xD, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4847B1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->eax, 0x4);
	goto loc_4847AE;

loc_484755:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x84, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4847A8;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4847A8;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4847A8;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edx);
	game::sub_4690B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4847B1;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edx);
	game::sub_4690B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8C, 4));
	cmp(&ts->eflags, ts->eax, 0x15);
	if (ts->eflags.zero) {
        goto loc_4847A0;
    }
	cmp(&ts->eflags, ts->eax, 0xE);
	if (ts->eflags.zero) {
        goto loc_4847A0;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_4847B1;
    }

loc_4847A0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->eax, 0x4);
	goto loc_4847AE;

loc_4847A8:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->eax, 0x8);

loc_4847AE:
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->eax);

loc_4847B1:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	mov(&ts->ecx, 0x2000);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4847C1;
    }
	jmp(x86::mem(0x484B98, 4));

loc_4847C8:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->ecx);
	goto def_4847C1;

loc_4847CD:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x1);
	goto def_4847C1;

loc_4847D6:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x2);
	goto def_4847C1;

loc_4847DF:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x4);
	goto def_4847C1;

loc_4847E8:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x8);
	goto def_4847C1;

loc_4847F1:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x10);
	goto def_4847C1;

loc_4847FA:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x20);
	goto def_4847C1;

loc_484803:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x40);
	goto def_4847C1;

loc_48480C:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x80);
	goto def_4847C1;

loc_484815:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x100);
	goto def_4847C1;

loc_48481E:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x200);
	goto def_4847C1;

loc_484827:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x400);
	goto def_4847C1;

loc_484830:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x800);
	goto def_4847C1;

loc_484839:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x1000);

def_4847C1:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	xor_(&ts->edx, ts->edx);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edi, ts->edi);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1C, 4), ts->esi);
	setnz(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->edx, ts->esi);
	inc(&ts->edx);
	xor_(&ts->esi, ts->esi);

loc_484858:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA78, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484866;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED068, 4));

loc_484866:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA7C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484874;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED06C, 4));

loc_484874:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA80, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484882;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED070, 4));

loc_484882:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA84, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_484890;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED074, 4));

loc_484890:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA88, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48489E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED078, 4));

loc_48489E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA8C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4848AC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED07C, 4));

loc_4848AC:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA90, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4848BA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED080, 4));

loc_4848BA:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BA94, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4848C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7ED084, 4));

loc_4848C8:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x80);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_484858;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_484A50;
    }
	mov(mv, &ts->ecx, x86::mem(0x7ED060, 4));
	mov(mv, &ts->ebx, x86::mem(0x7ED05C, 4));
	mov(&ts->edx, 0x2);
	xor_(&ts->esi, ts->esi);
	mov(&ts->edi, ts->edi);

loc_4848F0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BAF8, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_484920;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_48491E;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_48491E;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_48491A;
    }
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_48491A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED03C, 4));
	goto loc_484920;

loc_48491A:
	mov(&ts->edi, ts->ecx);
	goto loc_484920;

loc_48491E:
	mov(&ts->edi, ts->ebx);

loc_484920:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x82BAFC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_484950;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_48494E;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_48494E;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_48494A;
    }
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_48494A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED040, 4));
	goto loc_484950;

loc_48494A:
	mov(&ts->edi, ts->ecx);
	goto loc_484950;

loc_48494E:
	mov(&ts->edi, ts->ebx);

loc_484950:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BB00, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48497D;
    }
	cmp(&ts->eflags, ts->edx, 0x8);
	if (ts->eflags.zero) {
        goto loc_48497B;
    }
	cmp(&ts->eflags, ts->edx, 0xA);
	if (ts->eflags.zero) {
        goto loc_48497B;
    }
	cmp(&ts->eflags, ts->edx, 0x9);
	if (ts->eflags.zero) {
        goto loc_484977;
    }
	cmp(&ts->eflags, ts->edx, 0xB);
	if (ts->eflags.zero) {
        goto loc_484977;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED044, 4));
	goto loc_48497D;

loc_484977:
	mov(&ts->edi, ts->ecx);
	goto loc_48497D;

loc_48497B:
	mov(&ts->edi, ts->ebx);

loc_48497D:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BB04, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4849AA;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4849A8;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_4849A8;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_4849A4;
    }
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_4849A4;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED048, 4));
	goto loc_4849AA;

loc_4849A4:
	mov(&ts->edi, ts->ecx);
	goto loc_4849AA;

loc_4849A8:
	mov(&ts->edi, ts->ebx);

loc_4849AA:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BB08, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4849DA;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4849D8;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_4849D8;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_4849D4;
    }
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_4849D4;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED04C, 4));
	goto loc_4849DA;

loc_4849D4:
	mov(&ts->edi, ts->ecx);
	goto loc_4849DA;

loc_4849D8:
	mov(&ts->edi, ts->ebx);

loc_4849DA:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x82BB0C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_484A0A;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x3, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_484A08;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_484A08;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_484A04;
    }
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.zero) {
        goto loc_484A04;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7ED050, 4));
	goto loc_484A0A;

loc_484A04:
	mov(&ts->edi, ts->ecx);
	goto loc_484A0A;

loc_484A08:
	mov(&ts->edi, ts->ebx);

loc_484A0A:
	add(&ts->edx, 0x6);
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x2, 4));
	add(&ts->esi, 0x18);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4848F0;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_484AF4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82BB18, 4));
	if (ts->eflags.zero) {
        goto loc_484A91;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82BB1C, 4));
	if (ts->eflags.zero) {
        goto loc_484A91;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82BB20, 4));
	if (ts->eflags.zero) {
        goto loc_484A47;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82BB24, 4));
	if (!ts->eflags.zero) {
        goto loc_484A98;
    }

loc_484A47:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x4000);
	goto loc_484A98;

loc_484A50:
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x1);
	game::sub_45A6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x475530);
	push(mv, &ts->esp, ts->edx);
	game::sub_46CA60(ts, mv);
	mov(&ts->bl, ts->al);
	game::sub_721515(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_484A91:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x8000);

loc_484A98:
	cmp(&ts->eflags, ts->edi, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, x86::mem(0x82BB28, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_484ABB;
    }
	cmp(&ts->eflags, ts->edi, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_484ABB;
    }
	mov(&ts->edi, 0x4);

loc_484ABB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(&ts->edx, 0x1);
	mov(&ts->eax, ts->edi);
	game::sub_45A720(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x475530);
	push(mv, &ts->esp, 0x6);
	game::sub_46CA60(ts, mv);
	mov(&ts->bl, ts->al);
	game::sub_721515(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_484AF4:
	push(mv, &ts->esp, 0x78C13C);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_484B55;
    }
	mov(&ts->edx, 0x1);
	mov(&ts->ecx, 0x4000);
	mov(&ts->eax, 0x400);
	game::sub_45A720(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x9);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x475530);
	push(mv, &ts->esp, 0x9);
	game::sub_46CA60(ts, mv);
	mov(&ts->ecx, 0x8635BC);
	mov(&ts->bl, ts->al);
	game::sub_5258B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_484B55:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78C0F8);
	push(mv, &ts->esp, 0x0);
	game::sub_4691C0(ts, mv);
	add(&ts->esp, 0x10);

loc_484B69:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_484BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x4835C0);
	push(mv, &ts->esp, 0x57BCD0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x78C0C4);
	game::sub_75C461(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_484C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_482C60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_484C48;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_484C48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_484C50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484C6C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));

loc_484C6C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD0, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484C92;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_484C90;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_484C90;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_484C92;
    }

loc_484C90:
	mov(&ts->bl, 0x1);

loc_484C92:
	mov(&ts->ecx, 0x827E88);
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484CCD;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_430420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484CCD;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_430350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484CC0;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_484CCD;
    }

loc_484CC0:
	mov(mv, &ts->eax, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_484CCD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_484CD2;

loc_484CCD:
	mov(&ts->eax, 0x1);

loc_484CD2:
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xD8, 1), ts->al);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_484CEE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_46FA30(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_484CEE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x434, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20C, 4));
	push(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x94, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	mov(&ts->ecx, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fnstsw(&ts->fp, ts->ax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xBC, 1));
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_484D81;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_484D98;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x1);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	goto loc_484D98;

loc_484D81:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484D98;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0xBC, 1), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));

loc_484D98:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_484DE2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_484DE2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_484DE2:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBED8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_484E03;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBED8, 4));
	goto loc_484E0F;

loc_484E03:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x440, 4));

loc_484E0F:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78C194, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_484E5B;
    }
	mov(&ts->al, 0x1);
	goto loc_484E5D;

loc_484E5B:
	xor_(&ts->al, ts->al);

loc_484E5D:
	mov(mv, x86::mem(ts->ecx + 0x4C, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x6C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->edx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_5ECE00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	game::sub_46C9A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_484F15;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x6C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_484ECD;
    }
	mov(mv, x86::mem(ts->esi + 0x6C, 1), 0x0);

loc_484ECD:
	push(mv, &ts->esp, 0x78C154);
	game::sub_43DB50(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	add(&ts->ecx, 0x4);
	game::sub_46C790(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_484F15;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45D360);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	game::sub_484510(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x6C, 1), 0x1);

loc_484F15:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_484F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_48512C;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78C18C);
	game::sub_43DB50(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	add(&ts->esp, 0x4);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_485014;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4850E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_59FA30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484F7C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	game::sub_5ECDB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4850E1;
    }

loc_484F7C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_484F8D;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45F2A0(ts, mv);

loc_484F8D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3E8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	game::sub_459990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_485005;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, x86::mem(0x82BB29, 1), 0x0);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7227CB(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_482970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_485005;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78C084);
	push(mv, &ts->esp, 0x1);
	game::sub_4691C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->edi + 0x44, 4), 0x0);

loc_485005:
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	goto loc_4850E1;

loc_485014:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_59FA30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4850E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_5ECDB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4850E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_5925B0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785110, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	game::sub_431DD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->eax, x86::mem(0x8A329C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->eax, x86::mem(0x88EC68, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4850A6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x45F4A0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	game::sub_484510(ts, mv);

loc_4850A6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xB0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_472AF0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x190);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	game::sub_459990(ts, mv);

loc_4850E1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	game::sub_5ECDB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_485106;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_485106;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45F2D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_485106:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	game::sub_5ECDB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48512C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48512C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_48512C;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_45F3E0(ts, mv);

loc_48512C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_485130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772749);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xF4, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48517E;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0xC4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x82C648);
	mov(mv, x86::mem(ts->ebp + 0xF4, 1), 0x1);
	mov(mv, x86::mem(ts->ebp + 0xCC, 4), 0x47CCD0);
	game::sub_735900(ts, mv);
	add(&ts->esp, 0x8);

loc_48517E:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_734DF0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_734E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x30);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	game::sub_734E60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485237;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4851D5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4851DF;

loc_4851D5:
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4851DF;
    }
	mov(&ts->eax, 0x3C);

loc_4851DF:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C568);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_485234;
    }
	push(mv, &ts->esp, 0x7EDE28);
	mov(&ts->ecx, 0x82C568);
	game::sub_735840(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x82C568);
	game::sub_7358C0(ts, mv);
	add(&ts->esp, 0xC);

loc_485234:
	pop(mv, &ts->esp, ts->edi);
	goto loc_485239;

loc_485237:
	xor_(&ts->esi, ts->esi);

loc_485239:
	test(mv, &ts->eflags, x86::mem(0x82CC04, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0xB4, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_485284;
    }
	mov(mv, &ts->ecx, x86::mem(0x82CC04, 4));
	mov(&ts->eax, 0x1);
	or_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x82CC04, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48527B;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_735070(ts, mv);

loc_48527B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x82CC00, 4), ts->eax);

loc_485284:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_772730:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458160(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_77273B:
	mov(mv, &ts->eax, x86::mem(0x82CC04, 4));
	and_(&ts->eax, 0xFFFFFFFE);
	mov(mv, x86::mem(0x82CC04, 4), ts->eax);
	retn(mv, &ts->esp);

SEH_485130:
	mov(&ts->eax, 0x7DEC94);
	goto ___CxxFrameHandler;
}

void sub_4852A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC0, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_48533A;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_48533A;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_48533A;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_48533A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_48533A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xB0, 4));
	push(mv, &ts->esp, ts->esi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7864E0, 8));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x1);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4852EE;
    }
	mov(&ts->edi, 0x2);

loc_4852EE:
	push(mv, &ts->esp, 0x78C148);
	game::sub_43DB50(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_485338;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	add(&ts->ecx, 0x4);
	game::sub_46C790(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_485338;
    }
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x461880);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4);
	game::sub_484510(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0xC0, 1), 0x1);

loc_485338:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_48533A:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_485340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4853AC;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_485360:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_480910(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_480910(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485360;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4853AC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4859B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x3FC000);
	add(&ts->eax, 0x4000);
	push(mv, &ts->esp, 0x2000);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x82C6D8, 4), ts->eax);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82C6D8, 4));
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, 0x789CD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x82C6D4, 4), ts->eax);
	game::sub_440330(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0x4EC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485A3A;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xEC);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_485A3A;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4585A0(ts, mv);
	mov(mv, x86::mem(0x82B884, 4), ts->eax);
	mov(&ts->ecx, ts->eax);
	goto loc_4853C0;

loc_485A3A:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82B884, 4), ts->eax);
	mov(&ts->ecx, ts->eax);
	goto loc_4853C0;

loc_4853C0:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4859A2;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x41C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485429;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485429;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789DB0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(0x82AFA8, 4), ts->ebx);
	mov(mv, x86::mem(0x82B06C, 4), 0x80);
	goto loc_48542B;

loc_485429:
	xor_(&ts->eax, ts->eax);

loc_48542B:
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	game::sub_47AAD0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_485446;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x7FAAA8, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_485446:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x460);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4854A8;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x60);
	game::sub_440820(ts, mv);
	mov(&ts->edx, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4854A8;
    }
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x34, 4));
	mov(&ts->ecx, 0x9);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), 0x78A6C4);
	mov(mv, x86::mem(ts->edx + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ebx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	goto loc_4854AA;

loc_4854A8:
	xor_(&ts->edx, ts->edx);

loc_4854AA:
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->edx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4854D2;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789ED0);
	mov(mv, x86::mem(0x82BB40, 4), ts->ebx);
	mov(mv, x86::mem(0x82BB44, 4), ts->ebx);
	goto loc_4854D4;

loc_4854D2:
	xor_(&ts->eax, ts->eax);

loc_4854D4:
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x82BB3C, 4), ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x414);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48551C;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x14);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48551C;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_484BD0(ts, mv);
	goto loc_48551E;

loc_48551C:
	xor_(&ts->eax, ts->eax);

loc_48551E:
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x430);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48557F;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x30);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48557F;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(0x82BA30, 4), ts->eax);
	goto loc_485585;

loc_48557F:
	mov(mv, x86::mem(0x82BA30, 4), ts->ebx);

loc_485585:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	mov(&ts->ebp, 0x20);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4855DD;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4855DD;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789EC8);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x11, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	goto loc_4855DF;

loc_4855DD:
	xor_(&ts->eax, ts->eax);

loc_4855DF:
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485600;
    }
	mov(mv, x86::mem(0x82BC78, 4), ts->eax);
	mov(mv, x86::mem(0x82B61C, 4), ts->ebx);
	goto loc_485602;

loc_485600:
	xor_(&ts->eax, ts->eax);

loc_485602:
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	add(&ts->esi, 0xA8);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x9);
	mov(&ts->edi, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485664;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485664;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A47C);
	goto loc_485666;

loc_485664:
	xor_(&ts->eax, ts->eax);

loc_485666:
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4856C1;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4856C1;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A3B0);
	goto loc_4856C3;

loc_4856C1:
	xor_(&ts->eax, ts->eax);

loc_4856C3:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485727;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485727;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A418);
	goto loc_485729;

loc_485727:
	xor_(&ts->eax, ts->eax);

loc_485729:
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x464);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48579D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x64);
	game::sub_440820(ts, mv);
	mov(&ts->edx, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48579D;
    }
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x20, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx, 4), 0x78A3E0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x60, 4), ts->ebx);
	mov(&ts->ecx, ts->edx);
	goto loc_48579F;

loc_48579D:
	xor_(&ts->ecx, ts->ecx);

loc_48579F:
	push(mv, &ts->esp, 0x6);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x3);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4857FD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4857FD;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A550);
	goto loc_4857FF;

loc_4857FD:
	xor_(&ts->eax, ts->eax);

loc_4857FF:
	push(mv, &ts->esp, 0x5);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48585F;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48585F;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A448);
	goto loc_485861;

loc_48585F:
	xor_(&ts->eax, ts->eax);

loc_485861:
	push(mv, &ts->esp, 0x6);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4858C1;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4858C1;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A4AC);
	goto loc_4858C3;

loc_4858C1:
	xor_(&ts->eax, ts->eax);

loc_4858C3:
	push(mv, &ts->esp, 0x6);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x428);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48592B;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x28);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48592B;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A4E0);
	mov(mv, x86::mem(ts->eax + 0x24, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	goto loc_48592D;

loc_48592B:
	xor_(&ts->eax, ts->eax);

loc_48592D:
	push(mv, &ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x420);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48598D;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48598D;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78A518);
	goto loc_48598F;

loc_48598D:
	xor_(&ts->eax, ts->eax);

loc_48598F:
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_4859A2:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_485A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx - 0x2, 4));
	mov(mv, &ts->eax, x86::mem(0x7ECD10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_43E910(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x400, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_485A9E;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);

loc_485A9E:
	mov(mv, &ts->ecx, x86::mem(0x7ECD10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x483F90);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82B994, 4), ts->edi);
	game::sub_57B4A0(ts, mv);
	push(mv, &ts->esp, 0x1B0);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485AEC;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x78BBAC);
	mov(mv, x86::mem(ts->eax + 0x1A0, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x1A4, 4), ts->ebx);
	goto loc_485AEE;

loc_485AEC:
	xor_(&ts->eax, ts->eax);

loc_485AEE:
	mov(mv, x86::mem(0x82B974, 4), ts->eax);
	imul(&ts->esi, ts->esi, 0x2C);
	add(&ts->esi, 0x82AFB0);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1A4, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_485B10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_485B3F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_485B31;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_485B3F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	goto loc_485B34;

loc_485B31:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));

loc_485B34:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_485B3F;
    }
	push(mv, &ts->esp, ts->edx);
	game::sub_484060(ts, mv);
	retn(mv, &ts->esp);

loc_485B3F:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_485B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772268);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x789E74);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485B87;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_485B87:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ebx);
	game::sub_482970(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_485BCA;
    }
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485BC7;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_485BBE;
    }

loc_485BA5:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_485BA5;
    }

loc_485BBE:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_485BC7:
	mov(mv, x86::mem(ts->edi + 0x3C, 4), ts->ebx);

loc_485BCA:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_485BDE;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->ebx);

loc_485BDE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi, 4), 0x789CE4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772260:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_475240;

SEH_476700:
	mov(&ts->eax, 0x7DE710);
	goto ___CxxFrameHandler;
}

void sub_485C00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x5D, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78C198);
	mov(mv, x86::mem(ts->eax + 0x64, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x6C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_485C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA4C, 4));
	retn(mv, &ts->esp);
}

void sub_485C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA50, 4));
	retn(mv, &ts->esp);
}

void sub_485C60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA54, 4));
	retn(mv, &ts->esp);
}

void sub_485C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x82BA58, 1));
	retn(mv, &ts->esp);
}

void sub_485C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772768);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78C198);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485CB7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_485CB7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485CCA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);

loc_485CCA:
	mov(mv, &ts->eax, x86::mem(0x82BA54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485CE2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82BA54, 4), ts->ebx);

loc_485CE2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485CFB;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82BA40, 4), ts->ebx);

loc_485CFB:
	mov(mv, &ts->eax, x86::mem(0x82BA4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485D1F;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_734F90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82BA4C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82BA4C, 4), ts->ebx);

loc_485D1F:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BA58, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_485B50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772760:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_485B50;

SEH_485DD0:
	mov(&ts->eax, 0x7DECB8);
	goto ___CxxFrameHandler;
}

void sub_485D50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x5D, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x78C1C8);
	mov(mv, x86::mem(ts->eax + 0x64, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_485D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA68, 4));
	retn(mv, &ts->esp);
}

void sub_485DA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA6C, 4));
	retn(mv, &ts->esp);
}

void sub_485DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA70, 4));
	retn(mv, &ts->esp);
}

void sub_485DC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x82BA74, 1));
	retn(mv, &ts->esp);
}

void sub_485DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772768);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78C1C8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485E0D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);

loc_485E0D:
	mov(mv, &ts->eax, x86::mem(0x82BA70, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485E25;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82BA70, 4), ts->ebx);

loc_485E25:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485E3E;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82BA5C, 4), ts->ebx);

loc_485E3E:
	mov(mv, &ts->eax, x86::mem(0x82BA68, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485E61;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_734F90(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BA68, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82BA68, 4), ts->ebx);

loc_485E61:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82BA74, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_485B50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772760:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_485B50;

SEH_485DD0:
	mov(&ts->eax, 0x7DECB8);
	goto ___CxxFrameHandler;
}

void sub_485E90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485F95;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_485EB0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebp*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_485F84;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485F84;
    }
	nop();

loc_485ED0:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + (ts->edx), 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485F03;
    }

loc_485EE5:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->esi*4), 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4809E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ecx), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485EE5;
    }

loc_485F03:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp*4), 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_483960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_485340(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ebp*4), 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_480860(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485F5C;
    }
	mov(&ts->edi, ts->edi);

loc_485F40:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ecx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->esi*4), 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_478240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485F40;
    }

loc_485F5C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ebp*4), 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ebp*4), 4));
	inc(&ts->ecx);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485ED0;
    }

loc_485F84:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_485EB0;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_485F95:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_485FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485FCD;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_485FCF;

loc_485FCD:
	xor_(&ts->eax, ts->eax);

loc_485FCF:
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_485FEC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_485FEE;

loc_485FEC:
	xor_(&ts->eax, ts->eax);

loc_485FEE:
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486008;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	goto loc_48600A;

loc_486008:
	xor_(&ts->eax, ts->eax);

loc_48600A:
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486024;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_486026;

loc_486024:
	xor_(&ts->eax, ts->eax);

loc_486026:
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486040;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_486042;

loc_486040:
	xor_(&ts->eax, ts->eax);

loc_486042:
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x5);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48605C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	goto loc_48605E;

loc_48605C:
	xor_(&ts->eax, ts->eax);

loc_48605E:
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486078;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	goto loc_48607A;

loc_486078:
	xor_(&ts->eax, ts->eax);

loc_48607A:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x7);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486094;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));
	goto loc_486096;

loc_486094:
	xor_(&ts->eax, ts->eax);

loc_486096:
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x20, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4860B0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x24, 4));
	goto loc_4860B2;

loc_4860B0:
	xor_(&ts->eax, ts->eax);

loc_4860B2:
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x24, 4), ts->edi);
	mov(&ts->eax, 0xA8);

loc_4860C0:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ecx), 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4860D6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(ts->esi + (ts->eax) - 0x74, 4), ts->edx);
	goto loc_4860DA;

loc_4860D6:
	mov(mv, x86::mem(ts->esi + (ts->eax) - 0x74, 4), ts->edi);

loc_4860DA:
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->eax, 0xCC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4860C0;
    }
	xor_(&ts->ebp, ts->ebp);
	goto loc_4860F0;

loc_4860E8:
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4860F0:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_486108;
    }

loc_4860F6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4837C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4860F6;
    }

loc_486108:
	inc(&ts->ebp);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->ebp, 0x9);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4860E8;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_483900(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_485E90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_486130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_48615E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x469D20);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x78C17C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_484510(ts, mv);
	pop(mv, &ts->esp, ts->esi);

locret_48615E:
	retn(mv, &ts->esp);
}

void sub_486160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x20000);
	push(mv, &ts->esp, 0x4022C0);
	mov(mv, x86::mem(0x82B9BC, 4), ts->eax);
	mov(mv, x86::mem(0x82B9C8, 4), ts->ecx);
	game::sub_5E02B0(ts, mv);
	mov(&ts->esi, 0x2);
	mov(&ts->edi, 0x82B9B4);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x82B9B8, 4), 0x1);
	sub(&ts->edi, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4861A0:
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + (ts->esi), 1), 0x0);
	game::sub_485A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82B9B8, 4));
	add(&ts->esp, 0x4);
	inc(&ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x2, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4861A0;
    }
	push(mv, &ts->esp, 0x789DF0);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x789DE8);
	mov(mv, x86::mem(0x82B9E4, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x789DDC);
	mov(mv, x86::mem(0x82B9E8, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x789DD0);
	mov(mv, x86::mem(0x82B9EC, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x789DC4);
	mov(mv, x86::mem(0x82B9F0, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x789DB8);
	mov(mv, x86::mem(0x82B9F4, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82B9F8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_486220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x10);
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, 0x5622);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_7360F0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ebx, ts->eax);
	game::sub_736DC0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x82BA34, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_486265;
    }
	push(mv, &ts->esp, 0x82B8B4);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_43C140(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_48626B;

loc_486265:
	mov(mv, &ts->eax, x86::mem(0x82BA34, 4));
	inc(&ts->eax);

loc_48626B:
	push(mv, &ts->esp, 0x82C694);
	mov(mv, x86::mem(0x82BA34, 4), ts->eax);
	game::sub_736050(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82BA34, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_486288;
    }
	neg(&ts->eax);

loc_486288:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x485B10);
	game::sub_736180(ts, mv);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x50D510);
	mov(mv, x86::mem(ts->edi, 4), 0x45AA10);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x45ABC0);
	game::sub_736140(ts, mv);
	push(mv, &ts->esp, 0x40CB20);
	game::sub_736160(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x18);
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_486376;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48636F;
    }
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x404);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48630E;
    }
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	and_(&ts->edx, 0x7);
	or_(&ts->edx, 0x1000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48630E;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_45B470(ts, mv);
	goto loc_486310;

loc_48630E:
	xor_(&ts->eax, ts->eax);

loc_486310:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x530);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486362;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x130);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_486362;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_485C00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_486362:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_48636F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_486376:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x404);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4863B5;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4863B5;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_45B470(ts, mv);
	goto loc_4863B7;

loc_4863B5:
	xor_(&ts->eax, ts->eax);

loc_4863B7:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x530);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4863F8;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x130);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4863F8;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_485C00(ts, mv);
	goto loc_4863FA;

loc_4863F8:
	xor_(&ts->eax, ts->eax);

loc_4863FA:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x418);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486441;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x18);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_486441;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_46CCB0(ts, mv);
	goto loc_486443;

loc_486441:
	xor_(&ts->eax, ts->eax);

loc_486443:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x52C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486487;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x12C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_486487;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_485D50(ts, mv);
	goto loc_486489;

loc_486487:
	xor_(&ts->eax, ts->eax);

loc_486489:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	mov(&ts->ecx, ts->eax);
	jmp(x86::mem(ts->edx + 0x4, 4));
}

void sub_4864A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_485B50(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4864B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4864B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4864C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_485C80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4864D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4864D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4864E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_485DD0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4864F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4864F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_486510(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x78C20C);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_43DBD0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_458890(ts, mv);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	game::sub_6F6628(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	game::sub_6F6750(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F7266(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F6E7A(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_6F67D7(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486645;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAAAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4865CB;
    }
	push(mv, &ts->esp, 0x78C1F8);
	push(mv, &ts->esp, 0xD4);
	game::sub_457AA0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4865B5;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_459B80(ts, mv);
	goto loc_4865B7;

loc_4865B5:
	xor_(&ts->eax, ts->eax);

loc_4865B7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	game::sub_486160(ts, mv);

loc_4865CB:
	mov(mv, &ts->edx, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4A8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486609;
    }
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA8);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486609;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_458960(ts, mv);
	goto loc_48660B;

loc_486609:
	xor_(&ts->eax, ts->eax);

loc_48660B:
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(mv, x86::mem(0x82B068, 4), ts->eax);
	mov(mv, x86::mem(0x82B918, 4), 0x0);
	xor_(&ts->edi, ts->edi);
	nop();

loc_486620:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edi);
	game::sub_469200(ts, mv);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486620;
    }
	game::sub_4835F0(ts, mv);
	game::sub_47FB80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	goto loc_47F830;

loc_486645:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);

loc_47F830:
	push(mv, &ts->esp, 0x7ED454);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED444);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED430);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED3DC);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED394);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED3A8);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED3B8);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED3C8);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED410);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED420);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED464);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED474);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED484);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED4C4);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED4D4);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED4A4);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED568);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED5C8);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED63C);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED380);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED4B4);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED4E4);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED504);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED514);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED524);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED544);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED554);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED64C);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED578);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED588);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED5A8);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED66C);
	mov(&ts->ecx, 0x82BEBC);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2D4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2C4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2E4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2F4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED304);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2B4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED2A4);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED244);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED254);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED314);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED334);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED368);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED348);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED358);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED494);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED324);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED27C);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED28C);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED534);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED3F0);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED400);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED598);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED5B8);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	push(mv, &ts->esp, 0x7ED65C);
	mov(&ts->ecx, 0x82C6A4);
	game::sub_479130(ts, mv);
	retn(mv, &ts->esp);
}

void sub_486650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772794);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4868FD;
    }
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4866AA;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789D24);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edi);
	goto loc_4866AC;

loc_4866AA:
	xor_(&ts->eax, ts->eax);

loc_4866AC:
	push(mv, &ts->esp, 0xF0);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4866D1;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_469330(ts, mv);
	goto loc_4866D3;

loc_4866D1:
	xor_(&ts->eax, ts->eax);

loc_4866D3:
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	push(mv, &ts->esp, ts->ebx);
	or_(&ts->ebx, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4866EF;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_486220(ts, mv);

loc_4866EF:
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C1C0(ts, mv);
	mov(mv, x86::mem(0x82B8B4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA8, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), 0x83AA28);
	if (ts->eflags.zero) {
        goto loc_486725;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_486725:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_486737;
    }
	game::sub_485E90(ts, mv);

loc_486737:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B098, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, &ts->edx, x86::mem(0x7ED190, 4));
	mov(mv, x86::mem(ts->eax + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, &ts->edx, x86::mem(0x7ED16C, 4));
	mov(mv, x86::mem(ts->eax + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0C0, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B098, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED194, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(0x7ED170, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0C0, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x82B098, 4), 0x4);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B09C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(0x7ED1A0, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0A0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(0x7ED178, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0A4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0A8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0AC, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B0, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0B4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	mov(mv, x86::mem(ts->edx + 0x82B0B8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0BC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->ecx, ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->ecx + 0x82B0C0, 4), ts->ebx);
	inc(mv, x86::mem(ts->esi + 0x28, 4));
	pop(mv, &ts->esp, ts->ebx);

loc_4868FD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772780:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78C21C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_486650:
	mov(&ts->eax, 0x7DECDC);
	goto ___CxxFrameHandler;
}

void sub_486910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto sub_486510;
}

void sub_486920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xB0);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48694C;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x78A600);
	mov(mv, x86::mem(ts->eax + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x0);
	goto loc_48694E;

loc_48694C:
	xor_(&ts->eax, ts->eax);

loc_48694E:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(0x7EDE4C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_57D900(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, 0x78C22C);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_457A60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x486500);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4869A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486B2D;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4869DB;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x789D24);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	goto loc_4869DD;

loc_4869DB:
	xor_(&ts->eax, ts->eax);

loc_4869DD:
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7EC840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x44C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486A1C;
    }
	mov(mv, &ts->ecx, x86::mem(0x7EC840, 4));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x1000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_486A1C;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_483F20(ts, mv);
	goto loc_486A1E;

loc_486A1C:
	xor_(&ts->eax, ts->eax);

loc_486A1E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_43C1C0(ts, mv);
	mov(mv, x86::mem(0x82B8B4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82B07C, 4), ts->eax);
	mov(mv, x86::mem(0x82B080, 4), ts->eax);
	mov(mv, x86::mem(0x82B084, 4), ts->eax);
	mov(&ts->ecx, 0x160);
	mov(&ts->edi, 0x82B098);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82BA30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(0x82B088, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_486A72;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_486220(ts, mv);

loc_486A72:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xA8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->edi, ts->ebx);
	mov(&ts->ebp, 0x9);

loc_486A80:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486A92;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));

loc_486A92:
	add(&ts->edi, 0x4);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_486A80;
    }
	mov(&ts->edi, ts->ebx);
	mov(&ts->ebx, 0x9);
	pop(mv, &ts->esp, ts->ebp);

loc_486AA0:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486AAF;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_486AAF:
	add(&ts->edi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_486AA0;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_486AC8;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486ADC;
    }

loc_486AC8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(&ts->eax, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_486ADC:
	mov(mv, &ts->al, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_486AF9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_486AF9:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486B0B;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486B1F;
    }

loc_486B0B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_486B1F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_486920(ts, mv);

loc_486B2D:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_486B30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486C04;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->eax + 0x90, 4), 0x1);
	game::sub_6F56BD(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82B918, 4), 0x0);
	game::sub_486650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_486920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x28, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_486BB7;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_486B90:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	push(mv, &ts->esp, 0x0);
	add(&ts->edx, 0x82B098);
	push(mv, &ts->esp, ts->edx);
	game::sub_4792F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486B90;
    }

loc_486BB7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486BF4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486BF4;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B974, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486BE5;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));

loc_486BE5:
	mov(mv, &ts->ecx, x86::mem(0x82B978, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486BF4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));

loc_486BF4:
	game::sub_6F56BD(ts, mv);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);

loc_486C04:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_486C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486DA0;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->eax + 0x90, 4), 0x5);
	mov(mv, x86::mem(0x82B90C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), 0x83AA28);
	mov(mv, &ts->ecx, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486C7C;
    }
	mov(mv, &ts->ecx, x86::mem(0x83AA50, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486C77;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_486C6D;
    }
	push(mv, &ts->esp, 0x1);
	dec(&ts->eax);
	goto loc_486C6F;

loc_486C6D:
	push(mv, &ts->esp, 0x0);

loc_486C6F:
	game::sub_721681(ts, mv);
	add(&ts->esp, 0x4);

loc_486C77:
	game::sub_72183A(ts, mv);

loc_486C7C:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486C8E;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486C9E;
    }

loc_486C8E:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->edx + 0x90, 4), 0x2);

loc_486C9E:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486CB0;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486CBF;
    }

loc_486CB0:
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->eax + 0x90, 4), 0x3);

loc_486CBF:
	mov(mv, &ts->al, x86::mem(0x89E7E2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486CD1;
    }
	mov(mv, &ts->eax, x86::mem(0x890100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486CE1;
    }

loc_486CD1:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, x86::mem(ts->ecx + 0x90, 4), 0x4);

loc_486CE1:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x82B918, 4), 0x0);
	game::sub_4869A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0B8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	imul(&ts->eax, ts->eax, 0x2C);
	mov(mv, x86::mem(ts->eax + 0x82B0BC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_486D4D;
    }

loc_486D26:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	imul(&ts->edx, ts->edx, 0x2C);
	push(mv, &ts->esp, 0x0);
	add(&ts->edx, 0x82B098);
	push(mv, &ts->esp, ts->edx);
	game::sub_4792F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_486D26;
    }

loc_486D4D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x84, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_486D95;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486D95;
    }
	mov(&ts->ecx, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_486D70:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486D8B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_486D70;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_486D8B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486D95;
    }
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ecx);

loc_486D95:
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);

loc_486DA0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_486DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FAAA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486E68;
    }
	mov(mv, &ts->al, x86::mem(0x82B90C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486E68;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xAC, 4));
	mov(&ts->ebx, 0x8);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_486DE0:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_486DF2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x90, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));

loc_486DF2:
	add(&ts->esi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_486DE0;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xCC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_486E68;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486E16;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486E25;
    }

loc_486E16:
	mov(&ts->eax, 0x2);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_486E25:
	mov(mv, &ts->al, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_486E3D;
    }
	mov(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_486E3D:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_486E4F;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_486E5E;
    }

loc_486E4F:
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_486920(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_486E5E:
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_486920(ts, mv);

loc_486E68:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_486E70(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_486E8F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_486B30(ts, mv);
	retn(mv, &ts->esp);

loc_486E8F:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_486EA0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x7FAAA8, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_486EBF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_486C10(ts, mv);
	retn(mv, &ts->esp);

loc_486EBF:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_486ED0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_5E68D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setnz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_486EF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x82DA88, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_486F10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x82DB0C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_486F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_486F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_486FF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(&ts->ecx, ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);
}

void sub_487040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_487080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4870B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_487120(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_487160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_487190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x20);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	game::sub_43C9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_487210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C9C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_487270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0xC, 4));
	add(&ts->ecx, 0x30);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_487320(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	fchs(&ts->fp, x86::fp_index(0));
	mov(&ts->ecx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_487360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x5);
	xor_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_487394;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_487394:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	retn(mv, &ts->esp);
}

void sub_4873A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsubp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	retn(mv, &ts->esp);
}

void sub_4874E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4873A0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->esp, 0x4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp);
}

void sub_487940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xB0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x78, 4), ts->ecx);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x74, 4), 0x3F800000);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x84, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x94, 4), 0x3F800000);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0xA0, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xA4, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	game::sub_4874E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0xAC, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esp + 0xB4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	game::sub_4012B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7855D0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78BAFC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4881D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_488270(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3F800000);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esp, 4), 0x0);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48829C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);

loc_48829C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4882B3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);

loc_4882B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4882CA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);

loc_4882CA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4882E3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);

loc_4882E3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4882FA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);

loc_4882FA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_488311;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->edx);

loc_488311:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_488354;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0x0);
	mov(mv, x86::mem(ts->edx, 4), 0x0);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_488354:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488377;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fdivr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	goto loc_48838D;

loc_488377:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdivr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));

loc_48838D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4883A8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	goto loc_4883D9;

loc_4883A8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4883C9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	goto loc_4883D9;

loc_4883C9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F8, 4));

loc_4883D9:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786D94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4883F0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x8);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_488426;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_488426:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488443;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	goto loc_488451;

loc_488443:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));

loc_488451:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48849C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));

loc_48849C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4884BB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));

loc_4884BB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4884D8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	goto loc_4884DC;

loc_4884D8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_4884DC:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4884EF;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4884EF:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488508;
    }
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));

loc_488508:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_488521;
    }
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));

loc_488521:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48854E;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_4885AA;

loc_48854E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48856B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	goto loc_4885B0;

loc_48856B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4885A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D898, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	goto loc_4885B0;

loc_4885A6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_4885AA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));

loc_4885B0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4885E1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_488643;

loc_4885E1:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4885FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	goto loc_488643;

loc_4885FE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488637;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D898, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_488643;

loc_488637:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));

loc_488643:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488676;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_488676:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_488693;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_488693:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4886CE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D898, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4886CE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4886E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78D8B0);
	push(mv, &ts->esp, 0x190);
	push(mv, &ts->esp, 0x2C);
	game::sub_440DF0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78D89C);
	push(mv, &ts->esp, 0xFA);
	push(mv, &ts->esp, 0xD0);
	mov(mv, x86::mem(0x82DA3C, 4), ts->eax);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82DA40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	and_(mv, x86::mem(ts->eax + 0x14, 4), 0xFFFFFFFE);
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	and_(&ts->ecx, 0xFFFFFFFD);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_488730(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	mov(&ts->eax, 0x3E8);
	if (ts->eflags.zero) {
        goto loc_48874C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_48874C;
    }
	mov(&ts->eax, 0x12C);

loc_48874C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78D8C8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x20);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82DA38, 4), ts->eax);
	and_(mv, x86::mem(ts->eax + 0x14, 4), 0xFFFFFFFE);
	mov(mv, &ts->eax, x86::mem(0x82DA38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	and_(&ts->ecx, 0xFFFFFFFD);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_488780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CD20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CD30(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E40(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x82DA38, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_4887C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82DAAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4887FE;
    }
	mov(mv, &ts->eax, x86::mem(0x82DAB0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4887DB;
    }
	mov(mv, &ts->eax, x86::mem(0x82DAB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4887FE;
    }

loc_4887DB:
	game::sub_5B98B0(ts, mv);
	mov(mv, x86::mem(0x82DAB0, 4), 0x0);
	mov(mv, x86::mem(0x82DAB4, 4), 0x0);
	mov(mv, x86::mem(0x82DAB8, 4), 0x0);

locret_4887FE:
	retn(mv, &ts->esp);
}

void sub_488800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x82DA6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48881B;
    }
	mov(mv, &ts->eax, x86::mem(0x82DA70, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x82DA74, 4));
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_48881B;
    }
	mov(mv, x86::mem(0x82DA74, 4), ts->eax);

loc_48881B:
	mov(mv, &ts->edx, x86::mem(0x82CC24, 4));
	mov(mv, &ts->eax, x86::mem(0x82DA5C, 4));
	mov(mv, &ts->ecx, x86::mem(0x82CC28, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x82DA78, 4));
	sub(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(0x82DA6C, 4), 0x0);
	mov(mv, x86::mem(0x82DA70, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488852;
    }
	mov(mv, x86::mem(0x82DA78, 4), ts->eax);

loc_488852:
	mov(mv, &ts->edi, x86::mem(0x82CC1C, 4));
	mov(mv, x86::mem(0x82DA7C, 4), ts->eax);
	mov(mv, x86::mem(0x82CC1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82DA54, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(0x82CC20, 4), ts->edi);
	mov(mv, x86::mem(0x82CC24, 4), ts->ecx);
	mov(mv, x86::mem(0x82CC28, 4), ts->edx);
	mov(mv, x86::mem(0x82DA58, 4), ts->ecx);
	mov(mv, x86::mem(0x82DA5C, 4), ts->ecx);
	mov(mv, x86::mem(0x82DA60, 4), ts->eax);
	mov(mv, x86::mem(0x82DA68, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_4888A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_5B98A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	or_(&ts->esi, 0x10);
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4888BF;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4888C2;
    }

loc_4888BF:
	or_(&ts->esi, 0x2);

loc_4888C2:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4888CC;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4888CF;
    }

loc_4888CC:
	or_(&ts->esi, 0x1);

loc_4888CF:
	mov(mv, &ts->eax, x86::mem(0x89E7A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4888DD;
    }
	or_(&ts->esi, 0x8);
	goto loc_4888E5;

loc_4888DD:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4888E5;
    }
	or_(&ts->esi, 0x4);

loc_4888E5:
	test(&ts->eflags, ts->esi, 0x1800);
	if (ts->eflags.zero) {
        goto loc_4888F0;
    }
	or_(&ts->esi, 0x40);

loc_4888F0:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4888F8;
    }
	or_(&ts->esi, 0x20);

loc_4888F8:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_5C26E0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_488910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x82DA80, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_48892E;
    }

loc_488920:
	cmp(mv, &ts->eflags, x86::mem(0x82D530, 4), ts->edx);
	if (ts->eflags.zero) {
        goto locret_488947;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_488920;
    }

loc_48892E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x82D530, 4), ts->edx);
	mov(mv, x86::mem(0x82D5C0, 4), ts->eax);
	inc(&ts->ecx);
	mov(mv, x86::mem(0x82DA80, 4), ts->ecx);

locret_488947:
	retn(mv, &ts->esp);
}

void sub_488950(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82DA80, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4889C7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);

loc_488962:
	cmp(mv, &ts->eflags, x86::mem(0x82D530, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_488973;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_488962;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_488973:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4889C6;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	if (!ts->eflags.carry) {
        goto loc_4889C0;
    }
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	shl(&ts->edx, 0x2);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x2);
	lea(mv, &ts->edi, x86::mem(0x82D5C0, 4));
	lea(mv, &ts->esi, x86::mem(0x82D5C4, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	lea(mv, &ts->ebx, x86::mem(0x82D530, 4));
	lea(mv, &ts->ebp, x86::mem(0x82D534, 4));
	mov(&ts->ecx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ebp);
	mov(&ts->edi, ts->ebx);
	shr(&ts->ecx, 0x2);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4889C0:
	mov(mv, x86::mem(0x82DA80, 4), ts->edx);

loc_4889C6:
	pop(mv, &ts->esp, ts->esi);

loc_4889C7:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4889D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4889DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	retn(mv, &ts->esp, 0x4);

loc_4889DE:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_4889E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	retn(mv, &ts->esp, 0x4);

loc_4889E8:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4889F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5CE510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488A96;
    }
	test(&ts->eflags, ts->bl, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x5C, 4));
	if (ts->eflags.zero) {
        goto loc_488A46;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DB50(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_488910(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);

loc_488A46:
	test(&ts->eflags, ts->bl, 0x2);
	if (ts->eflags.zero) {
        goto loc_488A88;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x78D8E0);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_488910(ts, mv);
	add(&ts->esp, 0x8);

loc_488A88:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_488A96:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);
}

void sub_488AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->bl, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_488AB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	goto loc_488ABE;

loc_488AB2:
	test(&ts->eflags, ts->bl, 0x2);
	if (ts->eflags.zero) {
        goto loc_488ABC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	goto loc_488ABE;

loc_488ABC:
	xor_(&ts->eax, ts->eax);

loc_488ABE:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_488950(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_5CE6C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_488AE0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x29, 1), ts->al);
	retn(mv, &ts->esp);
}

void sub_488B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5B96A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x40, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->edi, ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5B96D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_488B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x29, 1), 0x0);
	retn(mv, &ts->esp);
}

void sub_488B60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x28, 1), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x29, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_488B70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	retn(mv, &ts->esp);
}

void sub_488B80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x29, 1));
	retn(mv, &ts->esp);
}

void sub_488B90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	or_(mv, x86::mem(ts->eax + 0x1B, 1), 0x80);
	retn(mv, &ts->esp);
}

void sub_488BA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xAC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	add(mv, x86::mem(ts->ecx + 0xB0, 4), ts->edx);
	retn(mv, &ts->esp, 0x4);
}

void sub_488BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_488C22;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488C22;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_488C22;
    }
	xor_(&ts->ebx, ts->ebx);
	dec(&ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_488C22;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_488BF0:
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->ebx), 4));
	cdq(&ts->eax, ts->edx);
	sub(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ecx, ts->eax);
	sar(&ts->ecx, 0x1);
	mov(&ts->eax, ts->ecx);
	imul(&ts->eax, ts->esi);
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ebp), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (!ts->eflags.carry) {
        goto loc_488C13;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx - 0x1, 4));
	goto loc_488C1E;

loc_488C13:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_488C29;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x1, 4));

loc_488C1E:
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488BF0;
    }

loc_488C22:
	xor_(&ts->eax, ts->eax);

loc_488C24:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_488C29:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488C24;
    }
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->esi);
	add(&ts->edx, ts->ebp);

loc_488C33:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_488C24;
    }
	sub(&ts->eax, ts->esi);
	sub(&ts->edx, ts->esi);
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_488C33;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_488C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_488CAA;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488CAA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_488CAA;
    }
	xor_(&ts->ebx, ts->ebx);
	dec(&ts->ebp);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_488CAA;
    }

loc_488C78:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ebp), 4));
	cdq(&ts->eax, ts->edx);
	sub(&ts->eax, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	mov(&ts->esi, ts->eax);
	sar(&ts->esi, 0x1);
	mov(&ts->eax, ts->esi);
	imul(&ts->eax, ts->edi);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->ecx), 1));
	cmp(&ts->eflags, ts->dl, ts->cl);
	if (!ts->eflags.carry) {
        goto loc_488CA1;
    }
	lea(mv, &ts->ebp, x86::mem(ts->esi - 0x1, 4));
	goto loc_488CA6;

loc_488CA1:
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_488CB1;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1, 4));

loc_488CA6:
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488C78;
    }

loc_488CAA:
	xor_(&ts->eax, ts->eax);

loc_488CAC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_488CB1:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488CAC;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, ts->eax);
	sub(&ts->ecx, ts->edi);
	add(&ts->ecx, ts->ebx);
	nop();

loc_488CC0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_488CAC;
    }
	sub(&ts->eax, ts->edi);
	sub(&ts->ecx, ts->edi);
	dec(&ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_488CC0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_488CE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_488D00;
    }
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_488D1A;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->esi), 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_488D1A;
    }

loc_488D00:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x9C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_488D20;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD8, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_488D1A;
    }
	add(&ts->edx, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_488D20;
    }

loc_488D1A:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_488D20:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_488D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_488D4D;
    }
	if (!ts->eflags.zero) {
        goto loc_488D51;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x10, 4));
	if (!ts->eflags.carry) {
        goto loc_488D51;
    }

loc_488D4D:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_488D51:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_488D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x11, 1), 0x20);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_488D88;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	dec(&ts->eax);
	add(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	not(&ts->eax);
	and_(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0xC);

loc_488D88:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xAC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xB0, 4));
	add(&ts->esp, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebx + 0xAC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0xB0, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	sub(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_488DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x90, 4), 0x1);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_488E1A;
    }
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->edi);
	add(&ts->esp, 0x4);

loc_488E1A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_488E20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	retn(mv, &ts->esp, 0xC);
}

void sub_488E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	if (ts->eflags.zero) {
        goto locret_488E7E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_488E7D;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488E7D;
    }
	add(&ts->eax, 0xC);
	mov(&ts->esi, ts->edx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_488E60:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_488E76;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edi);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->edx);

loc_488E76:
	add(&ts->eax, 0x10);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_488E60;
    }
	pop(mv, &ts->esp, ts->edi);

loc_488E7D:
	pop(mv, &ts->esp, ts->esi);

locret_488E7E:
	retn(mv, &ts->esp);
}

void sub_488E80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488EA9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);

loc_488EA9:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_488EB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488EBB;
    }
	add(&ts->eax, 0x70);
	retn(mv, &ts->esp);

loc_488EBB:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_488EC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488ECF;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0xE, 1));
	and_(&ts->eax, 0x40);
	retn(mv, &ts->esp);

loc_488ECF:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_488EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488EEC;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x16, 2));
	retn(mv, &ts->esp);

loc_488EEC:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_488EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78D90C);
	push(mv, &ts->esp, 0x1388);
	push(mv, &ts->esp, 0x18);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x82DA88, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_488F10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x400);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x40C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_488F8A;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x410, 4));
	cmp(&ts->eflags, ts->esi, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_488F8A;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_488F8A;
    }
	if (!ts->eflags.zero) {
        goto loc_488F46;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x400);
	retn(mv, &ts->esp);

loc_488F46:
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_488F73;
    }
	push(mv, &ts->esp, ts->ebx);
	nop();

loc_488F50:
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->ecx*4), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488F6D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488F6D;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x84, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_488F6D;
    }
	mov(mv, x86::mem(ts->esp + (ts->edx*4) + 0xC, 4), ts->eax);
	inc(&ts->edx);

loc_488F6D:
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_488F50;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_488F73:
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_489200(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x400);
	retn(mv, &ts->esp);

loc_488F8A:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x400);
	retn(mv, &ts->esp);
}

void sub_488FA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x80, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x1B, 1));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);

loc_488FB2:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_488FE3;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_488FE3;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488FD4;
    }
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_488FE3;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->ecx*4) - 0x5, 4));
	shl(&ts->edi, 0x4);
	add(&ts->edi, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.carry) {
        goto loc_488FE3;
    }
	add(&ts->eax, 0x50);
	goto loc_488FD6;

loc_488FD4:
	mov(&ts->eax, ts->edx);

loc_488FD6:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_488FE3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_488FB2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_488FE3:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_488FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x84, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4891F6;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4891F6;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4891F6;
    }
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0xA, 2));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4891F6;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	goto loc_489050;

loc_489042:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	goto loc_489050;

loc_489050:
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + (ts->ecx) + 0x4, 4));
	add(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	or_(&ts->esi, 0xFFFFFFFF);
	xor_(&ts->edi, ts->edi);
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4891DC;
    }
	goto loc_4890A0;

loc_489096:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4890A0:
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4890DC;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi), 4));
	cdq(&ts->eax, ts->edx);
	sub(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	sar(&ts->eax, 0x1);
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_4890C2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 4));
	goto loc_4890CB;

loc_4890C2:
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4890C9;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1, 4));
	goto loc_4890CB;

loc_4890C9:
	mov(&ts->esi, ts->eax);

loc_4890CB:
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_489096;
    }
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4891DC;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_4890DC:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4890F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*4) - 0x4, 4));

loc_4890E7:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4890F9;
    }
	dec(&ts->esi);
	sub(&ts->eax, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4890E7;
    }

loc_4890F9:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebp + 0xC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4891AE;
    }

loc_489102:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4891AE;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4891A2;
    }
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0x5, 1));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0x7, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x8);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));

loc_4891A2:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_489102;
    }

loc_4891AE:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CF10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	game::nullsub_4(ts, mv);

loc_4891DC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->ecx, 0xC);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_489042;
    }

loc_4891F6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_489200(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48936C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48936C;
    }
	if (!ts->eflags.zero) {
        goto loc_48922A;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_48922A:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edx, ts->eax);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48927B;
    }
	mov(&ts->eax, ts->esi);
	sub(&ts->edx, ts->esi);
	mov(&ts->esi, ts->ebp);
	mov(&ts->edi, ts->edi);

loc_489250:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_489268;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x84, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_489268;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 2));
	add(&ts->edi, ts->ecx);
	goto loc_48926E;

loc_489268:
	mov(mv, x86::mem(ts->eax, 4), 0x0);

loc_48926E:
	mov(mv, x86::mem(ts->edx + (ts->eax), 4), 0x0);
	add(&ts->eax, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_489250;
    }

loc_48927B:
	game::sub_43BDF0(ts, mv);
	lea(mv, &ts->edx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->edx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48932B;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4892B0:
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_489321;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	goto loc_4892D0;

loc_4892CA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->edi, ts->edi);

loc_4892D0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4892FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x84, 4));
	movsx(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->ecx), 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4892FA;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*8), 4));
	if (ts->eflags.zero) {
        goto loc_4892F6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx, 4));
	if (!ts->eflags.carry) {
        goto loc_4892FA;
    }

loc_4892F6:
	mov(&ts->edx, ts->eax);
	mov(&ts->ebx, ts->edi);

loc_4892FA:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x2C, 4));

loc_4892FE:
	inc(&ts->edi);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4892CA;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_489321;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(mv, x86::mem(ts->eax + (ts->ebx*4), 4));

loc_489321:
	dec(mv, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_4892B0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_48932B:
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48934C;
    }

loc_489331:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->esi*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_489347;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_488FF0(ts, mv);

loc_489347:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_489331;
    }

loc_48934C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_48936C:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_489380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_489394;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_489394:
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4893A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x7, 1));
	sub(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4895D4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	movzx(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 1));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4895D3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x5, 1));
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x3F800000);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_489444;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_489444:
	test(&ts->eflags, ts->esi, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_489591;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0xFF);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48946B;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_48946B:
	mov(&ts->esi, ts->eax);
	shr(&ts->esi, 0x8);
	and_(&ts->esi, 0xFF);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_489488;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_489488:
	shr(&ts->eax, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	and_(&ts->eax, 0xFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4894A6;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4894A6:
	cmp(&ts->eflags, ts->edx, 0x2);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_489542;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xB8, 4));
	if (!ts->eflags.carry) {
        goto loc_4895D1;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4895D3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xBC, 4));
	add(&ts->eax, 0x10);
	mov(mv, x86::mem(ts->ecx + 0xB4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xBC, 4));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_489542:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4895D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xB0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xC0, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_489591:
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.zero) {
        goto loc_48959B;
    }
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4895D3;
    }

loc_48959B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xC8, 4));
	cmp(&ts->eflags, ts->esi, 0x18);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4895D3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->edx + (ts->esi*4), 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->ecx*4) + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC8, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC8, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4895D1:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4895D3:
	pop(mv, &ts->esp, ts->esi);

loc_4895D4:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4895E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x38);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D944, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D940, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D93C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D938, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D934, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D930, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D92C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D924, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x80, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D944, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D940, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D93C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D938, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D934, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D930, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D92C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D924, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D944, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D940, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D93C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D938, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D934, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D930, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D92C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D924, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D944, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D940, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D93C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D938, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D934, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D930, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D92C, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D924, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D920, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D928, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D91C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp, 0x14);
}

void sub_489AF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x28);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x78D784, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4895E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D948, 4));
	sub(&ts->esp, 0xC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D948, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D948, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D948, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4895E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_489BA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x5C);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	mov(&ts->ecx, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_489BF0:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x70, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->eax - 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax - 0x20, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x6C, 4));
	if (!ts->eflags.zero) {
        goto loc_489BF0;
    }
	add(&ts->esp, 0x5C);
	retn(mv, &ts->esp, 0x4);
}

void sub_489ED0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48A158;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x80, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(6));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_489F92;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_489F92:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(6));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48A039;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_48A039:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x88, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(6));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48A0E0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_48A0E0:
	fsqrt(&ts->fp, x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48A156;
    }
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(&ts->eax, ts->edx);
	mov(&ts->edx, 0x3);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_48A100:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->eax, 0x4);
	dec(&ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x24, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x5C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x5C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x6C, 4));
	if (!ts->eflags.zero) {
        goto loc_48A100;
    }

loc_48A156:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_48A158:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48A26B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(6));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(6));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(7));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48A269;
    }
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x5C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x9C, 4));
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);

loc_48A269:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_48A26B:
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_48A280(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x3B700);
	if (!ts->eflags.zero) {
        goto loc_48A2AB;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(0x82DADC, 4), ts->eax);
	mov(&ts->eax, 0x8D3DCB09);
	mul(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	shr(&ts->edx, 0x6);
	mov(mv, x86::mem(0x82DAE0, 4), ts->edx);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_48A2AB:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_48A2B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x3B700);
	if (!ts->eflags.zero) {
        goto locret_48A2CF;
    }
	mov(mv, x86::mem(0x82DADC, 4), ts->eax);
	mov(mv, x86::mem(0x82DAE0, 4), ts->eax);
	mov(&ts->eax, 0x1);

locret_48A2CF:
	retn(mv, &ts->esp);
}

void sub_48A2D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x82DADC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48A2FE;
    }
	mov(mv, &ts->edx, x86::mem(0x82DAE0, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48A2FE;
    }
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48A2FE;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ecx, ts->edi);

loc_48A2F2:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_48A306;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x74);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48A2F2;
    }

loc_48A2FE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x7F3E10);
	retn(mv, &ts->esp);

loc_48A306:
	imul(&ts->eax, ts->eax, 0x74);
	add(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48A310(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C390(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C390(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_48A3B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4012B0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4012B0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4012B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xCC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC8, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD0, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xD4, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xD8, 4));
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xDC, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0xE0, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ecx);
	game::sub_4012B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x124, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x128, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x12C, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x120, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x134, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x130, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x138, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x13C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x134, 4));
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x144, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x140, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x148, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x148, 4));
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x154, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x150, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x158, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x15C, 4));
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x154, 4));
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x158, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x16C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x164, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x160, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x168, 4));
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x17C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x174, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x170, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x178, 4));
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x178, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x184, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x180, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x188, 4));
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->edx);
	mov(&ts->eax, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x188, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x19C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x194, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x190, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x198, 4));
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->eax, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x194, 4));
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x198, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1AC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1A4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1A8, 4));
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->eax, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->esi + 0x1AC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1A8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1BC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1B4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1B0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1B8, 4));
	mov(&ts->eax, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B4, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1B8, 4));
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_48A6A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xB4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5BB190(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48A894;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(0x8654A4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edx, 0x3);
	setz(ts->eflags, &ts->al);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	movzx(&ts->eax, ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero) {
        goto loc_48A7D8;
    }
	mov(mv, &ts->ecx, x86::mem(0x78D794, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D790, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	goto loc_48A7E8;

loc_48A7D8:
	mov(mv, &ts->edx, x86::mem(0x78D78C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D788, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);

loc_48A7E8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48A823;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	goto loc_48A83C;

loc_48A823:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48A83C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_48A83C:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	game::sub_43D010(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ebx + 0xCC, 4), 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ebx + 0xC8, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0xC4, 4));

loc_48A894:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48AAFC;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48AAFC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0xE0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC0, 4));
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC4, 4));
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC8, 4));
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x3C, 4), ts->eax);

loc_48AAFC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48AB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x70);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_48AB20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x82DAE8, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x7F3D44, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(0x82DAE8, 4));
	if (!ts->eflags.zero) {
        goto loc_48AB40;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48AB40:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xC, 1));
	imul(&ts->eax, ts->eax, 0xC8);
	add(&ts->eax, ts->ecx);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x82D398, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(0x82CC30, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48AB60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8358E0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_48ABF6;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(0x8358E0, 4), 0x1);
	xor_(&ts->edi, ts->edi);
	nop();

loc_48AB80:
	mov(mv, &ts->ebx, x86::mem(0x7F3D44, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48ABEC;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	setnz(ts->eflags, &ts->dl);
	mov(&ts->ecx, ts->edi);
	imul(&ts->ecx, ts->ecx, 0x320);
	dec(&ts->dl);
	lea(mv, &ts->esi, x86::mem(ts->ebp + (ts->ebp*2), 4));
	shl(&ts->esi, 0x4);
	add(&ts->esi, 0x82DC08);
	add(&ts->ecx, 0x82CC30);
	and_(&ts->edx, 0x2);
	add(&ts->ebp, ts->ebx);

loc_48ABB2:
	mov(&ts->eax, ts->esi);
	add(&ts->esi, 0x30);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x2D, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x28, 4), 0xBF800000);
	if (!ts->eflags.zero) {
        goto loc_48ABDD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D94C, 4));
	goto loc_48ABE3;

loc_48ABDD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAB0, 4));

loc_48ABE3:
	add(&ts->ecx, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48ABB2;
    }

loc_48ABEC:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48AB80;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

locret_48ABF6:
	retn(mv, &ts->esp);
}

void sub_48AC00(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8358E4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8358E4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48AC35;
    }
	mov(mv, &ts->eax, x86::mem(0x82DAF0, 4));
	not(&ts->eax);
	mov(mv, x86::mem(0x8358E4, 4), 0x0);
	mov(mv, x86::mem(0x82DAF0, 4), ts->eax);

loc_48AC35:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82DAE8, 4), ts->eax);
	mov(mv, x86::mem(0x82DAEC, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_48AC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F399C, 4));
	retn(mv, &ts->esp);
}

void sub_48AC60(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_5BC300;
}

void sub_48AC70(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48AC98;
    }
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x8);

loc_48AC98:
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x8);
}

void sub_48ACB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48ACF5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	xor_(&ts->eax, ts->eax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x8);

loc_48ACF5:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48AD35;
    }
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x8);

loc_48AD35:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x8);
}

void sub_48AD50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48ADE7;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	xor_(&ts->eax, ts->eax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x8);

loc_48ADE7:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48AE26;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_48AE26:
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x8);
}

void sub_48AE30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x9C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48B147;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43C780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	add(&ts->ecx, 0x40);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x38, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x3F800000);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x50, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0xC);

loc_48B147:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_48B150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_48B162;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x48B17C, 1));
	jmp(x86::mem(0x48B174, 4));

loc_48B169:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

def_48B162:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_48B190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_48B1A2;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x48B1CC, 1));
	jmp(x86::mem(0x48B1C0, 4));

loc_48B1A9:
	mov(&ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	retn(mv, &ts->esp);

def_48B1A2:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	retn(mv, &ts->esp);
}

void sub_48B1E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	imul(&ts->eax, ts->eax, 0x70);
	add(&ts->eax, 0x832DE0);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48B1F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78D950);
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, 0x7C);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x82DB0C, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_48B210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x7F3D54, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_48B220(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48B248;
    }

loc_48B238:
	inc(&ts->ecx);
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48B238;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);

loc_48B248:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48B267;
    }

loc_48B257:
	inc(&ts->ecx);
	mov(&ts->esi, 0x1);
	shl(&ts->esi, ts->cl);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48B257;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);

loc_48B267:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->ecx, 0xFFFFFFFC);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, 0x7D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_48B27C;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x48B384, 1));
	jmp(x86::mem(0x48B36C, 4));

loc_48B283:
	mov(&ts->ebx, ts->edx);
	goto loc_48B2A8;

loc_48B287:
	mov(&ts->ebx, ts->edx);
	imul(&ts->ebx, ts->eax);
	shl(&ts->ebx, 0x1);
	goto def_48B27C;

loc_48B290:
	imul(&ts->edx, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->edx*2), 4));
	goto def_48B27C;

loc_48B298:
	mov(&ts->ebx, ts->edx);
	imul(&ts->ebx, ts->eax);
	shl(&ts->ebx, 0x2);
	goto def_48B27C;

loc_48B2A2:
	lea(mv, &ts->ebx, x86::mem(ts->edx - 0x1, 4));
	and_(&ts->ebx, 0x1);

loc_48B2A8:
	imul(&ts->ebx, ts->eax);

def_48B27C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	mov(&ts->ecx, 0x6);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x23, 1), 0x0);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x30, 1));
	mov(mv, &ts->dx, x86::mem(ts->esp + 0x28, 2));
	mov(mv, x86::mem(ts->ebp + 0x4A, 1), ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x14, 1));
	mov(mv, x86::mem(ts->ebp + 0x24, 4), ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x2C, 2));
	mov(mv, x86::mem(ts->ebp + 0x44, 2), ts->dx);
	mov(mv, &ts->dx, x86::mem(ts->esp + 0x38, 2));
	mov(mv, x86::mem(ts->ebp + 0x48, 1), ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x3C, 1));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x46, 2), ts->ax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x4C, 2), ts->dx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	mov(mv, x86::mem(ts->ebp + 0x55, 1), ts->cl);
	mov(&ts->ecx, 0x100);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x4B, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x49, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x38, 1));
	mov(mv, x86::mem(ts->ebp + 0x54, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x51, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x4F, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x57, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x52, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x5E, 2), ts->ax);
	mov(mv, x86::mem(ts->ebp + 0x60, 2), ts->ax);
	mov(mv, x86::mem(ts->ebp + 0x62, 2), ts->cx);
	mov(mv, x86::mem(ts->ebp + 0x64, 2), ts->cx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->ebp + 0x68, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x4E, 1), 0x1);
	mov(mv, x86::mem(ts->ebp + 0x56, 1), ts->dl);
	mov(mv, x86::mem(ts->ebp + 0x6C, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x70, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x74, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x78, 4), 0x1);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x28);
}

void sub_48B410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	sub(&ts->esi, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->esi);
	add(&ts->eax, 0x10);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_48B450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48B461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	retn(mv, &ts->esp, 0x10);

loc_48B461:
	cmp(&ts->eflags, ts->eax, 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_48B47B;
    }
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_48B47B:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fisub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	retn(mv, &ts->esp, 0x10);
}

void sub_48B4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x34202);
	if (ts->eflags.zero) {
        goto loc_48B4AF;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_48B4AF:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x17, 4));
	mov(&ts->edx, ts->eax);
	and_(&ts->edx, 0xFFFFFFF0);
	mov(mv, x86::mem(0x82DB14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	sub(&ts->edx, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx) + 0x8, 4));
	mov(&ts->eax, 0xF0F0F0F1);
	mul(&ts->eax, ts->ecx);
	shr(&ts->edx, 0x8);
	mov(mv, x86::mem(0x82DB18, 4), ts->edx);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_48B4E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->esi);
	mov(mv, x86::mem(0x82DB1C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48B51E;
    }
	mov(mv, &ts->edx, x86::mem(0x82DB18, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48B51E;
    }
	mov(mv, &ts->eax, x86::mem(0x82DB14, 4));

loc_48B505:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48B512;
    }
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x82DB1C, 4), ts->ecx);

loc_48B512:
	add(&ts->eax, 0x110);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_48B505;
    }
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48B540;
    }

loc_48B51E:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x830D90, 4), 0x0);
	mov(mv, x86::mem(0x830D94, 4), 0x0);
	mov(mv, x86::mem(0x830D98, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_48B540:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(&ts->edx, 0x2);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48B571;
    }
	mov(mv, x86::mem(0x82DB1C, 4), ts->esi);
	mov(mv, x86::mem(0x830D90, 4), 0x0);
	mov(mv, x86::mem(0x830D94, 4), 0x0);
	mov(mv, x86::mem(0x830D98, 4), 0x0);
	goto loc_48B58A;

loc_48B571:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	mov(mv, x86::mem(0x830D90, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(0x830D94, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(0x830D98, 4), ts->ecx);

loc_48B58A:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x44);
	mov(&ts->edi, 0x82D270);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(0x82D290, 4), ts->eax);
	mov(mv, x86::mem(0x82D294, 4), ts->eax);
	mov(mv, x86::mem(0x82D298, 4), ts->eax);
	mov(mv, x86::mem(0x82D29C, 4), ts->eax);
	mov(mv, x86::mem(0x82D2A0, 4), ts->eax);
	mov(mv, x86::mem(0x82D2A4, 4), ts->eax);
	mov(mv, x86::mem(0x82D2B8, 4), ts->eax);
	mov(mv, x86::mem(0x82D2BC, 4), ts->eax);
	mov(&ts->al, 0x80);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82D2A8, 4), ts->esi);
	mov(mv, x86::mem(0x82D2C4, 4), ts->esi);
	mov(mv, x86::mem(0x82D2CC, 4), ts->esi);
	mov(mv, x86::mem(0x82D2E8, 4), ts->esi);
	mov(mv, x86::mem(0x82D30C, 4), ts->esi);
	mov(mv, x86::mem(0x82D270, 4), ts->edx);
	mov(mv, x86::mem(0x82D2AC, 4), ts->ecx);
	mov(mv, x86::mem(0x82D2B0, 4), 0x3F800000);
	mov(mv, x86::mem(0x82D2B4, 4), 0x42700000);
	mov(mv, x86::mem(0x82D2C0, 1), 0xFF);
	mov(mv, x86::mem(0x82D2C1, 1), 0xC8);
	mov(mv, x86::mem(0x82D2C2, 1), 0x64);
	mov(mv, x86::mem(0x82D2C3, 1), ts->al);
	mov(mv, x86::mem(0x82D2C8, 4), 0x0);
	mov(mv, x86::mem(0x82D2D0, 4), ts->ecx);
	mov(mv, x86::mem(0x82D2D4, 4), 0x3F000000);
	mov(mv, x86::mem(0x82D2D8, 4), 0x43A00000);
	mov(mv, x86::mem(0x82D2DC, 4), 0x0);
	mov(mv, x86::mem(0x82D2E0, 4), 0x0);
	mov(mv, x86::mem(0x82D2E4, 1), 0x82);
	mov(mv, x86::mem(0x82D2E5, 1), 0x9F);
	mov(mv, x86::mem(0x82D2E6, 1), 0x7A);
	mov(mv, x86::mem(0x82D2E7, 1), ts->al);
	mov(mv, x86::mem(0x82D2EC, 4), 0x0);
	mov(mv, x86::mem(0x82D2F0, 4), ts->edx);
	mov(mv, x86::mem(0x82D2F4, 4), ts->ecx);
	mov(mv, x86::mem(0x82D2F8, 4), 0x3F333333);
	mov(mv, x86::mem(0x82D2FC, 4), 0x44480000);
	mov(mv, x86::mem(0x82D300, 4), 0xC1100000);
	mov(mv, x86::mem(0x82D304, 4), 0x41E00000);
	mov(mv, x86::mem(0x82D308, 1), 0x9F);
	mov(mv, x86::mem(0x82D309, 1), 0x7A);
	mov(mv, x86::mem(0x82D30A, 1), 0x4B);
	mov(mv, x86::mem(0x82D30B, 1), ts->al);
	mov(mv, x86::mem(0x82D310, 4), 0x3E4CCCCD);
	mov(mv, x86::mem(0x82D314, 4), ts->edx);
	mov(mv, x86::mem(0x82D318, 4), ts->ecx);
	mov(mv, x86::mem(0x82D31C, 4), 0x3E99999A);
	mov(mv, x86::mem(0x82D320, 4), 0x44480000);
	mov(mv, x86::mem(0x82D324, 4), 0x41E00000);
	mov(mv, x86::mem(0x82D328, 4), 0x41100000);
	mov(mv, x86::mem(0x82D32C, 1), 0xA6);
	mov(mv, x86::mem(0x82D32D, 1), 0x77);
	mov(mv, x86::mem(0x82D32E, 1), 0x48);
	mov(mv, x86::mem(0x82D32F, 1), ts->al);
	mov(mv, x86::mem(0x82D330, 4), 0x4000);
	mov(mv, x86::mem(0x82D334, 4), 0x3E4CCCCD);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48B740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x34202);
	if (!ts->eflags.zero) {
        goto locret_48B75F;
    }
	mov(mv, x86::mem(0x82DB14, 4), ts->eax);
	mov(mv, x86::mem(0x82DB18, 4), ts->eax);
	mov(&ts->eax, 0x1);

locret_48B75F:
	retn(mv, &ts->esp);
}

void sub_48B760(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82DB1C, 4), ts->eax);
	mov(mv, x86::mem(0x830D90, 4), ts->eax);
	mov(mv, x86::mem(0x830D94, 4), ts->eax);
	mov(mv, x86::mem(0x830D98, 4), ts->eax);
	mov(mv, x86::mem(0x82D5A8, 4), ts->eax);
	mov(mv, x86::mem(0x82D5AC, 4), ts->eax);
	mov(mv, x86::mem(0x82D5B0, 4), ts->eax);
	mov(mv, x86::mem(0x82D5B4, 4), ts->eax);
	mov(mv, x86::mem(0x82D5B8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_48B790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_48B7B0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(&ts->ecx, ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	retn(mv, &ts->esp, 0x14);
}

void sub_48B7F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_48B830(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xD0);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48B8AB;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->ecx, 0x32);
	mov(&ts->edi, ts->ebp);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82DA44, 4));
	inc(&ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82DA44, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x3F);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xCF, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48B896;
    }
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_48B896:
	add(&ts->ebx, 0x40);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_48B8AB:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48B8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	mov(&ts->edi, ts->edi);

loc_48B8C0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48B8F2;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48B8CC;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	goto loc_48B8D2;

loc_48B8CC:
	mov(mv, &ts->esi, x86::mem(0x8357E8, 4));

loc_48B8D2:
	mov(&ts->ecx, 0x8357E8);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48B8F2;
    }

loc_48B8E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48B8EC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48B8F7;
    }

loc_48B8EC:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48B8E0;
    }

loc_48B8F2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_48B8F7:
	push(mv, &ts->esp, ts->esi);
	game::sub_48B830(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48B8C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	goto loc_48B8C0;
}

void sub_48B920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x74);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48B95B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48B961;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x3F800000);
	goto loc_48B965;

loc_48B95B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));

loc_48B961:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_48B965:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48B994;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48B99A;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x3F800000);
	goto loc_48B99E;

loc_48B994:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));

loc_48B99A:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_48B99E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48BBE1;
    }

loc_48B9B4:
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0xA0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x4);
	goto loc_48B9E0;

loc_48B9E0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_488270(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x18);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48BA67;
    }
	goto loc_48BA50;

loc_48BA50:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_48BA50;
    }
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_48BA67:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48BA99;
    }
	goto loc_48BA80;

loc_48BA80:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_48BA80;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_48BA9B;

loc_48BA99:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_48BA9B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48BBE8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48BAD5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_48BAD5:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48BBF3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48BB16;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_48BB16:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4883F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	add(&ts->esp, 0x18);
	add(&ts->esi, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x14, 4));
	dec(&ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_48B9E0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x9C, 4));
	sub(&ts->esp, 0x10);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786348, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_487940(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	mov(mv, x86::mem(ts->ebx + 0x30, 4), ts->esi);
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48B9B4;
    }

loc_48BBE1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_48BBE8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_48BAD5;

loc_48BBF3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_48BB16;
}

void sub_48BC00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48BC2C;
    }
	mov(mv, &ts->esi, x86::mem(0x830D08, 4));
	mov(&ts->ecx, 0x830D08);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48BC2C;
    }

loc_48BC21:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_48BC34;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48BC21;
    }

loc_48BC2C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_48BC34:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48BC50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48BCAE;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F3940, 4));
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	xor_(&ts->eax, ts->edx);
	mov(mv, x86::mem(0x7F3940, 4), ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48BC9B;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_48BC9B:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786D84, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);

loc_48BCAE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_48BD4F;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48BD4F;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48BCDC;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_48BCDC;
    }
	cmp(&ts->eflags, ts->ecx, 0x3);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_48BD55;
    }
	goto loc_48BD52;

loc_48BCDC:
	test(&ts->eflags, ts->ecx, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	if (!ts->eflags.zero) {
        goto loc_48BCF8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));

loc_48BCF8:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_48BD29;
    }
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_487360(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	goto loc_48BD2B;

loc_48BD29:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_48BD2B:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	inc(mv, x86::mem(ts->edi + 0x50, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_48BD4F:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));

loc_48BD52:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);

loc_48BD55:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	inc(mv, x86::mem(ts->edi + 0x50, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48BD70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	dec(mv, x86::mem(ts->ecx + 0x50, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_48BD90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x832E90, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48BDAD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));

loc_48BDAD:
	mov(mv, &ts->eax, x86::mem(0x832F00, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48BDCA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));

loc_48BDCA:
	mov(mv, &ts->eax, x86::mem(0x832E20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_48BDE7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));

locret_48BDE7:
	retn(mv, &ts->esp);
}

void sub_48BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x3E4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xCC, 4), ts->edi);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48BE1D;
    }
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->ebx);

loc_48BE1D:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_48CD27;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x280, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x320, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xA8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x238, 4), ts->esi);
	game::sub_5B7DC0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x502FD0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_401650(ts, mv);
	push(mv, &ts->esp, 0x502FD0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1EC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_401650(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x330, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x320, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x340, 4));
	mov(mv, x86::mem(ts->esp + 0x184, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x334, 4));
	mov(mv, x86::mem(ts->esp + 0x1E4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x180, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x324, 4));
	mov(mv, x86::mem(ts->esp + 0xB4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x188, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x344, 4));
	mov(mv, x86::mem(ts->esp + 0x1E0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x190, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x194, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x198, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x19C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1F0, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1F4, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x1F8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1FC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1A0, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x1A4, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1A8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1AC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x200, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x204, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x208, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x20C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1B0, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1B4, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x1B8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1BC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x210, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x214, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x218, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x21C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x18C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1E8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1EC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xF8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_48C01A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0xC8, 4), ts->ecx);
	goto loc_48C021;

loc_48C01A:
	mov(mv, x86::mem(ts->esp + 0xC8, 4), ts->ebx);

loc_48C021:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xBC, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_48C040:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48C054;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5B7DE0(ts, mv);
	add(&ts->esp, 0x4);

loc_48C054:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xCC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->esp + 0xC4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48CCF6;
    }

loc_48C071:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + (ts->edx*4) + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0xFC, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48CCDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_48C0BF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x5B4, 4));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	test(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48CCDB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x5C, 4));
	dec(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x19);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_48C0BF;
    }
	movzx(mv, &ts->edx, x86::mem(ts->edx + 0x48CD40, 1));
	jmp(x86::mem(0x48CD30, 4));

loc_48C0C6:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_48CCDB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xA0, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto def_48C0BF;
    }
	goto loc_48CCDB;

loc_48C0DD:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto def_48C0BF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xA0, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CCDB;
    }
	goto def_48C0BF;

loc_48C0F1:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xA0, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto def_48C0BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xF8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x284, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48CCDB;
    }

def_48C0BF:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xB0, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	if (ts->eflags.zero) {
        goto loc_48CCDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48C14A;
    }
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48CCDB;
    }

loc_48C14A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48C174;
    }
	mov(mv, x86::mem(ts->esp + 0x234, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x23C, 4), ts->ecx);
	game::sub_5B7E60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CCDB;
    }

loc_48C174:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48C18A;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x30, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48C18A;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x374, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_48C199;

loc_48C18A:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x374, 4));
	push(mv, &ts->esp, ts->ecx);

loc_48C199:
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x140, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3B4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	add(&ts->esp, 0x8);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_48C1DF;
    }
	mov(mv, &ts->edx, x86::mem(0x78D768, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	goto loc_48C1F9;

loc_48C1DF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D768, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_48C1F9;
    }
	mov(mv, &ts->eax, x86::mem(0x78D768, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);

loc_48C1F9:
	movsx(mv, &ts->edi, x86::mem(ts->esi + 0x19, 1));
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1A, 1));
	or_(&ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, ts->edi);
	shl(&ts->eax, ts->cl);
	mov(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xEC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x0);
	not(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF4, 4), ts->eax);
	or_(&ts->eax, 0xFFFFFFFF);
	shl(&ts->eax, ts->cl);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x90, 4), 0x0);
	not(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF0, 4), ts->eax);
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + (ts->ecx*8) + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ecx*8) + 0x14, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	if (ts->eflags.zero) {
        goto loc_48CCA2;
    }
	goto loc_48C290;

loc_48C290:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x8, 2));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x370, 4));
	mov(mv, x86::mem(ts->esp + 0xE8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D964, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4881D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C404;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48C329;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_48C329:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C40F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48C372;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_48C372:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C41A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48C3BB;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_48C3BB:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C422;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_48C428;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x7C, 4), 0x437F0000);
	goto loc_48C42C;

loc_48C404:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_48C329;

loc_48C40F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_48C372;

loc_48C41A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_48C3BB;

loc_48C422:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_48C428:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));

loc_48C42C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	mov(mv, x86::mem(ts->esp + 0x8C, 4), ts->eax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x328, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x33C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3B4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1D8, 4));
	push(mv, &ts->esp, ts->edx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(&ts->edi, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x354, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x364, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D4, 4));
	game::sub_4881D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1DC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C4D8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C4D8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D0, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	goto loc_48C4DE;

loc_48C4D8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_48C4DE:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48C505;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));

loc_48C505:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D4, 4));
	mov(mv, &ts->bx, x86::mem(ts->esi + 0xA, 2));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48C51E;
    }
	add(&ts->ebx, ts->eax);
	goto loc_48C520;

loc_48C51E:
	sub(&ts->ebx, ts->eax);

loc_48C520:
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x1F, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xF4, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xEC, 4));
	sar(&ts->eax, ts->cl);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0xF, 1));
	mov(&ts->esi, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	shr(&ts->esi, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	if (!ts->eflags.zero) {
        goto loc_48C6A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3944, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x244, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xAC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D76C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	mov(mv, x86::mem(ts->esp + 0x254, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(0x7F3944, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x260, 4));
	mov(mv, x86::mem(ts->esp + 0x248, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D76C, 4));
	mov(mv, x86::mem(ts->esp + 0x258, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(0x7F3948, 4));
	mov(mv, x86::mem(ts->esp + 0x240, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x250, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x7C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x264, 4));
	mov(mv, x86::mem(ts->esp + 0x25C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x94, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x24C, 4), 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x270, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x268, 4));
	mov(mv, x86::mem(ts->esp + 0x278, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x27C, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->esp + 0x274, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x270, 4));
	mov(mv, x86::mem(ts->esp + 0x284, 2), ts->bx);
	game::sub_5C0E10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CCAA;
    }
	goto loc_48CC59;

loc_48C6A5:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	and_(&ts->eax, 0xF);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x4);
	test(&ts->eflags, ts->bx, ts->bx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ecx) + 0x180, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->ecx) + 0x1E0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ecx) + 0x184, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ecx) + 0x188, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ecx) + 0x18C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + (ts->ecx) + 0x1E0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_48C97E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48C893;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x100, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5BAC90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x134, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x224, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x224, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x228, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x228, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x130, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x134, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x368, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x368, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	goto loc_48C97A;

loc_48C893:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48C8E4;
    }
	push(mv, &ts->esp, ts->ebx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43C370(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C2B0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	fchs(&ts->fp, x86::fp_index(0));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	goto loc_48C97E;

loc_48C8E4:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_48C932;
    }
	push(mv, &ts->esp, ts->ebx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43C370(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C2B0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fchs(&ts->fp, x86::fp_index(0));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	goto loc_48C97E;

loc_48C932:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_48C97E;
    }
	push(mv, &ts->esp, ts->ebx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43C370(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43C2B0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, ts->edx);
	fchs(&ts->fp, x86::fp_index(0));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);

loc_48C97A:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_48C97E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3944, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D76C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3948, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D76C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x310, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x140, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x144, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x148, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x310, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x160, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x164, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x168, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x310, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x170, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x174, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x178, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x150, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x290, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x154, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x158, 4));
	game::sub_5BB1C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x144, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x148, 4));
	mov(mv, x86::mem(ts->esp + 0x290, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x160, 4));
	mov(mv, x86::mem(ts->esp + 0x294, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x164, 4));
	mov(mv, x86::mem(ts->esp + 0x298, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x168, 4));
	mov(mv, x86::mem(ts->esp + 0x2A0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x170, 4));
	mov(mv, x86::mem(ts->esp + 0x2A4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x174, 4));
	mov(mv, x86::mem(ts->esp + 0x2A8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x178, 4));
	mov(mv, x86::mem(ts->esp + 0x2C0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x2C4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x154, 4));
	mov(mv, x86::mem(ts->esp + 0x2C8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x158, 4));
	mov(mv, x86::mem(ts->esp + 0x2B0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x2B4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->esp + 0x2B8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x2D0, 4), ts->edx);
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2D4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x2D8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(ts->esp + 0x2DC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x2E8, 4), ts->eax);
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2EC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2E0, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2E4, 4), ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x872E90);
	or_(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2A0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x304, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x308, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x30C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x310, 4), ts->edi);
	game::sub_5C7E80(ts, mv);

loc_48CC59:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xE8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC4, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx*8) + 0x14, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	if (!ts->eflags.zero) {
        goto loc_48C290;
    }

loc_48CCA2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48CCC7;
    }

loc_48CCAA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5CE120(ts, mv);
	add(&ts->esp, 0xC);

loc_48CCC7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xA8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xA8, 4), ts->ecx);

loc_48CCDB:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xFC, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->esp + 0xC4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48C071;
    }

loc_48CCF6:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48CD03;
    }
	game::sub_5B7E80(ts, mv);

loc_48CD03:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48C040;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xCC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xA8, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edx);

loc_48CD27:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_48CD60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x64000);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, 0x64000);
	mov(mv, x86::mem(0x82CC24, 4), ts->eax);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x82CC28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x82CC24, 4));
	push(mv, &ts->esp, 0x78D968);
	mov(mv, x86::mem(0x82DA5C, 4), ts->eax);
	add(&ts->eax, 0x64000);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x80);
	mov(mv, x86::mem(0x82DA54, 4), 0x64000);
	mov(mv, x86::mem(0x82DA60, 4), ts->eax);
	mov(mv, x86::mem(0x82DA68, 4), 0x0);
	game::sub_440DF0(ts, mv);
	mov(mv, x86::mem(0x82DA4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	and_(&ts->ecx, 0xFFFFFFFD);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	game::sub_488EF0(ts, mv);
	game::sub_48B1F0(ts, mv);
	game::sub_48DE90(ts, mv);
	game::sub_5C2F90(ts, mv);
	mov(mv, &ts->edi, x86::mem(0x7F399C, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x28);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_5BB700(ts, mv);
	game::sub_48AB60(ts, mv);
	game::sub_5C33D0(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_431840(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	goto sub_5D24F0;
}

void sub_48CE10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x832E58, 1));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_48CE54;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x832E50);
	game::sub_5BC300(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(0x832E58, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_48CE54;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x832E50);
	game::sub_5BC300(ts, mv);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);

loc_48CE54:
	pop(mv, &ts->esp, ts->edi);
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48CE68;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48CE68;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_48CE68:
	mov(&ts->eax, 0x1);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48CE80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48CEA8;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_48CE91:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CEB0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48CE91;
    }

loc_48CEA8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_48CEB0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48CED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48CF14;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_48CEE1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48CF0E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CF0E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48CF1C;
    }

loc_48CF0E:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48CEE1;
    }

loc_48CF14:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_48CF1C:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48CF40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48CF83;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));

loc_48CF50:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48CF7D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48CF7D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48CF85;
    }

loc_48CF7D:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48CF50;
    }

loc_48CF83:
	xor_(&ts->eax, ts->eax);

loc_48CF85:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48CF90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_48CED0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xA4, 4));
	and_(&ts->cl, 0xEF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_48D0B2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	test(&ts->eflags, ts->cl, 0x20);
	if (ts->eflags.zero) {
        goto loc_48D003;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_488D60(ts, mv);
	and_(mv, x86::mem(ts->esi + 0x11, 1), 0xDF);
	goto loc_48D0B2;

loc_48D003:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x14, 4));
	dec(&ts->eax);
	add(&ts->ebp, ts->eax);
	not(&ts->eax);
	and_(&ts->ebp, ts->eax);
	test(&ts->eflags, ts->cl, 0x1);
	if (ts->eflags.zero) {
        goto loc_48D0A2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->ebx, 0x8);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x78D978);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB8, 4));
	movsx(mv, &ts->eax, x86::mem(ts->eax, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x10);
	add(&ts->ebx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2000);
	if (ts->eflags.zero) {
        goto loc_48D071;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D071;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x2000);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_48D071:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(&ts->edx, ts->ebp);
	dec(&ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->eax), 4));
	not(&ts->ecx);
	and_(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_574670(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x14);

loc_48D0A2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xB4, 4));
	add(&ts->esp, 0xC);

loc_48D0B2:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48D0BC;
    }
	dec(mv, x86::mem(ts->ebx + 0xA8, 4));

loc_48D0BC:
	dec(mv, x86::mem(ts->ebp + 0x2, 2));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x2, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_48D0E9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D0D7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_48D0D7:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1, 1), ts->al);
	mov(mv, x86::mem(ts->ebp + 0x2, 2), ts->ax);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);

loc_48D0E9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8C);
	retn(mv, &ts->esp);
}

void sub_48D100(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8C);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x94, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_48D23C;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xA0, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D23A;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xA8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D23A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x12, 2));
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_48D15C;
    }
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x12, 2), ts->ax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8C);
	retn(mv, &ts->esp, 0xC);

loc_48D15C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11, 1));
	test(&ts->eflags, ts->al, 0x10);
	if (ts->eflags.zero) {
        goto loc_48D173;
    }
	and_(&ts->al, 0xDF);
	mov(mv, x86::mem(ts->esi + 0x11, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x12, 2), 0x1);
	goto loc_48D232;

loc_48D173:
	and_(&ts->al, 0x1);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	and_(&ts->al, 0x23);
	add(&ts->al, 0x20);
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x78D988);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ebp, 1));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	add(&ts->esp, 0x14);
	add(&ts->edi, ts->edx);
	test(&ts->eflags, ts->cl, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2000);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D1C1;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2008);
	goto loc_48D1E2;

loc_48D1C1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D1E2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D1E2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x2000);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_48D1E2:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	inc(mv, x86::mem(ts->esi + 0x12, 2));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	inc(mv, x86::mem(ts->ebx + 0xA8, 4));
	inc(mv, x86::mem(ts->ebp + 0x2, 2));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	or_(&ts->al, 0x10);
	push(mv, &ts->esp, 0x48CF90);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x11, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	dec(&ts->eax);
	add(&ts->ecx, ts->eax);
	not(&ts->eax);
	and_(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57B530(ts, mv);
	add(&ts->esp, 0x24);

loc_48D232:
	mov(&ts->ecx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_488BA0(ts, mv);

loc_48D23A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_48D23C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8C);
	retn(mv, &ts->esp, 0xC);
}

void sub_48D250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48D2CC;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48D271;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_48CED0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48D2CB;
    }

loc_48D271:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48D2CB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D2CB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xA4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_488BC0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D2CB;
    }
	dec(mv, x86::mem(ts->esi + 0x12, 2));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x12, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_48D2CB;
    }
	game::nullsub_1(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11, 1));
	test(&ts->eflags, ts->al, 0x10);
	if (ts->eflags.zero) {
        goto loc_48D2C2;
    }
	or_(&ts->al, 0x20);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x11, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_48D2C2:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_488D60(ts, mv);

loc_48D2CB:
	pop(mv, &ts->esp, ts->edi);

loc_48D2CC:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_48D2E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D36A;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_48D2F0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + (ts->ebx*4), 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D35F;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_48CED0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48D35F;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48D35F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D35F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xA4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_488BC0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D35F;
    }
	dec(mv, x86::mem(ts->esi + 0x12, 2));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x12, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_48D35F;
    }
	game::nullsub_1(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11, 1));
	test(&ts->eflags, ts->al, 0x10);
	if (ts->eflags.zero) {
        goto loc_48D356;
    }
	or_(&ts->al, 0x20);
	mov(mv, x86::mem(ts->esi + 0x11, 1), ts->al);
	goto loc_48D35F;

loc_48D356:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_488D60(ts, mv);

loc_48D35F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48D2F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_48D36A:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_48D370(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebx, ts->ecx);
	game::sub_48CE80(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48D3B8;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xA4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xA0, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D3B7;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->eax);

loc_48D398:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D3B0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x12, 2), 0x1);
	game::sub_48D250(ts, mv);

loc_48D3B0:
	add(&ts->esi, 0x18);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_48D398;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_48D3B7:
	pop(mv, &ts->esp, ts->esi);

loc_48D3B8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48D3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48D400;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_48D3D1:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48D3E6;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48D3FA;
    }

loc_48D3E6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D408;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_48D408;
    }

loc_48D3FA:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48D3D1;
    }

loc_48D400:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_48D408:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48D420(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x110);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_48D440:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x128, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D60D;
    }

loc_48D455:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x124, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_48CF40(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D5F1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x12, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_48D5F1;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x11, 1), 0x10);
	if (!ts->eflags.zero) {
        goto loc_48D5F1;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_48CED0(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->dl, ts->dl);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D4B9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_48D4A0:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + (ts->ecx*4), 4), ts->edi);
	setz(ts->eflags, &ts->al);
	or_(&ts->dl, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48D4A0;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_48D5F1;
    }

loc_48D4B9:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48D54C;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	and_(&ts->cl, 0x1);
	neg(&ts->cl);
	sbb(&ts->cl, ts->cl);
	and_(&ts->cl, 0x23);
	add(&ts->cl, 0x20);
	movsx(&ts->edx, ts->cl);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	add(&ts->ebp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x78D988);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11, 1));
	add(&ts->esp, 0x14);
	add(&ts->edi, ts->edx);
	test(&ts->eflags, ts->al, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x12C, 4));
	mov(&ts->ebp, 0x2000);
	if (ts->eflags.zero) {
        goto loc_48D515;
    }
	mov(&ts->ebp, 0x2008);
	goto loc_48D524;

loc_48D515:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D524;
    }
	mov(&ts->ebp, ts->eax);
	and_(&ts->ebp, 0x7);
	or_(&ts->ebp, 0x2000);

loc_48D524:
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D543;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	goto loc_48D5F1;

loc_48D543:
	add(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	goto loc_48D5F1;

loc_48D54C:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_48D5D5;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x11, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_48D5F1;
    }
	push(mv, &ts->esp, ts->edi);
	add(&ts->ebp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, 0x78D978);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x13C, 4));
	add(&ts->esp, 0x10);
	add(&ts->edi, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebp, 0x2000);
	if (ts->eflags.zero) {
        goto loc_48D59F;
    }
	mov(&ts->ebp, ts->eax);
	and_(&ts->ebp, 0x7);
	or_(&ts->ebp, 0x2000);

loc_48D59F:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D5C5;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	goto loc_48D5C9;

loc_48D5C5:
	add(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);

loc_48D5C9:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48D5F1;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_440540(ts, mv);
	goto loc_48D5EE;

loc_48D5D5:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_48D5F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D5F1;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);

loc_48D5EE:
	add(&ts->esp, 0x4);

loc_48D5F1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x128, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48D455;
    }

loc_48D60D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48D440;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x110);
	retn(mv, &ts->esp, 0xC);
}

void sub_48D630(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x428);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x438, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xA);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x434, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	call(ts, mv, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_48D736;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->edi);
	game::sub_57CEF0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x78D998);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x88, 2));
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->ax, ts->ax);
	mov(&ts->edi, 0x2000);
	if (ts->eflags.zero) {
        goto loc_48D714;
    }
	movsx(&ts->edx, ts->ax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D714;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x88, 1));
	and_(&ts->eax, 0x7);
	or_(&ts->eax, 0x2008);
	mov(&ts->edi, ts->eax);

loc_48D714:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_570FA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x488DE0);
	game::sub_57BD70(ts, mv);

loc_48D736:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48D775;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x90, 4), 0x1);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_48D774;
    }
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->edi);
	add(&ts->esp, 0x4);

loc_48D774:
	pop(mv, &ts->esp, ts->ebx);

loc_48D775:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x428);
	retn(mv, &ts->esp);
}

void sub_48D780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_48D7D8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D7D7;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_48D7BE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_48D7BE:
	mov(mv, &ts->eax, x86::mem(0x82DBC4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(0x82DBC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), 0x82DBC0);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->esi);

loc_48D7D7:
	pop(mv, &ts->esp, ts->esi);

locret_48D7D8:
	retn(mv, &ts->esp, 0x4);
}

void sub_48D7E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	sub(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48D833;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x20, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(&ts->eax, 0x1);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);

loc_48D833:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_48D860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_48D88E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D88D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x1A, 1));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48D88D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	nop();

loc_48D880:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_48D887;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);

loc_48D887:
	add(&ts->eax, 0x8);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48D880;
    }

loc_48D88D:
	pop(mv, &ts->esp, ts->esi);

locret_48D88E:
	retn(mv, &ts->esp, 0x8);
}

void sub_48D8A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D8DD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x80, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x1B, 1));
	if (ts->eflags.zero) {
        goto loc_48D8DD;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D8DD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48D8D8;
    }
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_48D8DD;
    }
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4) - 0x5, 4));
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (!ts->eflags.carry) {
        goto loc_48D8DD;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x50, 4));
	retn(mv, &ts->esp, 0x4);

loc_48D8D8:
	mov(&ts->eax, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_48D8DD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_48D8F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48D8FC;
    }
	goto sub_488FA0;

loc_48D8FC:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_48D910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_48D994;
    }

loc_48D927:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, 0x134002);
	if (!ts->eflags.zero) {
        goto loc_48D951;
    }
	mov(mv, &ts->eax, x86::mem(0x830D20, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x830D20, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x830D1C);
	inc(mv, x86::mem(0x82D380, 4));
	goto loc_48D97F;

loc_48D951:
	cmp(&ts->eflags, ts->eax, 0x134003);
	if (!ts->eflags.zero) {
        goto loc_48D960;
    }
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edx);
	goto loc_48D97F;

loc_48D960:
	cmp(&ts->eflags, ts->eax, 0x134004);
	if (!ts->eflags.zero) {
        goto loc_48D96F;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	goto loc_48D97F;

loc_48D96F:
	cmp(&ts->eflags, ts->eax, 0x80134008);
	if (!ts->eflags.zero) {
        goto loc_48D97F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_5BB720(ts, mv);
	add(&ts->esp, 0x4);

loc_48D97F:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->ecx) + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_48D927;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48D994;
    }
	mov(mv, x86::mem(ts->esi + 0x72, 2), 0x1);

loc_48D994:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_48D9B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48D2E0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_48D9D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48D9F8;
    }

loc_48D9E4:
	game::sub_57EF60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48D9E4;
    }

loc_48D9F8:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48DA00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_48DA19;
    }
	push(mv, &ts->esp, ts->edi);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);

loc_48DA19:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::nullsub_1(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_48D910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x6C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48DA55;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);

loc_48DA55:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48DA60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x830D20, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x830D20, 4), ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x78D9A8);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x830D1C);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x1D);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x70, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x72, 2), 0x1);
	game::j__malloc(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->edi*2), 4));
	shl(&ts->edx, 0x3);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7C, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7E, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_48DAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48CE80(ts, mv);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48DC58;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0xB8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48DC57;
    }
	mov(mv, &ts->ecx, x86::mem(0x830C84, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_48DB21:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x78, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->ebx) + 0x14, 4));
	add(&ts->edx, ts->ebx);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48DBE3;
    }
	cmp(&ts->eflags, ts->ecx, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48DBFE;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x74, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + (ts->esi*8), 4));
	mov(mv, &ts->esi, x86::mem(0x830CF0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->ecx*8), 4));
	mov(&ts->ecx, 0x6);
	mov(&ts->esi, ts->edx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->edi, x86::mem(0x830C84, 4));
	mov(mv, &ts->esi, x86::mem(0x830CEC, 4));
	mov(mv, x86::mem(ts->esi + (ts->edi*8), 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(0x830C84, 4));
	mov(mv, &ts->edi, x86::mem(0x830CEC, 4));
	mov(mv, x86::mem(ts->edi + (ts->esi*8) + 0x4, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xAC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xB0, 4));
	dec(&ts->edi);
	mov(mv, x86::mem(ts->eax + 0xAC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	sub(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xB0, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(0x830BC4, 4));
	mov(mv, &ts->edi, x86::mem(0x830BC8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(0x830BC4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	add(&ts->edi, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x830BC8, 4), ts->edi);
	mov(mv, x86::mem(ts->edx + 0x12, 2), ts->cx);
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x830C84, 4));
	inc(&ts->esi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x830C84, 4), ts->ecx);

loc_48DBE3:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x18);
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48DB21;
    }

loc_48DBFE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48DC57;
    }
	mov(mv, &ts->edx, x86::mem(0x830CEC, 4));
	push(mv, &ts->esp, 0x489380);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_75CC70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x830C84, 4));
	mov(mv, &ts->ecx, x86::mem(0x830CF0, 4));
	push(mv, &ts->esp, 0x489380);
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_75CC70(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x830CF0, 4));
	mov(mv, &ts->eax, x86::mem(0x830C84, 4));
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(0x830BB8, 4), ts->edx);
	mov(mv, x86::mem(0x830BBC, 4), ts->eax);
	mov(mv, x86::mem(0x830CF4, 2), 0xFFFFFFFF);

loc_48DC57:
	pop(mv, &ts->esp, ts->ebp);

loc_48DC58:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_48DC60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48DC8C;
    }

loc_48DC78:
	game::sub_57EF60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48DC78;
    }

loc_48DC8C:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_48CE80(ts, mv);
	mov(&ts->ebp, ts->eax);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ebp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48DE7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xB8, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x830C84, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48DE7F;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	push(mv, &ts->esp, ts->edi);
	goto loc_48DCD0;

loc_48DCD0:
	mov(mv, &ts->ecx, x86::mem(0x830CF0, 4));
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8A, 1));
	add(&ts->esi, ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48DDBE;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xA0, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_48DDBE;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xA4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_488BC0(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48DDBE;
    }
	mov(mv, &ts->ecx, x86::mem(0x830CEC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->edx*8), 4));
	mov(&ts->ecx, ts->ebx);
	sub(&ts->ecx, ts->edi);
	mov(&ts->eax, 0x2AAAAAAB);
	imul(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	sar(&ts->edx, 0x2);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->edx*8), 4));
	mov(&ts->ecx, 0x6);
	mov(&ts->edi, ts->ebx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48DDA4;
    }
	mov(mv, &ts->esi, x86::mem(0x830BC4, 4));
	mov(mv, &ts->edx, x86::mem(0x830BC8, 4));
	dec(&ts->esi);
	mov(mv, x86::mem(0x830BC4, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	sub(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x830BC8, 4), ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xAC, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xB0, 4));
	inc(&ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xAC, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	add(&ts->esi, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xB0, 4), ts->esi);

loc_48DDA4:
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebp, 4), 0x0);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_48DDBE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(0x830C84, 4));
	inc(&ts->eax);
	add(&ts->esi, 0x18);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48DCD0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48DE7D;
    }
	mov(mv, &ts->ecx, x86::mem(0x830CF0, 4));
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48DE5A;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);

loc_48DE00:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->ebp), 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x830CEC, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ebp), 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ebx*8), 4));
	if (ts->eflags.zero) {
        goto loc_48DE52;
    }
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48DE3A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x6);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->esi, x86::mem(0x830CEC, 4));
	mov(mv, x86::mem(ts->esi + (ts->edx*8), 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x830CEC, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*8) + 0x4, 4), ts->eax);

loc_48DE3A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(0x830C84, 4));
	mov(mv, &ts->ecx, x86::mem(0x830CF0, 4));
	inc(&ts->edx);
	add(&ts->eax, 0x18);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_48DE52:
	inc(&ts->ebx);
	add(&ts->ebp, 0x18);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48DE00;
    }

loc_48DE5A:
	mov(mv, x86::mem(0x830C84, 4), ts->edx);
	mov(mv, x86::mem(0x830BBC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x830BB8, 4), ts->ecx);
	mov(mv, x86::mem(0x830CF4, 2), ts->ax);
	mov(mv, x86::mem(ts->edx + 0x7C, 2), ts->ax);

loc_48DE7D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_48DE7F:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_48DE90(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x82D380, 4), ts->eax);
	mov(mv, x86::mem(0x82D384, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82D388, 4), ts->eax);
	mov(mv, x86::mem(0x82D38C, 4), ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78D8E8);
	push(mv, &ts->esp, 0x40);
	mov(&ts->ecx, 0x100);
	mov(&ts->edi, 0x82D638);
	push(mv, &ts->esp, 0xC0);
	mov(mv, x86::mem(0x82D390, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x100);
	mov(&ts->ecx, 0x830C78);
	mov(mv, x86::mem(0x82DA84, 4), ts->eax);
	game::sub_48DA60(ts, mv);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x78D900);
	mov(&ts->ecx, 0x30);
	mov(&ts->edi, 0x830B18);
	push(mv, &ts->esp, 0x830B20);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DBE4, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x830BA8, 4), 0x1);
	mov(mv, x86::mem(0x830BD0, 4), 0x830C78);
	mov(mv, x86::mem(ts->eax, 4), 0x830B18);
	mov(mv, x86::mem(0x82DBE4, 4), 0x830B18);
	mov(mv, x86::mem(0x830B1C, 4), ts->eax);
	mov(mv, x86::mem(0x830B18, 4), 0x82DBE0);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_48DF40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x830D1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x830D1C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48DF83;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_48DF60:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48DF7D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48DF89;
    }

loc_48DF7D:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48DF60;
    }

loc_48DF83:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_48DF89:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_48DF90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x1FFF);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x830DA4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_48DFAA;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_48DFAA:
	push(mv, &ts->esp, ts->ebp);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48DFDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E045;
    }
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x4, 4));
	goto loc_48E045;

loc_48DFDB:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x830D1C, 4));
	mov(&ts->ecx, 0x830D1C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48E043;
    }

loc_48DFF3:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E017;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E017;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48E01F;
    }

loc_48E017:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48DFF3;
    }
	goto loc_48E043;

loc_48E01F:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x830D1C, 4));
	mov(mv, x86::mem(0x830D1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x830D1C);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_48E043:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_48E045:
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43BE20(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DAC0, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DAC0, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_48E070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, 0x135200);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48E0EB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D780, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D780, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	if (!ts->eflags.zero) {
        goto loc_48E0E4;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5BB590(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5BB5B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8358C4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x8358C4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x8358C0);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), 0x2C420D64);
	if (!ts->eflags.zero) {
        goto loc_48E0E4;
    }
	mov(mv, x86::mem(0x7F399C, 4), ts->esi);

loc_48E0E4:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48E0EB:
	cmp(&ts->eflags, ts->ecx, 0x80135100);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48E1AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48E1A2;
    }
	mov(&ts->edi, ts->edi);

loc_48E110:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	sub(&ts->eax, 0x135101);
	if (ts->eflags.zero) {
        goto loc_48E149;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48E16C;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E16C;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x50, 2));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x17, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_48E16C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(&ts->edi, ts->edx);

loc_48E134:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	add(&ts->eax, 0x30);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48E134;
    }
	goto loc_48E16C;

loc_48E149:
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x17, 4));
	and_(&ts->esi, 0xFFFFFFF0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x52, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48E15A;
    }
	mov(mv, x86::mem(ts->esi + 0x52, 1), 0x1);

loc_48E15A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_48E164;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_48E16C;

loc_48E164:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);

loc_48E16C:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edx + (ts->ebp) + 0x8, 4));
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48E110;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E1A2;
    }
	mov(mv, &ts->eax, x86::mem(0x830AEC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x830AEC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x883E70);
	mov(mv, x86::mem(ts->esi, 4), 0x830AE8);
	game::sub_5DB680(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);

loc_48E1A2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48E1AC:
	cmp(&ts->eflags, ts->ecx, 0x80135000);
	if (!ts->eflags.zero) {
        goto loc_48E260;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48E256;
    }
	mov(&ts->edi, ts->edi);

loc_48E1D0:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	sub(&ts->eax, 0x135001);
	if (ts->eflags.zero) {
        goto loc_48E203;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E1EA;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48E220;
    }
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x17, 4));
	and_(&ts->edx, 0xFFFFFFF0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	goto loc_48E220;

loc_48E1EA:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x17, 4));
	and_(&ts->ecx, 0xFFFFFFF0);
	test(&ts->eflags, ts->bl, ts->bl);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E220;
    }
	game::nullsub_1(ts, mv);
	goto loc_48E220;

loc_48E203:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x17, 4));
	and_(&ts->esi, 0xFFFFFFF0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->bl);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_48E219;
    }
	mov(mv, x86::mem(ts->esi + 0xA, 1), 0x1);

loc_48E219:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 2), 0x4);
	if (!ts->eflags.zero) {
        goto loc_48E1A2;
    }

loc_48E220:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->ecx) + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_48E1D0;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E256;
    }
	mov(mv, &ts->eax, x86::mem(0x830D18, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x830D18, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x883E70);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x830D14);
	game::sub_5DB680(ts, mv);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);

loc_48E256:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48E260:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48E270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, 0x135200);
	if (!ts->eflags.zero) {
        goto loc_48E2B0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_48E36D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x2C420D64);
	if (!ts->eflags.zero) {
        goto loc_48E36D;
    }
	mov(mv, x86::mem(0x7F399C, 4), 0x830BD8);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_48E2B0:
	cmp(&ts->eflags, ts->ecx, 0x80135100);
	if (!ts->eflags.zero) {
        goto loc_48E315;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E36D;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_48E2D0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x135101);
	if (ts->eflags.zero) {
        goto loc_48E2E9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48E2D0;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_48E2E9:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x17, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_48E36D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(0x883EC0, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x54, 4));
	goto loc_48E362;

loc_48E315:
	cmp(&ts->eflags, ts->ecx, 0x80135000);
	if (!ts->eflags.zero) {
        goto loc_48E373;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E36D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_48E330:
	cmp(&ts->eflags, ts->eax, 0x135001);
	if (!ts->eflags.zero) {
        goto loc_48E330;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x17, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 2), 0x4);
	if (!ts->eflags.zero) {
        goto loc_48E36D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(0x883EC0, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));

loc_48E362:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x883E70);
	game::sub_5DB6E0(ts, mv);

loc_48E36D:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_48E373:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_48E380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48E389;
    }
	retn(mv, &ts->esp);

loc_48E389:
	mov(mv, &ts->ecx, x86::mem(0x835854, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x835854, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x835850);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_48E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48E3BB;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_48E3BB:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_48E3D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0xC0, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0xC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0xC8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0xCC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ebx, x86::mem(0x830D14, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xE0, 4));
	mov(mv, x86::mem(ts->esp + 0xEC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xF4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xF8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->ecx, 0x830D14);
	mov(mv, x86::mem(ts->esp + 0xE0, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xE4, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xE8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF0, 4), 0x7F7FFFFF);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E550;
    }
	goto loc_48E4A0;

loc_48E492:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	goto loc_48E4A0;

loc_48E4A0:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF8, 4), 0xA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48E550;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0xE8, 4));
	if (!ts->eflags.carry) {
        goto loc_48E550;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5747E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E539;
    }
	movsx(mv, &ts->edi, x86::mem(ts->eax + 0xE, 2));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	neg(&ts->edi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48E536;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_48E4F0:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF8, 4), 0xA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48E532;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->ebx, 2));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->edx, 0x5);
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4893A0(ts, mv);
	add(&ts->esp, 0x18);
	inc(&ts->esi);
	add(&ts->ebx, 0x2);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48E4F0;
    }

loc_48E532:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_48E536:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));

loc_48E539:
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xE4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48E492;
    }

loc_48E550:
	mov(mv, &ts->ebx, x86::mem(0x835850, 4));
	mov(&ts->ecx, 0x835850);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E5CD;
    }
	goto loc_48E572;

loc_48E56E:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_48E572:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48E5C1;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x2C, 4));
	add(&ts->ebx, 0x2C);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E5B6;
    }

loc_48E583:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48E5B6;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48E590;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_48E592;

loc_48E590:
	xor_(&ts->eax, ts->eax);

loc_48E592:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_4893A0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_48E583;
    }

loc_48E5B6:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xE4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_48E5C1:
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48E56E;
    }

loc_48E5CD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xEC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48E616;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_48E616:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xE0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	if (!ts->eflags.carry) {
        goto loc_48E68B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	sub(&ts->esi, ts->ecx);
	dec(&ts->esi);
	shr(&ts->esi, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	inc(&ts->esi);

loc_48E657:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0x10);
	dec(&ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x18, 4));
	faddp(&ts->fp, x86::fp_index(4), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_48E657;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	goto loc_48E68F;

loc_48E68B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_48E68F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC0, 4));
	mov(mv, x86::mem(ts->edi + 0xCC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xF8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC4, 4));
	mov(mv, x86::mem(ts->edi + 0xC8, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48E6C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x138);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	mov(&ts->edx, 0xA);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_48E6E0:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x8, 4), ts->ecx);
	add(&ts->eax, 0x10);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_48E6E0;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_48A3B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BB190(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->edx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->edi + 0x40, 4), ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x138, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	mov(mv, x86::mem(ts->edi + 0x64, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x138, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x50, 4));
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x128, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x130, 4));
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x13C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x148, 4));
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x78, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	mov(mv, x86::mem(ts->esp + 0x80, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	mov(mv, x86::mem(ts->esp + 0x8C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	mov(mv, x86::mem(ts->esp + 0x90, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x16C, 4));
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x164, 4));
	mov(mv, x86::mem(ts->esp + 0x98, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	mov(mv, x86::mem(ts->esp + 0x9C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x178, 4));
	mov(mv, x86::mem(ts->esp + 0x94, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	mov(mv, x86::mem(ts->esp + 0xA4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	mov(mv, x86::mem(ts->esp + 0xA8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x184, 4));
	mov(mv, x86::mem(ts->esp + 0xA0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x17C, 4));
	mov(mv, x86::mem(ts->esp + 0xB0, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18C, 4));
	mov(mv, x86::mem(ts->esp + 0xB4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x190, 4));
	mov(mv, x86::mem(ts->esp + 0xAC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x188, 4));
	mov(mv, x86::mem(ts->esp + 0xBC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x198, 4));
	mov(mv, x86::mem(ts->esp + 0xC0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x19C, 4));
	mov(mv, x86::mem(ts->esp + 0xB8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x194, 4));
	mov(mv, x86::mem(ts->esp + 0xC8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->esp + 0xCC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1A8, 4));
	mov(mv, x86::mem(ts->esp + 0xC4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	mov(mv, x86::mem(ts->esp + 0xD4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B0, 4));
	mov(mv, x86::mem(ts->esp + 0xD8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B4, 4));
	mov(mv, x86::mem(ts->esp + 0xD0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1AC, 4));
	mov(mv, x86::mem(ts->esp + 0xE0, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1BC, 4));
	mov(mv, x86::mem(ts->esp + 0xE4, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xF0, 4));
	mov(mv, x86::mem(ts->esp + 0xEC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0xEC, 4), ts->eax);
	game::sub_489BA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->edi + 0x120, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->edi + 0x124, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x128, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, x86::mem(ts->edi + 0x12C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	mov(mv, x86::mem(ts->edi + 0x130, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, x86::mem(ts->edi + 0x134, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->edi + 0x138, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->edi + 0x13C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->edi + 0x140, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, x86::mem(ts->edi + 0x144, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->edi + 0x148, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->edi + 0x14C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	mov(mv, x86::mem(ts->edi + 0x150, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8C, 4));
	mov(mv, x86::mem(ts->edi + 0x154, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(mv, x86::mem(ts->edi + 0x158, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x94, 4));
	mov(mv, x86::mem(ts->edi + 0x15C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x98, 4));
	mov(mv, x86::mem(ts->edi + 0x160, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(ts->edi + 0x164, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	mov(mv, x86::mem(ts->edi + 0x168, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xA4, 4));
	mov(mv, x86::mem(ts->edi + 0x16C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xA8, 4));
	mov(mv, x86::mem(ts->edi + 0x170, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xAC, 4));
	mov(mv, x86::mem(ts->edi + 0x174, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB0, 4));
	mov(mv, x86::mem(ts->edi + 0x178, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, x86::mem(ts->edi + 0x17C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB8, 4));
	mov(mv, x86::mem(ts->edi + 0x180, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->edi + 0x184, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	mov(mv, x86::mem(ts->edi + 0x188, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	mov(mv, x86::mem(ts->edi + 0x18C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->edi + 0x190, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xCC, 4));
	mov(mv, x86::mem(ts->edi + 0x194, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xD0, 4));
	mov(mv, x86::mem(ts->edi + 0x198, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xD4, 4));
	mov(mv, x86::mem(ts->edi + 0x19C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	mov(mv, x86::mem(ts->edi + 0x1A0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xDC, 4));
	mov(mv, x86::mem(ts->edi + 0x1A4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xE0, 4));
	mov(mv, x86::mem(ts->edi + 0x1A8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xE4, 4));
	mov(mv, x86::mem(ts->edi + 0x1AC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xE8, 4));
	mov(mv, x86::mem(ts->edi + 0x1B0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xEC, 4));
	mov(mv, x86::mem(ts->edi + 0x1B4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x1B8, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x1BC, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48ED60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x534);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48ED80;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_48ED80:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_48ED93;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x40, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48ED93;
    }
	mov(&ts->eax, ts->ecx);

loc_48ED93:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5BB190(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x4C);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x418, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x4C);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x2E8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x4C);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x1B8, 4));
	add(&ts->esp, 0x8);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esi, 0x24);
	xor_(&ts->edi, ts->edi);
	goto loc_48EDE0;

loc_48EDE0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784E8C, 4));
	push(mv, &ts->esp, 0x3F800000);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	sub(&ts->esp, 0x8);
	lea(mv, &ts->ebx, x86::mem(ts->esp + (ts->edi) + 0x41C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784510, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_48A310(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48EEF3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x414, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x418, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x190, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x180, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x170, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1A0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x194, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x184, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x174, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1A4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x198, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x188, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x178, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1A8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->ecx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x414, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x418, 4));

loc_48EEF3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x1BC, 4), 0x0);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->edi, 0x10);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	add(&ts->esi, 0x1C);
	cmp(&ts->eflags, ts->edi, 0x30);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1A0, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1A4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1A8, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48EDE0;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_48E3D0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x3, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x13);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48EF6F;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xF);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));

loc_48EF6F:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48F14A;
    }
	xor_(&ts->edi, ts->edi);

loc_48EF91:
	mov(mv, &ts->esi, x86::mem(ts->esp + (ts->ebx*4) + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x440, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x444, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x448, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0xFF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48EFDC;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_48EFDC:
	mov(&ts->edx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	shr(&ts->edx, 0x8);
	and_(&ts->edx, 0xFF);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48EFFD;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_48EFFD:
	shr(&ts->eax, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	and_(&ts->eax, 0xFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_48F01B;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_48F01B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->al, 0x3);
	if (ts->eflags.zero) {
        goto loc_48F06C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1E0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1E4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0xC0, 4));
	goto loc_48F12F;

loc_48F06C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_48F0F0;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	goto loc_48F0F8;

loc_48F0F0:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_48F0F8:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1E0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1E4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D77C, 4));

loc_48F12F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->edi) + 0x1E8, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48EF91;
    }
	xor_(&ts->esi, ts->esi);
	mov(&ts->edi, ts->eax);

loc_48F14A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48F218;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BB190(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x3, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48F218;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x418, 4));
	goto loc_48F180;

loc_48F180:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x150, 4));
	add(&ts->eax, 0x10);
	dec(&ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x140, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x130, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x160, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x154, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x144, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x134, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x164, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x158, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x148, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x168, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->eax - 0x10, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_48F180;
    }

loc_48F218:
	add(&ts->edi, 0x3);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48F2DF;
    }
	mov(&ts->ebx, ts->edi);
	goto loc_48F230;

loc_48F230:
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->esi) + 0x410, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + (ts->esi) + 0x2E4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1BC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1C0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->esi) + 0x1C4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1B8, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	add(&ts->esp, 0x8);
	add(&ts->esi, 0x10);
	dec(&ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1A0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1A4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1A8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1AC, 4));
	if (!ts->eflags.zero) {
        goto loc_48F230;
    }
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48F2DF;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1B4, 4));
	mov(&ts->ecx, ts->edi);

loc_48F2B7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	add(&ts->eax, 0x10);
	dec(&ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D9BC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D9B8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D9B4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_48F2B7;
    }

loc_48F2DF:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2E0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2E4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2E8, 4));
	mov(mv, x86::mem(ts->ebx + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2F0, 4));
	mov(mv, x86::mem(ts->ebx + 0x50, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2F4, 4));
	mov(mv, x86::mem(ts->ebx + 0x60, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2F8, 4));
	mov(mv, x86::mem(ts->ebx + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x300, 4));
	mov(mv, x86::mem(ts->ebx + 0x54, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x304, 4));
	mov(mv, x86::mem(ts->ebx + 0x64, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x308, 4));
	mov(mv, x86::mem(ts->ebx + 0x48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1B0, 4));
	mov(mv, x86::mem(ts->ebx + 0x58, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1B4, 4));
	mov(mv, x86::mem(ts->ebx + 0x68, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1B8, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C0, 4));
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C4, 4));
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C8, 4));
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1D0, 4));
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1D4, 4));
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1D8, 4));
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	mov(&ts->ecx, 0xA);
	mov(&ts->edi, ts->edi);

loc_48F3A0:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax - 0x8, 4), ts->esi);
	add(&ts->eax, 0x10);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48F3A0;
    }
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48F3DF;
    }
	goto loc_48F3C0;

loc_48F3C0:
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->esi) + 0x1B0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + (ts->esi) + 0x2E4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	game::sub_489AF0(ts, mv);
	add(&ts->esi, 0x10);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48F3C0;
    }

loc_48F3DF:
	mov(mv, &ts->edx, x86::mem(0x7F39C0, 4));
	mov(mv, &ts->eax, x86::mem(0x7F39BC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F39B8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82DAE4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	game::sub_489ED0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	mov(mv, x86::mem(ts->ebx + 0x120, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, x86::mem(ts->ebx + 0x124, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->ebx + 0x128, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->ebx + 0x12C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->ebx + 0x130, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, x86::mem(ts->ebx + 0x134, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->ebx + 0x138, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->ebx + 0x13C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x88, 4));
	mov(mv, x86::mem(ts->ebx + 0x140, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8C, 4));
	mov(mv, x86::mem(ts->ebx + 0x144, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	mov(mv, x86::mem(ts->ebx + 0x148, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	mov(mv, x86::mem(ts->ebx + 0x14C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x98, 4));
	mov(mv, x86::mem(ts->ebx + 0x150, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(ts->ebx + 0x154, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	mov(mv, x86::mem(ts->ebx + 0x158, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xA4, 4));
	mov(mv, x86::mem(ts->ebx + 0x15C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xA8, 4));
	mov(mv, x86::mem(ts->ebx + 0x160, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xAC, 4));
	mov(mv, x86::mem(ts->ebx + 0x164, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB0, 4));
	mov(mv, x86::mem(ts->ebx + 0x168, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, x86::mem(ts->ebx + 0x16C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB8, 4));
	mov(mv, x86::mem(ts->ebx + 0x170, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->ebx + 0x174, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	mov(mv, x86::mem(ts->ebx + 0x178, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC4, 4));
	mov(mv, x86::mem(ts->ebx + 0x17C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC8, 4));
	mov(mv, x86::mem(ts->ebx + 0x180, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xCC, 4));
	mov(mv, x86::mem(ts->ebx + 0x184, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xD0, 4));
	mov(mv, x86::mem(ts->ebx + 0x188, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xD4, 4));
	mov(mv, x86::mem(ts->ebx + 0x18C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xD8, 4));
	mov(mv, x86::mem(ts->ebx + 0x190, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xDC, 4));
	mov(mv, x86::mem(ts->ebx + 0x194, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xE0, 4));
	mov(mv, x86::mem(ts->ebx + 0x198, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xE4, 4));
	mov(mv, x86::mem(ts->ebx + 0x19C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xE8, 4));
	mov(mv, x86::mem(ts->ebx + 0x1A0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xEC, 4));
	mov(mv, x86::mem(ts->ebx + 0x1A4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x1A8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xF0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xF4, 4));
	mov(mv, x86::mem(ts->ebx + 0x1B0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xFC, 4));
	mov(mv, x86::mem(ts->ebx + 0x1AC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xF8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x1BC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x1B4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x1B8, 4), ts->edx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48F600(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48F657;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48F657;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48F657;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x70);
	mov(&ts->edi, ts->ebx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_48A6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	add(&ts->esi, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_48ED60(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_48F657:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_48F660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_48E6C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_48A6A0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48F6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8358C0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48F6AF;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_48F6B1;

loc_48F6AF:
	xor_(&ts->esi, ts->esi);

loc_48F6B1:
	mov(&ts->ecx, 0x8358C0);
	game::sub_431780(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48F6DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));

loc_48F6C3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48F6E1;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_48F6D4;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_48F6D6;

loc_48F6D4:
	xor_(&ts->esi, ts->esi);

loc_48F6D6:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48F6C3;
    }

loc_48F6DA:
	mov(mv, &ts->eax, x86::mem(0x7F399C, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48F6E1:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48F6F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	game::sub_48D7E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5BC300(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_48F730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48F73D;
    }
	add(&ts->eax, 0x4);
	goto loc_48F73F;

loc_48F73D:
	xor_(&ts->eax, ts->eax);

loc_48F73F:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x44, 4));
	add(&ts->ecx, 0x44);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	game::sub_5C2120(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_48F760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48F77E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->eax, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_5C2120(ts, mv);
	retn(mv, &ts->esp, 0x4);

loc_48F77E:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_5C2120(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_48F7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xE8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_48FBB5;
    }
	mov(mv, &ts->ecx, x86::mem(0x82DA5C, 4));
	mov(mv, &ts->edi, x86::mem(0x82DA60, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1C0, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.carry) {
        goto loc_48F7F0;
    }
	add(mv, x86::mem(0x82DA70, 4), 0x1C0);
	mov(mv, x86::mem(0x82DA6C, 4), 0x1);
	xor_(&ts->ecx, ts->ecx);
	goto loc_48F7F6;

loc_48F7F0:
	mov(mv, x86::mem(0x82DA5C, 4), ts->edx);

loc_48F7F6:
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48FBB5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B8, 4));
	push(mv, &ts->esp, ts->esi);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	mov(mv, x86::mem(ts->esp + 0xA0, 4), 0x3F800000);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7BC, 4));
	push(mv, &ts->esp, 0x871B50);
	push(mv, &ts->esp, 0x872E90);
	push(mv, &ts->esp, 0x7F3E10);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	game::sub_48F600(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x9C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x830D90);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xA8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xAC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xB0, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x108, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x110, 4), 0x3F800000);
	game::sub_5BA9A0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xDC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(5));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xFC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10C, 4));
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x38);

loc_48FBB5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_48FBC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8358C8, 4));
	mov(&ts->ecx, 0x8358C8);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FBEB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_48FBE0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48FBEF;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48FBE0;
    }

loc_48FBEB:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_48FBEF:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_48FC00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax) + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x10, 4));
	add(&ts->eax, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx) + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_48FC24;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1);

loc_48FC24:
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8358CC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x8358CC, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x8358C8);
	retn(mv, &ts->esp);
}

void sub_48FC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->esp, 0x400);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x40C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48FC62;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48FC62;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));

loc_48FC62:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x420, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48FC74;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_48FC74;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x20, 4));

loc_48FC74:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48FC7D;
    }
	mov(&ts->eax, 0x78DA04);

loc_48FC7D:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_48FC86;
    }
	mov(&ts->ebx, 0x78DA04);

loc_48FC86:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_48FCA7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_48FCA7:
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x41C, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x830AF4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x830AF4, 4), ts->esi);
	push(mv, &ts->esp, 0x78D9F4);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x830AF0);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x78D9C0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x400);
	retn(mv, &ts->esp, 0x10);
}

void sub_48FD10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	game::nullsub_1(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_48FD30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_48FD67;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FD86;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FD86;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FD86;
    }

loc_48FD67:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(0x833780, 4));
	and_(&ts->eax, 0x1FFF);
	inc(&ts->edx);
	add(&ts->eax, 0x833784);
	mov(mv, x86::mem(0x833780, 4), ts->edx);
	inc(mv, x86::mem(ts->eax, 1));

loc_48FD86:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48FDC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FDB9;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FDB9;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FDB9;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	goto loc_48FDC3;

loc_48FDB9:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	goto loc_48FDC3;

loc_48FDC0:
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->esi);

loc_48FDC3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x0);
	game::sub_5B9690(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), 0x66994F4A);
	mov(mv, x86::mem(0x82DAB4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_48FDF9;
    }
	mov(mv, x86::mem(0x82DB08, 4), ts->esi);

loc_48FDF9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_48FE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->eax, ts->edx);
	and_(&ts->eax, 0x1FFF);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x833784, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x70, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48FE57;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_48FE59;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto locret_48FE59;
    }

loc_48FE57:
	xor_(&ts->eax, ts->eax);

locret_48FE59:
	retn(mv, &ts->esp, 0x4);
}

void sub_48FE60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48FEA6;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_48FE90:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x28, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x1C, 4));
	shl(&ts->edx, 0x4);
	add(&ts->esi, ts->edx);
	add(&ts->ecx, 0x34);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48FE90;
    }

loc_48FEA6:
	mov(mv, &ts->ecx, x86::mem(0x82DC04, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x82DC04, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x82DC00);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_48FED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48FF2A;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_48FEE4:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp) + 0x28, 4));
	add(&ts->eax, ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48FF15;
    }
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_48FF00:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_48FF0F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5B9710(ts, mv);

loc_48FF0F:
	add(&ts->esi, 0x10);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_48FF00;
    }

loc_48FF15:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x14, 4));
	inc(&ts->eax);
	add(&ts->ebp, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_48FEE4;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_48FF2A:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_48FF40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49000F;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_48FF64:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(&ts->ebp, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_48FFF4;
    }
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_48FF80:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(&ts->edx, ts->eax);
	and_(&ts->edx, 0x1FFF);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x833784, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x74, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x70, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x3C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFD3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x74, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_48FFDF;
    }

loc_48FFD3:
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ecx);
	game::sub_5B96F0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	goto loc_48FFE6;

loc_48FFDF:
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	xor_(&ts->ebp, ts->ebp);

loc_48FFE6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esi, 0x10);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48FF80;
    }

loc_48FFF4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	add(&ts->edi, 0x34);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_48FF64;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_49000F:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_490020(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB720, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x82DC00, 4));
	mov(&ts->ecx, 0x82DC00);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB708, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_490128;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	goto loc_490070;

loc_49006B:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	nop();

loc_490070:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0xC, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_490117;
    }
	add(&ts->ebp, 0x24);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_490085:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490101;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49009E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_49009E:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->edi);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_490101;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_490101;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x4, 4));
	goto loc_4900E0;

loc_4900D6:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->edi, ts->edi);

loc_4900E0:
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->edx), 4));
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->edi);
	shl(&ts->edx, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx) + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	game::sub_5B9730(ts, mv);
	add(&ts->ebx, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4900D6;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_490101:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ebp, 0x34);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490085;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));

loc_490117:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49006B;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_490128:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_490130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83579C);
	game::sub_48D250(ts, mv);
	retn(mv, &ts->esp);
}

void sub_490150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83579C);
	game::sub_48D2E0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_490170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83579C);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490198;
    }

loc_490184:
	game::sub_57EF60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83579C);
	game::sub_48D3C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490184;
    }

loc_490198:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4901A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83579C);
	game::sub_48D370(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4901B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83579C);
	game::sub_48CE80(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4901D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4902A7;
    }
	mov(mv, &ts->esi, x86::mem(0x830AF0, 4));
	mov(&ts->ecx, 0x830AF0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_49024A;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x1FFF);
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x833784, 1));

loc_490203:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_49024A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490238;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490244;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490244;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490244;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_490240;

loc_490238:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_48FE00(ts, mv);

loc_490240:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490271;
    }

loc_490244:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_490203;
    }

loc_49024A:
	push(mv, &ts->esp, ts->edi);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4902BF;
    }
	mov(mv, &ts->ecx, x86::mem(0x82DA80, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4902A7;
    }

loc_490261:
	cmp(mv, &ts->eflags, x86::mem(0x82D530, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_49029C;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_490261;
    }
	goto loc_4902A7;

loc_490271:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x830AF0, 4));
	mov(mv, x86::mem(0x830AF0, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x830AF0);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x53, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49029C:
	mov(mv, &ts->eax, x86::mem(0x82D5C0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4902BF;
    }

loc_4902A7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4902BD;
    }
	mov(mv, &ts->eax, x86::mem(0x82DB08, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4902BF;
    }
	game::sub_43BD50(ts, mv);

loc_4902BD:
	xor_(&ts->eax, ts->eax);

loc_4902BF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4902D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4902FB;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_490324;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48FE00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490324;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x53, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4902FB:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_490324;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_490324;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_48FE00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490324;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_490324:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_490330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48B4E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x47BEB4B6);
	game::sub_4901D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xD4D26C59);
	mov(mv, x86::mem(0x82D5A8, 4), ts->eax);
	game::sub_4901D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1744B82D);
	mov(mv, x86::mem(0x82D5AC, 4), ts->eax);
	game::sub_4901D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xAD3C5239);
	mov(mv, x86::mem(0x82D5B0, 4), ts->eax);
	game::sub_4901D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xD4D80A65);
	mov(mv, x86::mem(0x82D5B4, 4), ts->eax);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x40);
	mov(mv, x86::mem(0x82D5B8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4903B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4903BF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4903C9;
    }

loc_4903BF:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);

loc_4903C9:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4903E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x835860, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x835860);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49040E;
    }
	nop();

loc_490400:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_490408;
    }
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);

loc_490408:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490400;
    }

loc_49040E:
	mov(mv, &ts->esi, x86::mem(0x8357E0, 4));
	mov(&ts->ecx, 0x8357E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490430;
    }

loc_490422:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_49042A;
    }
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);

loc_49042A:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490422;
    }

loc_490430:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_490440(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x41C);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x42C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x428, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	call(ts, mv, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->eax, 0x40);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.carry) {
        goto loc_4904A3;
    }
	mov(&ts->esi, 0x78DA1C);

loc_4904A3:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x78DA0C);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ax, x86::mem(ts->ebx + 0x88, 2));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x94, 4), ts->ebp);
	mov(&ts->edi, 0x2000);
	if (ts->eflags.zero) {
        goto loc_4904FE;
    }
	movsx(&ts->eax, ts->ax);
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4904FE;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x88, 1));
	and_(&ts->ecx, 0x7);
	or_(&ts->ecx, 0x2008);
	mov(&ts->edi, ts->ecx);

loc_4904FE:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x98, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->ebp), 4));
	add(&ts->esp, 0x8);
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_490542;
    }
	mov(&ts->ecx, ts->ebp);
	mov(&ts->edi, ts->eax);
	mov(&ts->eax, ts->ecx);
	shr(&ts->ecx, 0x2);
	add(&ts->esi, ts->edx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x1);
	mov(&ts->edi, ts->ecx);

loc_490542:
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ebx + 0x98, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490579;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x430, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x48D630);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57B530(ts, mv);
	add(&ts->esp, 0x1C);

loc_490579:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_490595;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x428, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_48D630(ts, mv);
	add(&ts->esp, 0xC);

loc_490595:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x41C);
	retn(mv, &ts->esp);
}

void sub_4905A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0xC, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ebp + 0x19, 1));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_490647;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_490647;
    }
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4905F0;
    }
	add(&ts->esi, 0x8);
	mov(&ts->ebx, ts->edi);

loc_4905D3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4905EA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_4905EA:
	add(&ts->esi, 0x10);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4905D3;
    }

loc_4905F0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_490646;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_490600:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + (ts->esi*8), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->esi*8), 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49063D;
    }

loc_490613:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_49061D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_490627;
    }

loc_49061D:
	add(&ts->eax, 0x10);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_490613;
    }
	goto loc_49063D;

loc_490627:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->esi*8) + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_49063D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_490600;
    }

loc_490646:
	pop(mv, &ts->esp, ts->ebx);

loc_490647:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_490650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x864F60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4906A5;
    }
	mov(mv, &ts->ecx, x86::mem(0x832DA4, 4));
	cmp(&ts->eflags, ts->ecx, 0x832DA4);
	if (ts->eflags.zero) {
        goto loc_490797;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_490670:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	add(&ts->eax, 0x88);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x832DA4, 4));
	cmp(&ts->eflags, ts->ecx, 0x832DA4);
	if (!ts->eflags.zero) {
        goto loc_490670;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4906A5:
	push(mv, &ts->esp, ts->ebp);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x82DBC0, 4));
	mov(&ts->ecx, 0x82DBC0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_490737;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	goto loc_4906D0;

loc_4906D0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	if (ts->eflags.zero) {
        goto loc_49072F;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_48DF90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49072F;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_49072F;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_490715;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x88, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	goto loc_49072C;

loc_490715:
	mov(mv, &ts->ecx, x86::mem(0x82DBC4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(0x82DBC4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x82DBC0);

loc_49072C:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);

loc_49072F:
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4906D0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_490737:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE20(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA8C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_490762;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA8C, 4));
	goto loc_490764;

loc_490762:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_490764:
	mov(mv, &ts->eax, x86::mem(0x82DAA0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA94, 4));
	inc(&ts->eax);
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(0x82DAA0, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA94, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA98, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA9C, 4));

loc_490797:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4907A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4907DB;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x19, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4907DA;
    }
	push(mv, &ts->esp, ts->edi);

loc_4907B7:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*8), 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->esi*8), 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4901D0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	movsx(mv, &ts->edx, x86::mem(ts->ebx + 0x19, 1));
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4907B7;
    }
	pop(mv, &ts->esp, ts->edi);

loc_4907DA:
	pop(mv, &ts->esp, ts->esi);

loc_4907DB:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4907E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x19, 1));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, x86::mem(ts->esp + 0xB, 1), ts->al);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_490842;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_4907F6:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebp*8) + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp*8), 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(0x82DB08, 4));
	if (!ts->eflags.zero) {
        goto loc_490826;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(0x82DB08, 4));
	if (!ts->eflags.zero) {
        goto loc_490826;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_48FE00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490826;
    }
	mov(mv, x86::mem(ts->eax + 0x53, 1), 0x1);
	mov(&ts->edi, ts->eax);

loc_490826:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_490833;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);

loc_490833:
	movsx(mv, &ts->edx, x86::mem(ts->ebx + 0x19, 1));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4907F6;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_490842:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_490850(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x19, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->dl, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x7, 1), ts->al);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4908D7;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_490870:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebx*8) + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x68, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + (ts->ebx*8), 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebx*8), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4908BA;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_48FE00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4908B6;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4908A7;
    }
	mov(&ts->edi, ts->eax);
	goto loc_4908B6;

loc_4908A7:
	mov(mv, &ts->edi, x86::mem(0x82DB08, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4908B6;
    }
	game::sub_43BD50(ts, mv);

loc_4908B6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));

loc_4908BA:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4908C7;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);

loc_4908C7:
	movsx(mv, &ts->edx, x86::mem(ts->ecx + 0x19, 1));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_490870;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4908D7:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void __mkgmtime(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_48DF90(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4908F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);

loc_4908F3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7F39CC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4901D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x82CC10, 4), ts->eax);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.carry) {
        goto loc_4908F3;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_490920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7727AB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x608);
	mov(mv, &ts->eax, x86::mem(0x7F3D40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x1C, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_49097F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x509C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F39A8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F39A4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F39A4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F39A0, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_49097F:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x40, 4));
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x20, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ebx + 0x2C, 1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x2D, 1));
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xCC, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4909D1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->edx);
	goto loc_490AEE;

loc_4909D1:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C, 4), 0x4479C000);
	if (ts->eflags.zero) {
        goto loc_4909E4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x18, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_490AEE;
    }

loc_4909E4:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2F8, 4));
	game::sub_5E0B40(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2FC, 4));
	mov(mv, x86::mem(ts->esp + 0x620, 4), 0x0);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(3), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xBC, 4));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	game::sub_486ED0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_490A93;
    }
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), 0x461C3C00);
	goto loc_490AD7;

loc_490A93:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x308, 4));
	game::sub_5E7E70(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x18, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_490ACA;
    }
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), 0x461C3C00);
	goto loc_490AD5;

loc_490ACA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x1C, 4));

loc_490AD5:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_490AD7:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2F8, 4));
	mov(mv, x86::mem(ts->esp + 0x61C, 4), 0xFFFFFFFF);
	game::sub_5E0BF0(ts, mv);

loc_490AEE:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	add(&ts->ebx, 0x10);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x27C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_487270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_490CB6;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, 0x4479C000);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	cmp(&ts->eflags, ts->eax, 0x461C3C00);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	game::sub_487210(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	game::sub_487040(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->eax, ts->esp);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xA0, 4));
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->esp);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	game::sub_487080(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43D540(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F39A0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43D610(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5BC300(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	add(&ts->ebx, 0x20);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	game::sub_487120(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	game::sub_48B7F0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_487320(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	game::sub_487080(ts, mv);
	goto loc_490EDB;

loc_490CB6:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_490D96;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	game::sub_487210(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	game::sub_487040(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43D540(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F3D4C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xE8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43D610(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	game::sub_5BC300(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490ED8;
    }

loc_490D7F:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x614, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_490D96:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_490DA4;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_490E49;
    }

loc_490DA4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	cmp(&ts->eflags, ts->ecx, 0xD);
	if (ts->eflags.zero) {
        goto loc_490E49;
    }
	cmp(&ts->eflags, ts->ecx, 0xE);
	if (ts->eflags.zero) {
        goto loc_490E49;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->ecx, 0x89E7A0);
	if (!ts->eflags.zero) {
        goto loc_490DC8;
    }
	push(mv, &ts->esp, 0x0);
	goto loc_490DCA;

loc_490DC8:
	push(mv, &ts->esp, 0x1);

loc_490DCA:
	game::sub_5ED980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_401250(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43CF10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x98, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x90, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x803A70, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_490FB5;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x803A70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x803A70, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));

loc_490E49:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->eax, ts->esp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	game::sub_487210(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	game::sub_487040(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BC450(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_490D7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->eax, 0x20);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	game::sub_487120(ts, mv);

loc_490ED8:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));

loc_490EDB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x80, 4), ts->edx);
	sub(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x94, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->esp + 0x98, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 4));
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	game::sub_486FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->eax, ts->esp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	game::sub_48B7B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D798, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D79C, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC8, 4), 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_490F93;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_490FA3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7A0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7A4, 4));
	goto loc_490FA3;

loc_490F93:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7A8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7AC, 4));

loc_490FA3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_490FCE;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_490FB5:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x614, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_490FCE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_490FFC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	goto loc_490FFE;

loc_490FFC:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_490FFE:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	game::sub_4870B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	game::sub_487040(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	game::sub_487190(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->eax, ts->esp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x98, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	game::sub_48B7B0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0xCC, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4910EF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	fabs(&ts->fp, x86::fp_index(0));
	sub(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_491133;

loc_4910EF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_49113F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	sub(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	push(mv, &ts->esp, ts->edx);

loc_491133:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	game::sub_487160(ts, mv);

loc_49113F:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x130, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x134, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2BC, 4));
	mov(mv, x86::mem(ts->esp + 0x13C, 4), ts->edx);
	game::sub_487270(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	sub(&ts->esp, 0x10);
	mov(&ts->eax, ts->esp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2CC, 4));
	game::sub_487210(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	game::sub_48B7F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->esp + 0x140, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x144, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0x160, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x148, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x164, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(0x7F3CC8, 4));
	mov(mv, x86::mem(ts->esp + 0x168, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), 0x2);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	nop();

loc_491250:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_491829;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x1C, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_491279;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3394FE62);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ebx, ts->eax);
	goto loc_491283;

loc_491279:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ebx, x86::mem(0x82CC10, 4));

loc_491283:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_491829;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(0x82D528, 4), ts->eax);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0xCC, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4912CC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	game::__CIpow(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4912CC;
    }
	mov(mv, x86::mem(0x82D528, 4), 0x3F800000);

loc_4912CC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_491829;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x164, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x148, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43D0C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_491327;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);

loc_491327:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_49133C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);

loc_49133C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x180, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	game::sub_5BB1C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82D528, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4913B8;
    }
	mov(mv, x86::mem(ts->esp + 0xAC, 4), 0x437F0000);

loc_4913B8:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49157F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x130, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43CF10(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x140, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x244, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_5BC4A0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5BC1F0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xE4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x240, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F3D50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DB00, 4));
	mov(mv, &ts->edx, x86::mem(0x82DB00, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_401020(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x138, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x10);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x268, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x268, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x238, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x238, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));

loc_49157F:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_42FAF0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	game::sub_42FAF0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x1C, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4915EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D7B0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4915D7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F39A0, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_42FAF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	goto loc_4915F6;

loc_4915D7:
	mov(mv, &ts->ecx, x86::mem(0x7F39A0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	game::sub_42FAF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	goto loc_4915F6;

loc_4915EF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));

loc_4915F6:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49160C;
    }
	game::__ftol2(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x24, 4));
	shl(&ts->esi, 0x18);
	goto loc_491641;

loc_49160C:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE8, 4));
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	or_(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	or_(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);

loc_491641:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	or_(&ts->esi, ts->eax);
	fchs(&ts->fp, x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x1E0, 4), ts->esi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x210, 4));
	mov(mv, x86::mem(ts->esp + 0x1E4, 4), ts->esi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x1E8, 4), ts->esi);
	fchs(&ts->fp, x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x1EC, 4), ts->esi);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x210, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x258, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x258, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x180, 4));
	mov(mv, x86::mem(ts->esp + 0x188, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x184, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x154, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x158, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x154, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x158, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x228, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x228, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x190, 4));
	mov(mv, x86::mem(ts->esp + 0x198, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x208, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x208, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1A0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1AC, 4));
	push(mv, &ts->esp, 0x872E90);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x180, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x190, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	mov(mv, x86::mem(ts->esp + 0x1B8, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x180, 4));
	push(mv, &ts->esp, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C4, 4));
	mov(mv, x86::mem(ts->esp + 0x1CC, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	game::sub_5C7E80(ts, mv);

loc_491829:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_491250;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x614, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7727A0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x328, 4));
	goto sub_5E0BF0;

SEH_490920:
	mov(&ts->eax, 0x7DED00);
	goto ___CxxFrameHandler;
}

void sub_491860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(0x7F3D40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_491937;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_491937;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x40, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x883E70);
	game::sub_5E00D0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_491935;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_491935;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4918C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	movsx(mv, &ts->edx, x86::mem(ts->ecx, 2));
	mov(mv, &ts->eax, x86::mem(0x883EC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49191D;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49191D;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_5BC300(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49191D;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_49191A;
    }

loc_4918F6:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x872E90);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_490920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4918F6;
    }

loc_49191A:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x8, 4));

loc_49191D:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x2);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4918C0;
    }
	pop(mv, &ts->esp, ts->esi);

loc_491935:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_491937:
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_491940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7727CB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->edx, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1C);
	mov(&ts->edi, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->edx, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edx);
	mov(&ts->ecx, ts->esi);
	sub(&ts->ecx, 0x832DE0);
	mov(&ts->eax, 0x92492493);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x6);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	game::sub_5BC5B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7727C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x44);
	goto sub_4358E0;

SEH_491940:
	mov(&ts->eax, 0x7DED24);
	goto ___CxxFrameHandler;
}

void sub_4919D0(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->ecx, 0x44);
	goto sub_4358E0;
}

void sub_4919E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_491A24;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	goto loc_491A00;

loc_491A00:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi*8), 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_48FD30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->esi);
	add(&ts->ebx, 0x20);
	add(&ts->ebp, 0x7C);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_491A00;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_491A24:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_491A30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_491AB9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esi, 0x24);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_491A50:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi*8), 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_491A7C;
    }
	cmp(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_491A9A;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_491A9A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_491A9A;
    }

loc_491A7C:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(0x833780, 4));
	and_(&ts->eax, 0x1FFF);
	dec(&ts->edx);
	add(&ts->eax, 0x833784);
	mov(mv, x86::mem(0x833780, 4), ts->edx);
	dec(mv, x86::mem(ts->eax, 1));

loc_491A9A:
	mov(mv, &ts->eax, x86::mem(0x82DB08, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x24, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_491AAC;
    }
	mov(mv, x86::mem(0x82DB08, 4), ts->ebp);

loc_491AAC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x7C);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_491A50;
    }
	pop(mv, &ts->esp, ts->esi);

loc_491AB9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_491AC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_491AEF;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_491AD0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_491AD0;
    }

loc_491AEF:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_491C00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x491AC0);
	push(mv, &ts->esp, 0x598750);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_75C461(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_491C50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x491AC0);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	push(mv, &ts->esp, 0x8);
	add(&ts->ecx, 0x14);
	push(mv, &ts->esp, ts->ecx);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);
}

void sub_491C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x80035000);
	if (ts->eflags.zero) {
        goto loc_491C86;
    }
	cmp(&ts->eflags, ts->eax, 0x80035010);
	if (!ts->eflags.zero) {
        goto loc_491C8D;
    }

loc_491C86:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491C8D:
	cmp(&ts->eflags, ts->eax, 0x35021);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_491CEB;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x17, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_491CE2;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_491CE2;
    }
	mov(&ts->edi, ts->eax);
	mov(&ts->edi, ts->edi);

loc_491CB0:
	mov(mv, &ts->eax, x86::mem(0x830D0C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x830D0C, 4), ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x830D08);
	game::sub_4901D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	add(&ts->esp, 0xC);
	add(&ts->esi, 0x220);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_491CB0;
    }

loc_491CE2:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491CEB:
	cmp(&ts->eflags, ts->eax, 0x35020);
	if (!ts->eflags.zero) {
        goto loc_491D3C;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x17, 4));
	and_(&ts->edi, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x8, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_491D30;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_491D2F;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_491D10:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_48BC00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8357E0);
	game::sub_48BC50(ts, mv);
	add(&ts->esi, 0xD0);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_491D10;
    }

loc_491D2F:
	pop(mv, &ts->esp, ts->ebx);

loc_491D30:
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491D3C:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_491D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x80035000);
	if (ts->eflags.zero) {
        goto loc_491D66;
    }
	cmp(&ts->eflags, ts->eax, 0x80035010);
	if (!ts->eflags.zero) {
        goto loc_491D6D;
    }

loc_491D66:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491D6D:
	cmp(&ts->eflags, ts->eax, 0x35021);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_491DAA;
    }
	add(&ts->ecx, 0x17);
	and_(&ts->ecx, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_491DA2;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_491DA2;
    }
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_491D90:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	add(&ts->eax, 0x220);
	dec(&ts->esi);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_491D90;
    }

loc_491DA2:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491DAA:
	cmp(&ts->eflags, ts->eax, 0x35020);
	if (!ts->eflags.zero) {
        goto loc_491E02;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x17, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_491DFA;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_491DFA;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_491DD0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x835830, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x835830, 4), ts->ecx);
	game::sub_4903E0(ts, mv);
	add(&ts->esp, 0x4);
	add(&ts->esi, 0xD0);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_491DD0;
    }
	pop(mv, &ts->esp, ts->edi);

loc_491DFA:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_491E02:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_491E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_491E46;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_491E20:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_491C50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_491E20;
    }

loc_491E46:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_491E50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7727EE);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x228);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xA8, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_492DF7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	add(&ts->ecx, 0x10);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);

loc_491EA4:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_491EE4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_491ECC;
    }
	mov(&ts->edi, 0x1);

loc_491ECC:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->edx);
	add(&ts->ecx, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_491EA4;
    }

loc_491EE4:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_491F36;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F3940, 4));
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shr(&ts->edx, 0xD);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x5);
	xor_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(0x7F3940, 4), ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_491F22;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_491F22:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786D84, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->eax);

loc_491F36:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_492DF7;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_491F5A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_492DF7;
    }

loc_491F5A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_491FA1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_491FAA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_491FAA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	goto loc_491FAA;

loc_491FA1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_491FAA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_492DC0;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x20, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_491FDA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_491FDA;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_492046;
    }

loc_491FDA:
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_492042;
    }
	mov(mv, &ts->ecx, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F8F0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x23C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_49201E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_491C00(ts, mv);
	goto loc_492020;

loc_49201E:
	xor_(&ts->eax, ts->eax);

loc_492020:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x23C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->edi, ts->eax);

loc_492042:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_492046:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_492DC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0xC4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->esp + 0xD0, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x98, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0xA0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xB8, 4), ts->edx);
	game::sub_4012B0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xE8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1CC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1C, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x94, 4), 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_4920ED;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1A, 1));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x19, 1));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	imul(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));

loc_4920ED:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787D8C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787B5C, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x1D, 1));
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x18, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	mov(mv, x86::mem(ts->esp + 0xD4, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(ts->esp + 0xCC, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_492D62;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	goto loc_492210;

loc_492210:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero) {
        goto loc_4924E7;
    }
	mov(&ts->esi, ts->ecx);
	shl(&ts->esi, 0x11);
	xor_(&ts->esi, ts->ecx);
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0xD);
	xor_(&ts->esi, ts->eax);
	mov(&ts->ecx, ts->esi);
	shl(&ts->ecx, 0x5);
	xor_(&ts->esi, ts->ecx);
	mov(&ts->eax, ts->esi);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->esi);
	mov(&ts->edx, ts->eax);
	shr(&ts->edx, 0xD);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x5);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ebx, ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49226E;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_49226E:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784510, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(&ts->edi, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43C370(ts, mv);
	push(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_43C2B0(ts, mv);
	and_(&ts->esi, 0x7FFFFFFF);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4922CE;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4922CE:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x16C, 4));
	push(mv, &ts->esp, 0x872E90);
	push(mv, &ts->esp, ts->edx);
	game::sub_5BADA0(ts, mv);
	add(&ts->esp, 0x14);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x170, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x190, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x160, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x180, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x174, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x164, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x194, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x184, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x178, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x168, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x188, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1A8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1A8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x17C, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x16C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x19C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1AC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1E0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D0, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1E4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1E8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1D8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1B8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1EC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1DC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1CC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1BC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1BC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1B8, 4));
	goto loc_492713;

loc_4924E7:
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	xor_(&ts->eax, ts->edx);
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x11);
	xor_(&ts->esi, ts->eax);
	mov(&ts->ecx, ts->esi);
	shr(&ts->ecx, 0xD);
	xor_(&ts->esi, ts->ecx);
	mov(&ts->edx, ts->esi);
	shl(&ts->edx, 0x5);
	xor_(&ts->esi, ts->edx);
	mov(&ts->edi, ts->esi);
	shl(&ts->edi, 0x11);
	xor_(&ts->edi, ts->esi);
	mov(&ts->ecx, ts->edi);
	shr(&ts->ecx, 0xD);
	xor_(&ts->edi, ts->ecx);
	mov(&ts->edx, ts->edi);
	shl(&ts->edx, 0x5);
	and_(&ts->eax, 0x7FFFFFFF);
	xor_(&ts->edi, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49253F;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_49253F:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x124, 4));
	push(mv, &ts->esp, 0x872E90);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BACF0(ts, mv);
	and_(&ts->esi, 0x7FFFFFFF);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_492598;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_492598:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x130, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BADA0(ts, mv);
	and_(&ts->edi, 0x7FFFFFFF);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4925F4;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4925F4:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x13C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BAE60(ts, mv);
	add(&ts->esp, 0x24);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x150, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x140, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x130, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x154, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x144, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x134, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x158, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x148, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x208, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x210, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x210, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x208, 4));

loc_492713:
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->eax, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x7FFFFFFF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_492750;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_492750:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x11);
	xor_(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	shr(&ts->edx, 0xD);
	xor_(&ts->ecx, ts->edx);
	mov(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	shl(&ts->eax, 0x5);
	xor_(&ts->ecx, ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	mov(&ts->edx, ts->ecx);
	and_(&ts->edx, 0x7FFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49279A;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_49279A:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x7FFFFFFF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4927EB;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4927EB:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x11);
	xor_(&ts->esi, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0xD);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	xor_(&ts->esi, ts->eax);
	mov(&ts->ecx, ts->esi);
	shl(&ts->ecx, 0x5);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xDC, 4));
	xor_(&ts->esi, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE0, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x228, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x228, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	mov(&ts->edx, ts->esi);
	and_(&ts->edx, 0x7FFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4928F3;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4928F3:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x2B, 1), ts->al);
	mov(&ts->eax, ts->esi);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->esi);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x7FFFFFFF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_492938;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_492938:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x11);
	xor_(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	shr(&ts->edx, 0xD);
	xor_(&ts->ecx, ts->edx);
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x5);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	xor_(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	and_(&ts->edx, 0x7FFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49297C;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_49297C:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(&ts->edx, ts->ecx);
	shl(&ts->edx, 0x11);
	xor_(&ts->edx, ts->ecx);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0xD);
	xor_(&ts->edx, ts->eax);
	mov(&ts->ecx, ts->edx);
	shl(&ts->ecx, 0x5);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	xor_(&ts->edx, ts->ecx);
	mov(&ts->eax, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4929C6;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4929C6:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_492B25;
    }
	mov(&ts->eax, ts->edx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0xD);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shl(&ts->edx, 0x5);
	xor_(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_492A2B;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_492A2B:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_492B1A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_492A6E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_492A6E:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xA8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1E, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_492B31;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	game::sub_43CF10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	goto loc_492B33;

loc_492B1A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_492A6E;

loc_492B25:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xA8, 4));
	goto loc_492B33;

loc_492B31:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_492B33:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xD4, 4));
	and_(&ts->eax, 0xFFFE);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_492B5F;
    }
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x68, 1));
	and_(&ts->edx, 0x1);
	or_(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);

loc_492B5F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_492B78;
    }
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x42700000);

loc_492B78:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x28, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_492CBD;
    }
	mov(mv, &ts->eax, x86::mem(0x870CEC, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_492B9A;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x21, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_492B9A;
    }
	mov(&ts->esi, 0x1);

loc_492B9A:
	mov(mv, &ts->eax, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_492CBD;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_492CBD;
    }
	movsx(mv, &ts->ebx, x86::mem(ts->edi + 0x1F, 1));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_492BC5;
    }
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_492BC7;
    }

loc_492BC5:
	xor_(&ts->ebx, ts->ebx);

loc_492BC7:
	mov(mv, &ts->ecx, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F8F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	mov(mv, &ts->dx, x86::mem(ts->esp + 0x2C, 2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA34, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0xA, 2), ts->dx);
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_492C15;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA34, 4));

loc_492C15:
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 2), ts->ax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	mov(mv, x86::mem(ts->esi + 0xE, 1), ts->al);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x20, 1));
	and_(&ts->al, 0xF);
	shl(&ts->bl, 0x4);
	or_(&ts->al, ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->al);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	mov(mv, x86::mem(ts->esi + 0x1D, 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x2B, 1));
	mov(mv, x86::mem(ts->esi + 0x1E, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x1F, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x20, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->al);
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->eax*8) + 0x18, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + (ts->eax*8) + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax*8) + 0x14, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	inc(mv, x86::mem(ts->edi + (ts->eax*4) + 0x24, 4));

loc_492CBD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	mov(&ts->eax, ts->ecx);
	shl(&ts->eax, 0x11);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->eax);
	shr(&ts->edx, 0xD);
	xor_(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->eax);
	shl(&ts->ecx, 0x5);
	xor_(&ts->eax, ts->ecx);
	mov(&ts->ecx, ts->eax);
	and_(&ts->eax, 0x7FFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_492CEF;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_492CEF:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D864, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_492D27;
    }
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_492D31;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	goto loc_492D46;

loc_492D27:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	goto loc_492D46;

loc_492D31:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_492D46;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_492D46:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_492210;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));

loc_492D62:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x2);

loc_492D74:
	xor_(&ts->edx, ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->eax);
	setnz(ts->eflags, &ts->dl);
	add(&ts->eax, 0x8);
	or_(&ts->ecx, ts->edx);
	dec(mv, x86::mem(ts->esp + 0x20, 4));
	if (!ts->eflags.zero) {
        goto loc_492D74;
    }
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_492DC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x491AC0);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->edx);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x8);

loc_492DC0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_492DEE;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_492DEE:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->ebx + 0x18, 4), 0x0);

loc_492DF7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_7727E0:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1D4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_486F30(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_491E50:
	mov(&ts->eax, 0x7DED48);
	goto ___CxxFrameHandler;
}

void sub_492E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x64);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_43BDF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	game::sub_48BD90(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	goto loc_492E50;

loc_492E50:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_492F71;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_492E7B;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x883E70);
	game::sub_5D7440(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_492F61;
    }

loc_492E7B:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_492E93;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_491E50(ts, mv);
	goto loc_492E9F;

loc_492E93:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_492E9F;
    }
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x1);

loc_492E9F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_492F61;
    }
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_492EC8;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_492F61;
    }

loc_492EC8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_492F5A;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_492EF8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ebx, 0x1);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	goto loc_492F04;

loc_492EF8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	xor_(&ts->ebx, ts->ebx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));

loc_492F04:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_492F49;
    }
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_487360(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	goto loc_492F61;

loc_492F49:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	goto loc_492F61;

loc_492F5A:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);

loc_492F61:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x48, 4));
	if (ts->eflags.zero) {
        goto loc_492E50;
    }

loc_492F71:
	mov(mv, &ts->ebx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_49337B;
    }
	goto loc_492F90;

loc_492F8C:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));

loc_492F90:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x2);
	mov(&ts->edi, ts->edi);

loc_492FB0:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1A, 1));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x19, 1));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->esi);
	imul(&ts->eax, ts->edx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_492FF6;
    }
	movsx(&ts->eax, ts->al);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A194, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	goto loc_492FFE;

loc_492FF6:
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);

loc_492FFE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E, 1));
	test(&ts->eflags, ts->al, ts->al);
	fchs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_493068;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493068;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x54, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_493068;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));

loc_493068:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_493309;
    }

loc_493072:
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 2));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	sub(&ts->ecx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4932DB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	movzx(mv, &ts->ebx, x86::mem(ts->esi + 0x1F, 1));
	if (ts->eflags.zero) {
        goto loc_4930B8;
    }
	mov(&ts->eax, ts->ecx);
	cdq(&ts->eax, ts->edx);
	idiv(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x8, 2));
	cdq(&ts->eax, ts->edx);
	idiv(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	sub(&ts->eax, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	add(&ts->eax, ts->ebx);
	and_(&ts->eax, ts->edx);
	mov(&ts->ebx, ts->eax);

loc_4930B8:
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0xE, 1));
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0xC, 2));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x1D, 1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1E, 1));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A94C, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_49315A;
    }
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0xBF800000);

loc_49315A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x3F800000);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_49317B;
    }
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0xBF800000);

loc_49317B:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_493190;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	goto loc_493196;

loc_493190:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));

loc_493196:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1E, 1));
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_49322F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_49322F:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x501502F9);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA38, 8));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_49326E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));

loc_49326E:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 2), ts->cx);
	game::__ftol2(ts, mv);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x1D, 1), ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x1F, 1), ts->bl);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x1E, 1), ts->al);
	goto loc_4932F9;

loc_4932DB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	dec(mv, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_4932F9:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_493072;
    }
	mov(&ts->edi, ts->eax);

loc_493309:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->edi, 0x8);
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_492FB0;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(&ts->esi, 0x2);

loc_493334:
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->edi, ts->eax);
	setnz(ts->eflags, &ts->dl);
	add(&ts->eax, 0x8);
	or_(&ts->ecx, ts->edx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_493334;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493369;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_491C50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_493369:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_492F8C;
    }

loc_49337B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_493390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	retn(mv, &ts->esp, 0x18);
}

void sub_4933F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	game::sub_48CE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493416;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB4, 4));
	inc(&ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xB4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_493416:
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x80);
	if (!ts->eflags.carry) {
        goto loc_493439;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_57CA10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_493441;
    }

loc_493439:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_493441:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_5755E0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_579BF0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x40);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_493465;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_493465:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	game::sub_440820(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->ebp, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82DA84, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440E50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->esi, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x30);
	mov(&ts->edi, ts->esi);
	push(mv, &ts->esp, 0x7F);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x3C, 2));
	mov(mv, x86::mem(ts->esi + 0x88, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x87, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x2C, 4));
	add(&ts->esp, 0x18);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->eax, 0x8000);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493515;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8000);

loc_493515:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x2008);
	push(mv, &ts->esp, ts->ecx);
	game::sub_440820(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x490440);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x98, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_57B530(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);
}

void sub_493560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->ecx);
	game::sub_48CE80(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_49357B;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_49357B:
	dec(mv, x86::mem(ts->esi + 0xB4, 4));
	if (!ts->eflags.zero) {
        goto loc_4935F1;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8A, 1), 0x0);
	game::sub_48D370(ts, mv);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4935B6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_4935B6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4935C9;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);

loc_4935C9:
	mov(mv, &ts->eax, x86::mem(0x82DA84, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	dec(&ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4935F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_4935F1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_493600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49362C;
    }
	mov(mv, &ts->eax, x86::mem(0x82DBC4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x82DBC4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x82DBC0);

loc_49362C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493645;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_48DF90(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_48D780(ts, mv);

loc_493645:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_493650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4936A7;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x88, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493784;
    }

loc_493673:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(0x832DA8, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(0x832DA8, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), 0x832DA4);
	mov(mv, &ts->edx, x86::mem(0x864F60, 4));
	add(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493673;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4936A7:
	push(mv, &ts->esp, ts->ebx);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x88, 4));
	mov(&ts->ebx, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_493728;
    }
	xor_(&ts->eax, ts->eax);
	test(mv, &ts->eflags, x86::mem(ts->ecx + 0xF, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4936D2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_48DF90(ts, mv);
	add(&ts->esp, 0x8);

loc_4936D2:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_493728;
    }

loc_4936D6:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_493724;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_493724;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_49370A;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x88, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	goto loc_493721;

loc_49370A:
	mov(mv, &ts->edx, x86::mem(0x82DBC4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(0x82DBC4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), 0x82DBC0);

loc_493721:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);

loc_493724:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4936D6;
    }

loc_493728:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43BE20(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA90, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_49374F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA90, 4));
	goto loc_493751;

loc_49374F:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_493751:
	mov(mv, &ts->eax, x86::mem(0x82DAA4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA98, 4));
	inc(&ts->eax);
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(0x82DAA4, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA98, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA94, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA98, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x82DA9C, 4));

loc_493784:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_493790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4937C1;
    }

loc_4937A6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4937A6;
    }

loc_4937C1:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x88, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4937EC;
    }

loc_4937D1:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4937D1;
    }

loc_4937EC:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x7C, 2), ts->ax);
	mov(mv, x86::mem(ts->edi + 0x7E, 2), ts->ax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_493800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_493790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4938D5;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);

loc_493823:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + (ts->ecx*8) + 0x4, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4938C2;
    }
	mov(mv, &ts->dl, x86::mem(ts->ebx + 0x19, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4938C2;
    }

loc_493843:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*8) + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax*8), 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(0x82DB08, 4));
	if (!ts->eflags.zero) {
        goto loc_493882;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493876;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x24, 4));

loc_493868:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4938AD;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493868;
    }

loc_493876:
	push(mv, &ts->esp, ts->edi);
	game::sub_4CBAB0(ts, mv);
	inc(mv, x86::mem(ts->esi + 0x7E, 2));
	goto loc_4938AD;

loc_493882:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4938A0;
    }
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x68, 4));

loc_493895:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4938AD;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493895;
    }

loc_4938A0:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4CBAB0(ts, mv);
	inc(mv, x86::mem(ts->esi + 0x7C, 2));

loc_4938AD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x19, 1));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493843;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));

loc_4938C2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493823;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4938D5:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4938E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x830D1C, 4));
	mov(&ts->ecx, 0x830D1C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4939A7;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_493910:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x7C, 2), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_493920;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_493800(ts, mv);
	add(&ts->esp, 0x4);

loc_493920:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49399B;
    }

loc_493930:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_49393D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493930;
    }
	goto loc_49399B;

loc_49393D:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49399B;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_493950:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*8) + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_49398B;
    }
	mov(mv, &ts->cl, x86::mem(ts->edx + 0x19, 1));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49398B;
    }

loc_493964:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi*8) + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x68, 4), ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi*8), 4));
	if (!ts->eflags.zero) {
        goto loc_49397E;
    }
	mov(mv, &ts->ebp, x86::mem(0x864F60, 4));
	add(&ts->ebp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);

loc_49397E:
	movsx(mv, &ts->ecx, x86::mem(ts->edx + 0x19, 1));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493964;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_49398B:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493950;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));

loc_49399B:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_493910;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4939A7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4939B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(0x864F60, 4));
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_493AFD;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493BA4;
    }
	mov(mv, &ts->edi, x86::mem(0x830D1C, 4));
	mov(&ts->ecx, 0x830D1C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_493BA4;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4939F0:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x7C, 2), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_493A00;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_493800(ts, mv);
	add(&ts->esp, 0x4);

loc_493A00:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x88, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_493AE9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_493A20:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(0x82DB08, 4));
	if (!ts->eflags.zero) {
        goto loc_493A56;
    }
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(0x82DB08, 4));
	if (!ts->eflags.zero) {
        goto loc_493A52;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_48FE00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493A52;
    }
	mov(mv, x86::mem(ts->eax + 0x53, 1), 0x1);
	goto loc_493A54;

loc_493A52:
	mov(&ts->eax, ts->ebp);

loc_493A54:
	mov(&ts->ebp, ts->eax);

loc_493A56:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_493A77;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	game::sub_440EF0(ts, mv);
	add(&ts->esp, 0x4);
	dec(mv, x86::mem(ts->edi + 0x7E, 2));
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);

loc_493A77:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493A20;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_493AE9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493AB1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_493AA0:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_493ABF;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493AA0;
    }
	goto loc_493AB5;

loc_493AB1:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_493AB5:
	push(mv, &ts->esp, ts->ebx);
	game::sub_4CBAB0(ts, mv);
	inc(mv, x86::mem(ts->edi + 0x7C, 2));

loc_493ABF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_493AE9;
    }
	goto loc_493AD0;

loc_493AD0:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->esi*8) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493AE1;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_4907E0(ts, mv);

loc_493AE1:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493AD0;
    }

loc_493AE9:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4939F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_493AFD:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493B16;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4938E0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_493B16:
	mov(mv, &ts->esi, x86::mem(0x830D1C, 4));
	mov(&ts->ecx, 0x830D1C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_493BA4;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));

loc_493B32:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x7C, 2), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_493B42;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_493800(ts, mv);
	add(&ts->esp, 0x4);

loc_493B42:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493B9C;
    }

loc_493B52:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_493B5F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493B52;
    }
	goto loc_493B9C;

loc_493B5F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->bl, ts->bl);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_493B9C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_493B70:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*8) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493B87;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_490850(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_493B87;
    }
	mov(&ts->bl, 0x1);

loc_493B87:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_493B70;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_493B9C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_493800(ts, mv);
	add(&ts->esp, 0x4);

loc_493B9C:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_493B32;
    }

loc_493BA4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_493BB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x80134010);
	if (ts->eflags.zero) {
        goto loc_493BC1;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_493BC1:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->ecx) + 0x8, 4));
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (!ts->eflags.carry) {
        goto loc_493D20;
    }

loc_493BE3:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x134011);
	if (!ts->eflags.zero) {
        goto loc_493C02;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x17, 4));
	and_(&ts->edi, 0xFFFFFFF0);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_493D09;

loc_493C02:
	cmp(&ts->eflags, ts->eax, 0x134012);
	if (!ts->eflags.zero) {
        goto loc_493C14;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->edx);
	goto loc_493D09;

loc_493C14:
	cmp(&ts->eflags, ts->eax, 0x134013);
	if (!ts->eflags.zero) {
        goto loc_493C26;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x3C, 4), ts->eax);
	goto loc_493D09;

loc_493C26:
	cmp(&ts->eflags, ts->eax, 0x134017);
	if (!ts->eflags.zero) {
        goto loc_493C44;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x84, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(mv, x86::mem(0x82D38C, 4), ts->edx);
	goto loc_493D09;

loc_493C44:
	cmp(&ts->eflags, ts->eax, 0x134018);
	if (!ts->eflags.zero) {
        goto loc_493C74;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x84, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x84, 4));
	shr(&ts->edx, 0x3);
	mov(mv, x86::mem(ts->eax + 0x8, 2), ts->dx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(mv, x86::mem(0x82D38C, 4), ts->ecx);
	goto loc_493D09;

loc_493C74:
	cmp(&ts->eflags, ts->eax, 0x134019);
	if (!ts->eflags.zero) {
        goto loc_493CA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x84, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x84, 4));
	mov(&ts->eax, 0xAAAAAAAB);
	mul(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	shr(&ts->edx, 0x3);
	mov(mv, x86::mem(ts->ecx + 0xA, 2), ts->dx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(mv, x86::mem(0x82D38C, 4), ts->edx);
	goto loc_493D09;

loc_493CA7:
	cmp(&ts->eflags, ts->eax, 0x13401B);
	if (!ts->eflags.zero) {
        goto loc_493CC2;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x90, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(mv, x86::mem(0x82D390, 4), ts->ecx);
	goto loc_493D09;

loc_493CC2:
	cmp(&ts->eflags, ts->eax, 0x13401A);
	if (!ts->eflags.zero) {
        goto loc_493CF2;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x17, 4));
	mov(&ts->edx, ts->eax);
	and_(&ts->edx, 0xFFFFFFF0);
	mov(mv, x86::mem(ts->edi + 0x80, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	and_(&ts->eax, 0xFFFFFFF0);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi) + 0x8, 4));
	mov(&ts->eax, 0xCCCCCCCD);
	mul(&ts->eax, ts->edx);
	shr(&ts->edx, 0x6);
	mov(mv, x86::mem(ts->edi + 0x1B, 1), ts->dl);
	goto loc_493D09;

loc_493CF2:
	cmp(&ts->eflags, ts->eax, 0x80134100);
	if (!ts->eflags.zero) {
        goto loc_493D09;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5CC280(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493D09;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);

loc_493D09:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_493BE3;
    }
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_493D20;
    }
	mov(mv, x86::mem(ts->edi + 0xD, 1), 0x1);

loc_493D20:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x7C, 2), 0xFFFFFFFF);
	game::sub_4907A0(ts, mv);
	movsx(mv, &ts->esi, x86::mem(ts->edi + 0x1A, 1));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x3C, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_493D86;
    }
	mov(&ts->ecx, 0x8358C0);
	game::sub_431780(ts, mv);

loc_493D46:
	mov(mv, &ts->ecx, x86::mem(0x8358C0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493D55;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_493D57;

loc_493D55:
	xor_(&ts->ecx, ts->ecx);

loc_493D57:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493D77;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->edi, ts->edi);

loc_493D60:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_493D7D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_493D71;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_493D73;

loc_493D71:
	xor_(&ts->ecx, ts->ecx);

loc_493D73:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493D60;
    }

loc_493D77:
	mov(mv, &ts->ecx, x86::mem(0x7F399C, 4));

loc_493D7D:
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ecx);
	add(&ts->ebp, 0x8);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_493D46;
    }

loc_493D86:
	mov(mv, &ts->eax, x86::mem(0x864F60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493DD7;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi + 0xE, 1), 0x10);
	if (!ts->eflags.zero) {
        goto loc_493DD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_48DF90(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493DD7;
    }
	mov(&ts->ecx, 0x100);
	or_(mv, x86::mem(ts->edi + 0xE, 2), ts->cx);
	or_(mv, x86::mem(ts->eax + 0xE, 2), ts->cx);
	mov(mv, &ts->ecx, x86::mem(0x82DAA8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_493DD7;
    }
	mov(&ts->ecx, 0x200);
	or_(mv, x86::mem(ts->edi + 0xE, 2), ts->cx);
	or_(mv, x86::mem(ts->eax + 0xE, 2), ts->cx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48DF40(ts, mv);
	add(&ts->esp, 0x4);

loc_493DD7:
	mov(&ts->ecx, ts->edi);
	game::sub_40CB20(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_493DE6;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_493DEA;

loc_493DE6:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));

loc_493DEA:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_493E44;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493E0D;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);

loc_493E0D:
	mov(mv, &ts->ecx, x86::mem(0x835798, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x835798, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x835794);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(0x830DA0, 4));
	and_(&ts->eax, 0x1FFF);
	inc(&ts->ebx);
	add(&ts->eax, 0x830DA4);
	mov(mv, x86::mem(0x830DA0, 4), ts->ebx);
	inc(mv, x86::mem(ts->eax, 1));
	goto loc_493E68;

loc_493E44:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_493E4F;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);

loc_493E4F:
	mov(mv, &ts->ecx, x86::mem(0x83585C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x83585C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x835858);

loc_493E68:
	mov(mv, &ts->edx, x86::mem(0x82D384, 4));
	mov(mv, &ts->ecx, x86::mem(0x82D388, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(0x82D384, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x82DAB0, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	add(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x82D388, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_493EA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x80134001);
	if (ts->eflags.zero) {
        goto loc_493EAF;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_493EAF:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_493F18;
    }

loc_493EC2:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x134002);
	if (!ts->eflags.zero) {
        goto loc_493EEF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	game::sub_493790(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82D380, 4));
	add(&ts->esp, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(0x82D380, 4), ts->eax);
	goto loc_493F0D;

loc_493EEF:
	cmp(&ts->eflags, ts->eax, 0x134003);
	if (ts->eflags.zero) {
        goto loc_493F0D;
    }
	cmp(&ts->eflags, ts->eax, 0x134004);
	if (ts->eflags.zero) {
        goto loc_493F0D;
    }
	cmp(&ts->eflags, ts->eax, 0x80134008);
	if (!ts->eflags.zero) {
        goto loc_493F0D;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_5BB720(ts, mv);
	add(&ts->esp, 0x4);

loc_493F0D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_493EC2;
    }

loc_493F18:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_493F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x80134010);
	if (!ts->eflags.zero) {
        goto loc_49405A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + (ts->eax) + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.carry) {
        goto loc_493FD0;
    }
	mov(mv, &ts->ecx, x86::mem(0x82D38C, 4));
	mov(&ts->edi, ts->edi);

loc_493F50:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x134011);
	if (!ts->eflags.zero) {
        goto loc_493F61;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x17, 4));
	and_(&ts->edi, 0xFFFFFFF0);
	goto loc_493FC5;

loc_493F61:
	cmp(&ts->eflags, ts->eax, 0x134017);
	if (!ts->eflags.zero) {
        goto loc_493F73;
    }
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x82D38C, 4), ts->ecx);
	goto loc_493FC5;

loc_493F73:
	cmp(&ts->eflags, ts->eax, 0x134018);
	if (!ts->eflags.zero) {
        goto loc_493F85;
    }
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x82D38C, 4), ts->ecx);
	goto loc_493FC5;

loc_493F85:
	cmp(&ts->eflags, ts->eax, 0x134019);
	if (!ts->eflags.zero) {
        goto loc_493F97;
    }
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x82D38C, 4), ts->ecx);
	goto loc_493FC5;

loc_493F97:
	cmp(&ts->eflags, ts->eax, 0x13401B);
	if (!ts->eflags.zero) {
        goto loc_493FA9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	sub(mv, x86::mem(0x82D390, 4), ts->edx);
	goto loc_493FC5;

loc_493FA9:
	cmp(&ts->eflags, ts->eax, 0x13401A);
	if (ts->eflags.zero) {
        goto loc_493FC5;
    }
	cmp(&ts->eflags, ts->eax, 0x80134100);
	if (!ts->eflags.zero) {
        goto loc_493FC5;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5CE7D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82D38C, 4));

loc_493FC5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.carry) {
        goto loc_493F50;
    }

loc_493FD0:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_494017;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494017;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x830DA0, 4));
	dec(&ts->ecx);
	and_(&ts->eax, 0x1FFF);
	add(&ts->eax, 0x830DA4);
	mov(mv, x86::mem(0x830DA0, 4), ts->ecx);
	dec(mv, x86::mem(ts->eax, 1));

loc_494017:
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7C, 2), 0xFFFFFFFF);
	game::sub_493650(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x82D384, 4));
	mov(mv, &ts->eax, x86::mem(0x82D388, 4));
	add(&ts->esp, 0x4);
	dec(&ts->ecx);
	mov(mv, x86::mem(0x82DAB0, 4), 0x1);
	mov(mv, x86::mem(0x82D384, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	sub(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x82D388, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);

loc_49405A:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_494060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x80134000);
	if (ts->eflags.zero) {
        goto loc_49406F;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_49406F:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_4940CE;
    }

loc_494082:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x80134001);
	if (!ts->eflags.zero) {
        goto loc_4940A5;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_494098;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_490650(ts, mv);
	add(&ts->esp, 0x4);

loc_494098:
	push(mv, &ts->esp, ts->esi);
	game::sub_48D910(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4940B6;

loc_4940A5:
	cmp(&ts->eflags, ts->eax, 0x80134010);
	if (!ts->eflags.zero) {
        goto loc_4940B6;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_493BB0(ts, mv);
	add(&ts->esp, 0x8);

loc_4940B6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_494082;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4940CE;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_490650(ts, mv);
	add(&ts->esp, 0x4);

loc_4940CE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4940E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x80134000);
	if (ts->eflags.zero) {
        goto loc_4940EF;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4940EF:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_494134;
    }

loc_494102:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x80134001);
	if (!ts->eflags.zero) {
        goto loc_494118;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_493EA0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_494129;

loc_494118:
	cmp(&ts->eflags, ts->eax, 0x80134010);
	if (!ts->eflags.zero) {
        goto loc_494129;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_493F20(ts, mv);
	add(&ts->esp, 0x8);

loc_494129:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_494102;
    }

loc_494134:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_494140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x80134010);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_494168;
    }
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0xC);

loc_494168:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xB8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_493BB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xB8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_490650(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_494190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_48DF90(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4941BD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_493F20(ts, mv);
	add(&ts->esp, 0x8);

locret_4941BD:
	retn(mv, &ts->esp);
}

void sub_4941C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_4933F0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4941F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_493560(ts, mv);
	retn(mv, &ts->esp);
}

void sub_494210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto sub_493EA0;
}

void sub_494230(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edx);
	retn(mv, &ts->esp);
}

void sub_494240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_494269;
    }
	goto loc_494250;

loc_494250:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_494250;
    }

loc_494269:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_494270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49428B;
    }
	test(&ts->eflags, ts->al, 0x4);
	if (!ts->eflags.zero) {
        goto loc_49428B;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_494290;

loc_49428B:
	mov(&ts->ecx, 0x1);

loc_494290:
	shr(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	not(&ts->eax);
	and_(&ts->eax, 0x1);
	test(&ts->eflags, ts->edi, ts->edi);
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	mov(&ts->ebx, ts->ecx);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_494370;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4942C0;

loc_4942C0:
	mov(mv, &ts->ecx, x86::mem(0x82DAE8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_494366;
    }
	mov(&ts->ecx, ts->ebx);
	imul(&ts->ecx, ts->ecx, 0xC8);
	lea(mv, &ts->eax, x86::mem(0x82CC30, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->eax);
	goto loc_4942F0;

loc_4942E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	goto loc_4942F0;

loc_4942F0:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2C, 1), 0xD);
	if (!ts->eflags.zero) {
        goto loc_49430A;
    }
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49430A;
    }
	mov(mv, &ts->edx, x86::mem(0x82DAF0, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_49434E;
    }

loc_49430A:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi) + 0x82D398, 1));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	test(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49434E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_49432A;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x1);
	goto loc_49433A;

loc_49432A:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	setnz(ts->eflags, &ts->cl);
	add(&ts->ecx, 0x3);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);

loc_49433A:
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x872E90);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_490920(ts, mv);
	add(&ts->esp, 0x20);

loc_49434E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(0x82DAE8, 4));
	inc(&ts->edi);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4942E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));

loc_494366:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4942C0;
    }
	pop(mv, &ts->esp, ts->esi);

loc_494370:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_494380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77280B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_494442;
    }

loc_4943C4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x33310001);
	if (!ts->eflags.zero) {
        goto loc_4943D2;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	goto loc_494437;

loc_4943D2:
	cmp(&ts->eflags, ts->eax, 0x33310002);
	if (!ts->eflags.zero) {
        goto loc_4943EB;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x74, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	shr(&ts->eax, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	goto loc_494437;

loc_4943EB:
	cmp(&ts->eflags, ts->eax, 0x33310003);
	if (!ts->eflags.zero) {
        goto loc_4943FA;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x78, 4), ts->eax);
	goto loc_494437;

loc_4943FA:
	cmp(&ts->eflags, ts->eax, 0x33310004);
	if (!ts->eflags.zero) {
        goto loc_49441F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->eax, 0x8421085);
	mul(&ts->eax, ts->ecx);
	sub(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1);
	add(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x6);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	goto loc_494437;

loc_49441F:
	cmp(&ts->eflags, ts->eax, 0x33310005);
	if (!ts->eflags.zero) {
        goto loc_494437;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	shr(&ts->eax, 0x5);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_494437:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4943C4;
    }

loc_494442:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x6C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_494464;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_494464:
	mov(mv, &ts->ecx, x86::mem(0x82DB0C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F8F0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_494496;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_48FC40(ts, mv);
	goto loc_494498;

loc_494496:
	xor_(&ts->eax, ts->eax);

loc_494498:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->edi + 0x70, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4944B5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_4919E0(ts, mv);

loc_4944B5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_772800:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_486F10(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_494380:
	mov(&ts->eax, 0x7DED6C);
	goto ___CxxFrameHandler;
}

void sub_4944D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83579C);
	game::sub_4933F0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_494500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_494519;
    }
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);

loc_494519:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::nullsub_1(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_494380(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x78, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_494550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83579C);
	game::sub_493560(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4945B0(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->ecx, 0x88);
	goto loc_494570;

loc_494570:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4945A6;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_494580:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4903B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DA88, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_494580;
    }

loc_4945A6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_494610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_494640;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_494620:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_433070(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_494620;
    }

loc_494640:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_494650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x48, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x49, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4A, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4B, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4D, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_494690(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_494733;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4946B0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0xC, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49472A;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x14, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x24, 4));
	mov(&ts->ebp, 0x2);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4946D0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4946F8;
    }

loc_4946D4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x82DA38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x8);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4946D4;
    }

loc_4946F8:
	add(&ts->edi, 0x4);
	add(&ts->esi, 0x8);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4946D0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_491C50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82DA3C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);

loc_49472A:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4946B0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_494733:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_494740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772848);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x82D639);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_494770:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_494794;
    }
	add(&ts->ecx, 0x10);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x82DA39);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494770;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x14);

loc_494794:
	shl(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x82D638, 4));
	cmp(&ts->eflags, ts->ebx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x82D644, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x82D639, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_494946;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x40, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->ebx, 1), ts->al);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + (ts->esi*4), 4));
	shl(&ts->edx, 0x2);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7FFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49489F;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_494810:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + (ts->ecx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_48CED0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_494886;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_494886;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	if (ts->eflags.zero) {
        goto loc_494886;
    }
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494886;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	if (!ts->eflags.carry) {
        goto loc_49486D;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);

loc_49486D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->edi - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	add(&ts->edi, 0x14);

loc_494886:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494810;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_49489F:
	push(mv, &ts->esp, 0x488D30);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_43E650(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4948D6;
    }

loc_4948C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_48D100(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4948C0;
    }

loc_4948D6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x2, 2), 0x0);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_494911;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494911;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x1, 1), 0x0);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_494911:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_494946;
    }

loc_494925:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_494925;
    }

loc_494946:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x14);

loc_772840:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

SEH_494740:
	mov(&ts->eax, 0x7DEDB4);
	goto ___CxxFrameHandler;
}

void sub_494960(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x80, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x88, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edx);
	retn(mv, &ts->esp);
}

void sub_494980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77286E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x88, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x88, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4949CF;
    }

loc_4949B6:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4949B6;
    }

loc_4949CF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x80, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_494A00;
    }

loc_4949E7:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4949E7;
    }

loc_494A00:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772860:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x80);
	goto sub_4835C0;

SEH_494980:
	mov(&ts->eax, 0x7DEDD8);
	goto ___CxxFrameHandler;
}

void sub_494A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x82DBC8);
	game::sub_494740(ts, mv);
	retn(mv, &ts->esp);
}

void sub_494A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_494AE5;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));

loc_494A70:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->eax*8) + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_494AD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	xor_(&ts->dl, ts->dl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494AA1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494AA1;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	add(&ts->ebp, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_494AA1;
    }
	sub(&ts->eax, ts->esi);
	add(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->eax);
	mov(&ts->dl, 0x1);

loc_494AA1:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494AC2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494AC2;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	add(&ts->ebp, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_494AC2;
    }
	sub(&ts->eax, ts->esi);
	add(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->eax);
	goto loc_494AC6;

loc_494AC2:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_494AD2;
    }

loc_494AC6:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494AD2;
    }
	game::sub_5CE170(ts, mv);

loc_494AD2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494A70;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_494AE5:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_4939B0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_5C0DC0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_51BF70(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(0x82DAB4, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_494B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x74, 4));
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_494BDE;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, ts->edi);

loc_494B30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->eax*8) + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_494BC8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	xor_(&ts->cl, ts->cl);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_494B61;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494B61;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_494B61;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);

loc_494B61:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x3C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_494B7C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494B7C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_494B7C;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);

loc_494B7C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_494BC8;
    }
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_494BC8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5CAAA0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->esi, 0x530B82B0);
	if (ts->eflags.zero) {
        goto loc_494BBF;
    }
	cmp(&ts->eflags, ts->esi, 0x530B82B1);
	if (ts->eflags.zero) {
        goto loc_494BBF;
    }
	cmp(&ts->eflags, ts->esi, 0x530B82B2);
	if (ts->eflags.zero) {
        goto loc_494BBF;
    }
	cmp(&ts->eflags, ts->esi, 0x530B82B3);
	if (ts->eflags.zero) {
        goto loc_494BBF;
    }
	cmp(&ts->eflags, ts->esi, 0x530B82B4);
	if (ts->eflags.zero) {
        goto loc_494BBF;
    }
	cmp(&ts->eflags, ts->esi, 0x530B82B5);
	if (!ts->eflags.zero) {
        goto loc_494BC8;
    }

loc_494BBF:
	push(mv, &ts->esp, ts->esi);
	game::sub_611A10(ts, mv);
	add(&ts->esp, 0x4);

loc_494BC8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x74, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_494B30;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_494BDE:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4939B0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5C0DC0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51BF70(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x82DAB4, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_494C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x70, 4));
	add(&ts->eax, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x9C, 4));
	push(mv, &ts->esp, 0x0);
	add(&ts->eax, 0xFFFFFFE0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_48FD30(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	if (ts->eflags.zero) {
        goto loc_494C61;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	add(&ts->eax, ts->edx);
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_494A50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_494C61:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	add(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_494A50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_494C80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx) - 0x68, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ecx) - 0x9C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	if (ts->eflags.zero) {
        goto loc_494CB4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	add(&ts->eax, ts->edx);
	goto loc_494CB9;

loc_494CB4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	add(&ts->eax, ts->ecx);

loc_494CB9:
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_494B10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494D0E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494D0E;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x74, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_488BC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_494D0E;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(0x833780, 4));
	dec(&ts->ecx);
	and_(&ts->eax, 0x1FFF);
	add(&ts->eax, 0x833784);
	mov(mv, x86::mem(0x833780, 4), ts->ecx);
	dec(mv, x86::mem(ts->eax, 1));

loc_494D0E:
	mov(mv, &ts->eax, x86::mem(0x82DB08, 4));
	pop(mv, &ts->esp, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto locret_494D23;
    }
	mov(mv, x86::mem(0x82DB08, 4), 0x0);

locret_494D23:
	retn(mv, &ts->esp);
}

void sub_494D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83579C);
	game::sub_494740(ts, mv);
	retn(mv, &ts->esp);
}

void sub_494D60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83579C);
	game::sub_494740(ts, mv);
	retn(mv, &ts->esp);
}

void sub_494DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_494E4F;
    }

loc_494DF5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x33310001);
	if (!ts->eflags.zero) {
        goto loc_494E03;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	goto loc_494E44;

loc_494E03:
	cmp(&ts->eflags, ts->eax, 0x33310002);
	if (ts->eflags.zero) {
        goto loc_494E44;
    }
	cmp(&ts->eflags, ts->eax, 0x33310003);
	if (ts->eflags.zero) {
        goto loc_494E44;
    }
	cmp(&ts->eflags, ts->eax, 0x33310004);
	if (!ts->eflags.zero) {
        goto loc_494E36;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->eax, 0x8421085);
	mul(&ts->eax, ts->ecx);
	sub(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1);
	add(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x6);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	goto loc_494E44;

loc_494E36:
	cmp(&ts->eflags, ts->eax, 0x33310005);
	if (!ts->eflags.zero) {
        goto loc_494E44;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);

loc_494E44:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_494DF5;
    }

loc_494E4F:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_494B10(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_494E70;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x70, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_491A30(ts, mv);

loc_494E70:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x70, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_494E90;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_48FD10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82DB0C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_494E90:
	mov(mv, x86::mem(ts->ebx + 0x70, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_494EA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, 0xB3300000);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_494F79;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->ebx) + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_494F2E;
    }

loc_494EC4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0xB3310000);
	if (!ts->eflags.zero) {
        goto loc_494EE3;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_494380(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x70, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82DB10, 4), ts->ecx);
	goto loc_494F23;

loc_494EE3:
	cmp(&ts->eflags, ts->eax, 0xB3320000);
	if (!ts->eflags.zero) {
        goto loc_494F23;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->esi) + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->esi) + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_494F0A;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1);

loc_494F0A:
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8358CC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x8358CC, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x8358C8);

loc_494F23:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_494EC4;
    }

loc_494F2E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48FBC0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_494F70;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x87, 4));
	and_(&ts->ecx, 0xFFFFFF80);
	sub(&ts->edx, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->eax) + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_494A50(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x78, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);

loc_494F70:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_494F79:
	cmp(&ts->eflags, ts->eax, 0xB3320000);
	if (!ts->eflags.zero) {
        goto loc_494F92;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_48FC00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_494F92:
	cmp(&ts->eflags, ts->eax, 0xB0300100);
	if (!ts->eflags.zero) {
        goto loc_495038;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebx) + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebx) + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_495025;
    }
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx) + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(&ts->eax, 0x4EC4EC4F);
	mul(&ts->eax, ts->edi);
	mov(mv, &ts->eax, x86::mem(0x82DB0C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + (ts->ecx) + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + 0x8, 4));
	shr(&ts->esi, 0x4);
	shr(&ts->edi, 0x4);
	game::sub_43F8F0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49500C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(0x82DB10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_48FE60(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->eax);
	game::sub_48FF40(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49500C:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->eax);
	game::sub_48FF40(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_495025:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_495038:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_495040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, 0xB3300000);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_49508E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_495086;
    }
	mov(&ts->edi, ts->edi);

loc_495060:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0xB3310000);
	if (!ts->eflags.zero) {
        goto loc_49507B;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_494DD0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x82DB10, 4), 0x0);

loc_49507B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_495060;
    }

loc_495086:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49508E:
	cmp(&ts->eflags, ts->ecx, 0xB3320000);
	if (ts->eflags.zero) {
        goto loc_4950C1;
    }
	cmp(&ts->eflags, ts->ecx, 0xB0300100);
	if (!ts->eflags.zero) {
        goto loc_4950C8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4950C1;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4950C1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_48FED0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DB0C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_4950C1:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4950C8:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4950D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto sub_494DD0;
}

void sub_4951B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5053B0(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_4951D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4951F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10C98090);
	game::sub_61B500(ts, mv);
	retn(mv, &ts->esp);
}

void sub_495200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x1C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_495220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x29);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_495240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49525D;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49525D;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx) + 0x3C0, 4));
	retn(mv, &ts->esp, 0x4);

loc_49525D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_495270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8704, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_495281;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8710, 4));
	retn(mv, &ts->esp);

loc_495281:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_495290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8704, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4952A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8714, 4));
	retn(mv, &ts->esp);

loc_4952A1:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4952B0(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_501100(ts, mv);
	sub(&ts->eax, 0x3);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	inc(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4952C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24, 1));
	mov(mv, x86::mem(ts->esi + 0x68, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x28, 1));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x2C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x69, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x6A, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4952FD;
    }
	mov(&ts->eax, 0x783FE5);

loc_4952FD:
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_495319;
    }
	mov(&ts->eax, 0x783FE5);

loc_495319:
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_495338;
    }
	mov(&ts->eax, 0x783FE5);

loc_495338:
	push(mv, &ts->esp, 0x32);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5A, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_495357;
    }
	mov(&ts->eax, 0x783FE5);

loc_495357:
	push(mv, &ts->esp, 0x32);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x6B, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x9D, 1), ts->bl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x28);
}

void sub_495380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_495388;
    }
	retn(mv, &ts->esp);

loc_495388:
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8D0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);
}

void sub_4953A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto sub_5379C0;
}

void sub_4953C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto sub_537A10;
}

void sub_4953E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto sub_537A60;
}

void sub_495400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_495430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_495460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_495490(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4954C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4954E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_495500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_495520(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_495540(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_495570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_495590(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_50CB00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4955C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4955F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_495610(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	add(&ts->ecx, 0x44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5053B0(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_495630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772888);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_52AF20(ts, mv);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F53C);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0xFFFFFFFF);
	game::Concurrency__details___ReaderWriterLock___ReaderWriterLock_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x2);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772880:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_52AF90;

SEH_495630:
	mov(&ts->eax, 0x7DEDFC);
	goto ___CxxFrameHandler;
}

void sub_4956A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7728B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F53C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_50D390(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_52AF90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7728A0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_52AF90;

loc_7728A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_50D390;

SEH_4956A0:
	mov(&ts->eax, 0x7DEE28);
	goto ___CxxFrameHandler;
}

void sub_495710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7728CB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_495762;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_554970(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_495762:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_54:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_495710:
	mov(&ts->eax, 0x7DEE4C);
	goto ___CxxFrameHandler;
}

void sub_495780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4956A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_495798;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_495798:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4957A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78F544);
	retn(mv, &ts->esp);
}

void sub_4957B0(x86::thread_state* ts, x86::memory_view* mv) {
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x78F544);
	if (ts->eflags.zero) {
        goto loc_4957C9;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4957C9:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4957D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4957F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);
	game::sub_538060(ts, mv);
	retn(mv, &ts->esp, 0xC);
}

void sub_495810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49583F;
    }
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49583F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_49583F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_495850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49587F;
    }
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49587F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_49587F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_495890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F570);
	mov(&ts->esi, ts->ecx);
	game::sub_51EE80(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4958B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4958C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

locret_4958C5:
	retn(mv, &ts->esp);
}

void sub_4958D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4958E5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

locret_4958E5:
	retn(mv, &ts->esp);
}

void sub_4958F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x1);
	game::sub_5437C0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_495900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_5437C0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_495910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49591E;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_51F820(ts, mv);
	retn(mv, &ts->esp);

loc_49591E:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_495930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78F578);
	goto sub_510D40;
}

void sub_495940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_495930(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_495958;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_495958:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_495960(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_495980;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_495980;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x60, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_495980;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x80, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_495980;
    }
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);

loc_495980:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);
}

void sub_495990(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x10);
	mov(&ts->edi, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x40, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x60, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x80, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0xC0, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x100, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x120, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x124, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x128, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x12C, 1), ts->al);
	mov(mv, x86::mem(ts->edx + 0x12E, 1), ts->al);
	mov(mv, x86::mem(ts->edx + 0x12D, 1), ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_495A00(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x8);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1D, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x1C, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x21, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x20, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x1F, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x1E, 1), ts->al);
	retn(mv, &ts->esp);
}

void sub_495A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xDD60E403);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(0x850078, 4), 0x1);
	game::sub_500B80(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_495A6D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, 0x78F590);
	mov(mv, x86::mem(0x836324, 1), 0x1);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_495A6D:
	mov(mv, &ts->al, x86::mem(0x86347C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_495A93;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	push(mv, &ts->esp, 0x78F590);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_53D710(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_495A93:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0xDD60E402);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_500B80(ts, mv);
	neg(&ts->al);
	mov(&ts->ecx, 0x85AD40);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	add(&ts->eax, 0xDD60E402);
	push(mv, &ts->esp, ts->eax);
	game::sub_5003F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5410E0(ts, mv);
	mov(mv, x86::mem(0x863484, 1), 0x1);
	pop(mv, &ts->esp, ts->ebp);
	goto sub_5404A0;
}

void sub_495AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x863480, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_5309E0(ts, mv);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_495B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0xC407210);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_495B2E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_495C34;
    }

loc_495B2E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_495BF7;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_495B94;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_495C34;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_495C34;
    }
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x836327, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_495B94:
	game::sub_404800(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_495BB5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_495BB5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_495C34;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_495BF7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_495C34;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);

loc_495C34:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_495C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_5448F0(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_495CDF;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_495D1C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_495D1C;
    }
	mov(mv, &ts->al, x86::mem(0x836326, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_495CB1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, x86::mem(0x836326, 1), 0x0);
	goto loc_495CBF;

loc_495CB1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);

loc_495CBF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0xC);
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_495CDF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_495D1C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x18);

loc_495D1C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_495D30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC28);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_50DA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB04669E3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB04669E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x200, 4), ts->eax);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F604);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_495DC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_495DC1:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x118, 4), 0x42F00000);
	game::sub_5129F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xF13F76B4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x604);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F5C0);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x604);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4FFA50(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x604);
	push(mv, &ts->esp, ts->ecx);
	game::sub_512530(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x24);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_5446F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x198, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x184, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x180, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	game::sub_538080(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xC, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xF25B6BBA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x862838, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500A40(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x7D8E1791);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x2, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x195D8D22);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->edi);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F5F4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF13CEF3F);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC28);
	retn(mv, &ts->esp);
}

void sub_495F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_495F0A;
    }
	jmp(x86::mem(0x495F54, 4));

loc_495F11:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_495F20;
    }
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp, 0x4);

loc_495F20:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x78, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_495F30;
    }
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_495F30:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_495F0A;
    }
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_495F3A:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x4);

loc_495F42:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp, 0x4);

def_495F0A:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);
}

void sub_495F70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xEC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_495F92;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_495F92;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(&ts->edi, ts->eax);
	goto loc_495F94;

loc_495F92:
	xor_(&ts->edi, ts->edi);

loc_495F94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_5162D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_495FCB;
    }

loc_495FA3:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7F4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_495FBD;
    }
	inc(mv, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7F5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_495FBD;
    }
	inc(mv, x86::mem(ts->esi + 0x74, 4));

loc_495FBD:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_5162D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_495FA3;
    }

loc_495FCB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_495FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xEC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_495FF2;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_495FF2;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(&ts->edi, ts->eax);
	goto loc_495FF4;

loc_495FF2:
	xor_(&ts->edi, ts->edi);

loc_495FF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_5162D0(ts, mv);
	xor_(&ts->bl, ts->bl);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49603B;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_496010:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7F4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49602C;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7F5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49602C;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49602C;
    }
	mov(&ts->ebp, ts->esi);
	mov(&ts->bl, 0x1);

loc_49602C:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_5162D0(ts, mv);
	inc(&ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_496010;
    }

loc_49603B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_496050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xEC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_496071;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_496071;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(&ts->ecx, ts->eax);
	goto loc_534950;

loc_496071:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->eax);
	goto loc_534950;

loc_534950:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_503680(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x434, 4));
	game::sub_503E70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x540, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_53498C;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	nop();

loc_534980:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5349AE;
    }
	inc(&ts->eax);
	add(&ts->edx, 0x1C);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_534980;
    }

loc_53498C:
	xor_(&ts->eax, ts->eax);

loc_53498E:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_516B90(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x4);
	mov(mv, x86::mem(ts->edi + 0x7F5, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_5349AE:
	imul(&ts->eax, ts->eax, 0x1C);
	add(&ts->eax, ts->esi);
	goto loc_53498E;
}

void sub_496080(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF0, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F6A4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F694);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F688);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x134, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F674);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F660);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F650);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x178, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x178, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F63C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F62C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F61C);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_4961E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x19C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x198, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x1A0, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1A4, 4), ts->edx);
	retn(mv, &ts->esp, 0x10);
}

void sub_496210(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F6A4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F694);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F688);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F674);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F660);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F650);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F63C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F62C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F61C);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_496390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_49639F;
    }
	jmp(x86::mem(0x49648C, 4));

loc_4963A6:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635A9, 1), ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4963B5:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8635AA, 1), ts->cl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4963C5:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x8635AB, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4963D5:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635AC, 1), ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4963E4:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8635AD, 1), ts->cl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4963F4:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x8635AE, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496404:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635B0, 1), ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496413:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8635B2, 1), ts->cl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496423:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x8635B3, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496433:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635B5, 1), ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496442:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8635B6, 1), ts->cl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496452:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x8635B4, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496462:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635B7, 1), ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496471:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8635B8, 1), ts->al);
	mov(mv, x86::mem(0x8635AF, 1), ts->al);
	mov(mv, x86::mem(0x8635B1, 1), ts->al);

def_49639F:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4964D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4964DF;
    }
	jmp(x86::mem(0x4965B8, 4));

loc_4964E6:
	mov(mv, &ts->cl, x86::mem(0x8635A9, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4964F5:
	mov(mv, &ts->cl, x86::mem(0x8635AA, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496504:
	mov(mv, &ts->cl, x86::mem(0x8635AB, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496513:
	mov(mv, &ts->cl, x86::mem(0x8635AC, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496522:
	mov(mv, &ts->cl, x86::mem(0x8635AD, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496531:
	mov(mv, &ts->cl, x86::mem(0x8635AE, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_496540:
	mov(mv, &ts->cl, x86::mem(0x8635B0, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49654F:
	mov(mv, &ts->cl, x86::mem(0x8635B2, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49655E:
	mov(mv, &ts->cl, x86::mem(0x8635B3, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49656D:
	mov(mv, &ts->cl, x86::mem(0x8635B5, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49657C:
	mov(mv, &ts->cl, x86::mem(0x8635B6, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49658B:
	mov(mv, &ts->cl, x86::mem(0x8635B4, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_49659A:
	mov(mv, &ts->cl, x86::mem(0x8635B7, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4965A9:
	mov(mv, &ts->cl, x86::mem(0x8635B8, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);

def_4964DF:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4965F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4965F9;
    }
	jmp(x86::mem(0x496658, 4));

loc_496600:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_496603:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_496609:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

loc_49660F:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp);

loc_496615:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp);

loc_49661B:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);

loc_496621:
	mov(&ts->eax, 0xD);
	retn(mv, &ts->esp);

loc_496627:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);

loc_49662D:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_496633:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp);

loc_496639:
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp);

loc_49663F:
	mov(&ts->eax, 0x9);
	retn(mv, &ts->esp);

loc_496645:
	mov(&ts->eax, 0xA);
	retn(mv, &ts->esp);

loc_49664B:
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp);

def_4965F9:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_4966A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x10);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4966A9;
    }
	jmp(x86::mem(0x496718, 4));

loc_4966B0:
	mov(&ts->eax, 0x268D063C);
	retn(mv, &ts->esp);

loc_4966B6:
	mov(&ts->eax, 0x40C91BA7);
	retn(mv, &ts->esp);

loc_4966BC:
	mov(&ts->eax, 0xFDA6758);
	retn(mv, &ts->esp);

loc_4966C2:
	mov(&ts->eax, 0x59ECB2C2);
	retn(mv, &ts->esp);

loc_4966C8:
	mov(&ts->eax, 0xBA613729);
	retn(mv, &ts->esp);

loc_4966CE:
	mov(&ts->eax, 0xB46377BC);
	retn(mv, &ts->esp);

loc_4966D4:
	mov(&ts->eax, 0x2E37E28B);
	retn(mv, &ts->esp);

loc_4966DA:
	mov(&ts->eax, 0xB4636FA7);
	retn(mv, &ts->esp);

loc_4966E0:
	mov(&ts->eax, 0x373DAD1A);
	retn(mv, &ts->esp);

loc_4966E6:
	mov(&ts->eax, 0x40C7F697);
	retn(mv, &ts->esp);

loc_4966EC:
	mov(&ts->eax, 0xB46342BA);
	retn(mv, &ts->esp);

loc_4966F2:
	mov(&ts->eax, 0xD6F5819B);
	retn(mv, &ts->esp);

loc_4966F8:
	mov(&ts->eax, 0x93FF4A6E);
	retn(mv, &ts->esp);

loc_4966FE:
	mov(&ts->eax, 0x9D53BD10);
	retn(mv, &ts->esp);

loc_496704:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x78F6B4);
	goto sub_505450;

def_4966A9:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_496760(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D070(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D170(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4967E7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4967E7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4967E7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4967E7;
    }
	mov(&ts->al, 0x1);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);

loc_4967E7:
	xor_(&ts->al, ts->al);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);
}

void sub_4967F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496835;
    }
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_496835:
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_496850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_496870(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78F6E8);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78F6DC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78F6D0);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78F6C4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78F6D0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_496920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	sub(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_4969C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xB90F50BB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_496984;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0x3C000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496984:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_496A34;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0x3C000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4969C0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x62BC0DFC);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_496A09;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496A09:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_496A34;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496A34:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_496A40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496AE3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496AE3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x34, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_496AE3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(0x7F4348, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F6F4);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0xB90F50BB);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	game::sub_50C990(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x28);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);

loc_496AE3:
	mov(&ts->ecx, ts->ebx);
	game::sub_500DE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4966A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_496920(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_496B20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_496BBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F70C);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDC0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_496B86;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496B86:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_496C44;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_496BBB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F6FC);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDC0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_496C14;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0x3C000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496C14:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_496C44;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0x3C000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496C44:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_496C50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F720);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDC0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_496CAB;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496CAB:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_496CD6;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	or_(&ts->eax, 0xFF000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_496CD6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_496CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x838590);
	game::sub_5010E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	or_(&ts->ecx, 0x10000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_496D10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_496D19;
    }
	jmp(x86::mem(0x496D4C, 4));

loc_496D20:
	mov(&ts->eax, 0x268D063C);
	retn(mv, &ts->esp);

loc_496D26:
	mov(&ts->eax, 0xBA613729);
	retn(mv, &ts->esp);

loc_496D2C:
	mov(&ts->eax, 0xFDA6758);
	retn(mv, &ts->esp);

loc_496D32:
	mov(&ts->eax, 0x40C91BA7);
	retn(mv, &ts->esp);

loc_496D38:
	mov(&ts->eax, 0x59ECB2C2);
	retn(mv, &ts->esp);

def_496D19:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x78F734);
	goto sub_505450;
}

void sub_496D70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xED8CA191);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496DA1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0xB1EE4CA9);
	push(mv, &ts->esp, ts->ecx);
	goto loc_496DA9;

loc_496DA1:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0xD11ECD79);
	push(mv, &ts->esp, ts->edx);

loc_496DA9:
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x7F904AE8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_496D10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, 0x7019ADD7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->dl, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_496DFE;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_496DFE:
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	if (ts->eflags.zero) {
        goto loc_496E1A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F754, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));

loc_496E1A:
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF6640E9B);
	add(&ts->eax, 0xB5D640B1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x78F748);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_496E7A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, 0x4E0A36A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_496ECD;

loc_496E7A:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_496E8F;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_496E8F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, 0x3B4A1ECB);
	push(mv, &ts->esp, ts->eax);
	goto loc_496E98;

loc_496E8F:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, 0xDB0C5EFD);
	push(mv, &ts->esp, ts->ecx);

loc_496E98:
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_496ECD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_496EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ebp, ts->ecx);
	sub(&ts->edi, ts->esi);
	mov(&ts->ebx, 0x5);

loc_496F05:
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496F1A;
    }
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);

loc_496F1A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_496F2E;
    }
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);

loc_496F2E:
	add(&ts->esi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_496F05;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_496F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	sub(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_496F76;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_496F98;

loc_496F76:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);

loc_496F98:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_496FB3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_496FB3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F760);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_497018;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_497018:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_497040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7728EB);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x38);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4971E3;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x835C98, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F7BC);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x78F7B0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x78F7A4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x78F794);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x42380000);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x78F784);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4970E6;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4FF430(ts, mv);
	goto loc_4970E8;

loc_4970E6:
	xor_(&ts->eax, ts->eax);

loc_4970E8:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x50, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x78F778);
	push(mv, &ts->esp, 0x317AD6F2);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C74, 4));
	mov(mv, &ts->edx, x86::mem(0x835C70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F770);
	push(mv, &ts->esp, 0x317AD6F3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4972A9;
    }
	mov(mv, &ts->ecx, x86::mem(0x835C7C, 4));
	mov(mv, &ts->edx, x86::mem(0x835C78, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F770);
	push(mv, &ts->esp, 0x317AD6F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C84, 4));
	mov(mv, &ts->edx, x86::mem(0x835C80, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F770);
	push(mv, &ts->esp, 0x317AD6F5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C94, 4));
	mov(mv, &ts->edx, x86::mem(0x835C90, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F770);
	push(mv, &ts->esp, 0x317AD6F6);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	goto loc_4972A6;

loc_4971E3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2EEEAA14);
	push(mv, &ts->esp, 0x4D2F5C61);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xFD123B59);
	push(mv, &ts->esp, 0x4D2F5C62);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->edi, ts->edi);

loc_497223:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x317AD6F2, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_497223;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7342982D);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD734D0B8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBDCD0D7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD734C2CF);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8DAFA5E4);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);

loc_4972A6:
	add(&ts->esp, 0x3C);

loc_4972A9:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49731F;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, 0x4D2F5C63);
	mov(&ts->ebx, 0x3);

loc_4972C4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x476FECE6, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	inc(&ts->edi);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4972C4;
    }
	mov(&ts->edi, 0x2);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_497300;

loc_497300:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x317AD6F2, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_497300;
    }

loc_49731F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp);

loc_7728E0:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_497040:
	mov(&ts->eax, 0x7DEE94);
	goto ___CxxFrameHandler;
}

void sub_497330(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->eax*4), 4));
	shl(&ts->ebx, 0x3);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x835CBC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49744D;
    }
	mov(&ts->esi, 0x2734FB0E);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + 0x835CA0, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_497364:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x248B4B21, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx - 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	game::sub_537A10(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x710D931C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x2734FB0D, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x35CCC129);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x30353CD);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x1D658262, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->ebx, 1));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_49740E;
    }
	push(mv, &ts->esp, 0x62BC0DFC);
	goto loc_497413;

loc_49740E:
	push(mv, &ts->esp, 0xB90F50BB);

loc_497413:
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	add(&ts->ebx, 0x8);
	inc(&ts->esi);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_497364;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49744D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x42E73D71);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_497461;

loc_49744D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x42E73D71);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_497461:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49748F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_497470:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x2A9AFED, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_497470;
    }

loc_49748F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_4974A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	mov(&ts->eax, 0xFF);
	mov(&ts->ecx, 0x80);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x84, 4));
	mov(&ts->edx, 0xC8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(&ts->esi, 0x30);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->ecx);
	mov(&ts->ecx, 0xE);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2D);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2B);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xD5);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x8A);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xF4);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xCA);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0xCF);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x58, 4), 0x82);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), 0x32);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0xB5);
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x4A);
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x78, 4), 0x9C);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_497581;
    }
	jmp(x86::mem(0x497688, 4));

loc_497588:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, 0x88C9990A);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_4975A8:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(&ts->esi, 0x8B2F36EE);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_4975C8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->esi, 0x470222FD);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_4975E8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, 0xA9DFE648);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_497608:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(&ts->esi, 0x5D9B6555);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_497628:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->esi, 0x756B5C1B);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

loc_497648:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, 0x55476A96);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);

def_497581:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(&ts->esi, 0x4B9B8F5A);
	game::sub_505560(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp);
}

void sub_4976B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x860A60);
	game::sub_514D30(ts, mv);
	mov(&ts->ecx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4976F4;
    }
	mov(mv, x86::mem(0x83632C, 4), ts->ecx);
	mov(&ts->ecx, 0x860A60);
	mov(mv, x86::mem(0x836330, 4), 0x78F7C8);
	game::sub_514CF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x836334, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836330, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4976F4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F7E4);
	mov(mv, x86::mem(0x83632C, 4), 0x2);
	mov(mv, x86::mem(0x836330, 4), 0x78F7E4);
	mov(mv, x86::mem(0x7F4434, 4), ts->ecx);
	mov(mv, x86::mem(0x836334, 4), 0x0);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_497730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x861E7C);
	game::sub_502420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_497748;
    }
	mov(&ts->ecx, 0x861E7C);
	game::sub_5024F0(ts, mv);

loc_497748:
	push(mv, &ts->esp, 0x78F7E4);
	game::sub_558F00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_497760(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, 0x4B5DE3E9);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10C, 4));
	game::sub_5149C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x110);
	retn(mv, &ts->esp);
}

void sub_4977C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x860A60);
	mov(mv, x86::mem(0x83632C, 4), 0x0);
	game::sub_514D80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	push(mv, &ts->esp, 0x78F7E4);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x78F7C8);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836330, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_497810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x60, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto locret_49784F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_49784F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_49784F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x120, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F7C8);
	push(mv, &ts->esp, 0x78F7E4);
	mov(mv, x86::mem(0x7F4434, 4), ts->edx);
	mov(mv, x86::mem(0x836334, 4), ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_49784F:
	retn(mv, &ts->esp);
}

void sub_497850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772913);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xD0C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x78F824);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_50DB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4978F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4978F4:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F808);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0xC00);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->edi, ts->eax);
	game::sub_50DB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F7F8);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_50DBB0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x860A60);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_514DC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x110, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_497760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x110, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2C167533);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x9F29D70D);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x110, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x24);
	game::sub_501470(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x110, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFECED617);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x604);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x604);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_514B00(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0xD18, 4));
	push(mv, &ts->esp, 0x604);
	push(mv, &ts->esp, ts->eax);
	game::sub_512530(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xD18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_5446F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	inc(&ts->edx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_772900:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_772908:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_50DB70;

SEH_497850:
	mov(&ts->eax, 0x7DEEC0);
	goto ___CxxFrameHandler;
}

void sub_497A80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772913);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F824);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_497ACB;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_497ACB:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_50DB70(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772900:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_772908:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_50DB70;

SEH_497850:
	mov(&ts->eax, 0x7DEEC0);
	goto ___CxxFrameHandler;
}

void sub_497B00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_5448F0(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_497B94;
    }
	if (ts->eflags.zero) {
        goto loc_497B5F;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_497B4F;
    }
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_497BDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x2);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_497B4F:
	push(mv, &ts->esp, 0xF);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_497B5F:
	mov(mv, &ts->eax, x86::mem(0x83632C, 4));
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_497B88;
    }
	mov(&ts->ecx, 0x860A60);
	game::sub_514D80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0x3, 1));
	mov(mv, x86::mem(0x7F4434, 4), ts->eax);

loc_497B88:
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_497B94:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_497BDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_497BBD;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_497BDB;
    }
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x3);
	game::sub_4977C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_497BBD:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F7E4);
	push(mv, &ts->esp, 0x78F7C8);
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x3);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_497BDB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_497BF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F6A4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F694);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F688);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F674);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F660);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F650);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F63C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F62C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F61C);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_497D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA79, 1));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, 0x30003D27);
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1A2826E1);
	push(mv, &ts->esp, 0x5F5E3886);
	push(mv, &ts->esp, 0x61CB0720);
	push(mv, &ts->esp, 0x1B3A2485);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_497DA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	add(&ts->ecx, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->ecx, 0xFE);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_497DBD;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x497DDC, 1));
	jmp(x86::mem(0x497DD0, 4));

loc_497DC4:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_497DCA:
	mov(&ts->eax, 0x1F8);

def_497DBD:
	retn(mv, &ts->esp);
}

void sub_497EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	game::sub_497DA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_497F0D;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_497F0D;
    }
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->ecx, 0x83AD90);
	push(mv, &ts->esp, ts->eax);
	game::sub_534850(ts, mv);
	retn(mv, &ts->esp, 0x4);

loc_497F0D:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_534850(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_497F20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x434, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_497F30;
    }
	push(mv, &ts->esp, ts->esi);
	jmp(x86::mem(0x497F88, 4));

loc_497F37:
	push(mv, &ts->esp, 0x93FDEE74);
	goto loc_497F5F;

loc_497F3E:
	push(mv, &ts->esp, 0xDCB9F861);
	goto loc_497F5F;

loc_497F45:
	push(mv, &ts->esp, 0x35102EDF);
	goto loc_497F5F;

loc_497F4C:
	push(mv, &ts->esp, 0xD7162CFA);
	goto loc_497F5F;

loc_497F53:
	push(mv, &ts->esp, 0xB46377BC);
	goto loc_497F5F;

loc_497F5A:
	push(mv, &ts->esp, 0x30DA61E1);

loc_497F5F:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F834);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_497F82:
	pop(mv, &ts->esp, ts->esi);

def_497F30:
	retn(mv, &ts->esp, 0x4);
}

void sub_497FC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xC4F4678E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1190B316);
	push(mv, &ts->esp, 0x43A743AA);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_498000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xC4F4678E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1190B317);
	push(mv, &ts->esp, 0x43A743AB);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_498040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xC4F4678E);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1190B316);
	push(mv, &ts->esp, 0x43A743AA);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_498070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_498197;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (ts->eflags.zero) {
        goto loc_4980A0;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_49820C;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4980A0:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4980EA;
    }
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4980EA;
    }
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (ts->eflags.zero) {
        goto loc_4980EA;
    }
	cmp(&ts->eflags, ts->ebx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4980EA;
    }
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_4980C4;
    }
	mov(&ts->ebx, 0x1);
	goto loc_4980EA;

loc_4980C4:
	test(&ts->eflags, ts->bl, 0x2);
	if (ts->eflags.zero) {
        goto loc_4980D0;
    }
	mov(&ts->ebx, 0x2);
	goto loc_4980EA;

loc_4980D0:
	test(&ts->eflags, ts->bl, 0x4);
	if (ts->eflags.zero) {
        goto loc_4980DC;
    }
	mov(&ts->ebx, 0x4);
	goto loc_4980EA;

loc_4980DC:
	test(&ts->eflags, ts->bl, 0x8);
	if (ts->eflags.zero) {
        goto loc_49820C;
    }
	mov(&ts->ebx, 0x8);

loc_4980EA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49820C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49820C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x85AD28, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_498120;
    }
	mov(mv, &ts->edi, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_49820C;
    }

loc_498120:
	mov(mv, &ts->edi, x86::mem(0x85AD28, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x85AD28, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x7F4454, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49817A;
    }
	push(mv, &ts->esp, 0xD87133BC);
	push(mv, &ts->esp, 0x78F844);
	push(mv, &ts->esp, 0x78F354);
	mov(mv, x86::mem(0x7F4458, 4), 0xFFFFFFFF);
	game::sub_495490(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49817A:
	push(mv, &ts->esp, 0xD87133BD);
	push(mv, &ts->esp, 0x78F844);
	push(mv, &ts->esp, 0x78F354);
	game::sub_495490(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_498197:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49820C;
    }
	push(mv, &ts->esp, 0x78F354);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4981B6;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49820C;
    }

loc_4981B6:
	cmp(mv, &ts->eflags, x86::mem(0x85AD28, 4), 0x1);
	push(mv, &ts->esp, 0x78F354);
	if (!ts->eflags.zero) {
        goto loc_4981F2;
    }
	game::sub_51BD10(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x4C, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x78F354);
	push(mv, &ts->esp, 0x93B596ED);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4981F2:
	push(mv, &ts->esp, 0x93B596ED);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0xC);

loc_49820C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_498220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_498236;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->eax, x86::mem(0x7F446C, 4));
	if (!ts->eflags.zero) {
        goto locret_49823B;
    }

loc_498236:
	mov(mv, &ts->eax, x86::mem(0x7F4470, 4));

locret_49823B:
	retn(mv, &ts->esp);
}

void sub_498240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto def_498262;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto def_498262;
    }
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_498262;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x498278, 1));
	jmp(x86::mem(0x498270, 4));

def_498262:
	mov(mv, &ts->eax, x86::mem(0x7F4460, 4));
	retn(mv, &ts->esp);
}

void sub_498290(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	mov(mv, &ts->eax, x86::mem(0x7F4478, 4));
	if (ts->eflags.zero) {
        goto locret_4982A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));

locret_4982A1:
	retn(mv, &ts->esp);
}

void sub_4982B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F445C, 4));
	retn(mv, &ts->esp);
}

void sub_4982C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x85009B, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_498351;
    }
	mov(mv, &ts->al, x86::mem(0x85009C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_498304;
    }
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_498325;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	goto loc_498325;

loc_498304:
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_498325;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_498325:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4983A3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	goto loc_4983A3;

loc_498351:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_498379;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_498379:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4983A3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4983A3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4983D4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4983D4;
    }
	push(mv, &ts->esp, 0xDE02CF84);
	goto loc_4983D9;

loc_4983D4:
	push(mv, &ts->esp, 0x8BC0B80C);

loc_4983D9:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F864);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_498400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_498433;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_498433;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_498428;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_498428;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_498428;
    }
	mov(mv, x86::mem(ts->ecx + 0x54, 2), 0x1);
	mov(mv, &ts->ax, x86::mem(ts->ecx + 0x54, 2));
	retn(mv, &ts->esp);

loc_498428:
	mov(mv, x86::mem(ts->ecx + 0x54, 2), 0x4);
	mov(mv, &ts->ax, x86::mem(ts->ecx + 0x54, 2));
	retn(mv, &ts->esp);

loc_498433:
	mov(mv, x86::mem(ts->ecx + 0x54, 2), 0x2);
	mov(mv, &ts->ax, x86::mem(ts->ecx + 0x54, 2));
	retn(mv, &ts->esp);
}

void sub_498440(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_498451;
    }
	push(mv, &ts->esp, 0xA53035DD);
	goto loc_498475;

loc_498451:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_498470;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x59337816);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_498470:
	push(mv, &ts->esp, 0xD157C200);

loc_498475:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x59337816);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4984B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4984BD;
    }
	mov(&ts->eax, 0xF05704AC);
	retn(mv, &ts->esp);

loc_4984BD:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4984CC;
    }
	jmp(x86::mem(0x49855C, 4));

loc_4984D3:
	mov(&ts->eax, 0xB5A633A0);
	retn(mv, &ts->esp);

loc_4984D9:
	mov(&ts->eax, 0x79CEAD40);
	retn(mv, &ts->esp);

loc_4984DF:
	mov(&ts->eax, 0x4B938E3C);
	retn(mv, &ts->esp);

loc_4984E5:
	mov(&ts->eax, 0x4FDE6FEB);
	retn(mv, &ts->esp);

loc_4984EB:
	mov(&ts->eax, 0x6BA31820);
	retn(mv, &ts->esp);

loc_4984F1:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_498507;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	if (!ts->eflags.zero) {
        goto loc_49850C;
    }

loc_498507:
	mov(mv, &ts->eax, x86::mem(0x850088, 4));

loc_49850C:
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4984CC;
    }
	jmp(x86::mem(0x498574, 4));

loc_49851B:
	push(mv, &ts->esp, 0x78F8B8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_498529:
	push(mv, &ts->esp, 0x78F8A4);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_498537:
	push(mv, &ts->esp, 0x78F88C);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_498545:
	push(mv, &ts->esp, 0x78F870);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

def_4984CC:
	mov(&ts->eax, 0x74CE8C0B);
	retn(mv, &ts->esp);
}

void sub_4985A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x78F8C8);
	mov(mv, x86::mem(0x836344, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4985CD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4985CD;
    }

loc_4985C1:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4985C1;
    }

loc_4985CD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4985DD;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);

loc_4985DD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4985ED;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);

loc_4985ED:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4985FD;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);

loc_4985FD:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_498600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498625;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_49861B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_49861B:
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0x8A, 2));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);

locret_498625:
	retn(mv, &ts->esp, 0x4);
}

void sub_498630(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_498646;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	goto loc_49864C;

loc_498646:
	add(&ts->ecx, 0x118);

loc_49864C:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_498669;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	goto loc_498673;

loc_498669:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x120, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);

loc_498673:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->esp, 0x4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::sub_5179D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::sub_5179D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	or_(&ts->eax, 0x400000);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_498740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_498793;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_49877E;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_49877E;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cx, x86::mem(ts->esp + 0x4, 2));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 2), ts->cx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);

loc_49877E:
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x4, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8500B8, 2), ts->ax);
	mov(mv, x86::mem(0x8500BC, 4), ts->ecx);

locret_498793:
	retn(mv, &ts->esp, 0x8);
}

void sub_4987A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4987B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4987B9;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4987B9:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_4987C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4987CD;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp, 0x8);

loc_4987CD:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x94, 4));
	mov(mv, &ts->edx, x86::mem(0x83AAB4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->esi, 0x8);
	if (ts->eflags.zero) {
        goto loc_4987ED;
    }
	cmp(&ts->eflags, ts->esi, 0x200);
	if (!ts->eflags.zero) {
        goto loc_498808;
    }

loc_4987ED:
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0x8A, 2));
	cmp(&ts->eflags, ts->dx, 0xFA0);
	if (ts->eflags.zero) {
        goto def_498819;
    }
	cmp(&ts->eflags, ts->dx, 0x12C1);
	if (ts->eflags.zero) {
        goto def_498819;
    }
	mov(mv, &ts->edx, x86::mem(0x850088, 4));

loc_498808:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->ecx + 0x88, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto def_498819;
    }
	cmp(&ts->eflags, ts->edx, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_498819;
    }
	jmp(x86::mem(0x498880, 4));

loc_498820:
	and_(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498827:
	shr(&ts->eax, 0x2);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498830:
	test(&ts->eflags, ts->al, 0x2);
	goto loc_498836;

loc_498834:
	test(&ts->eflags, ts->al, 0x8);

loc_498836:
	if (ts->eflags.zero) {
        goto loc_498868;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_498868;
    }

loc_498840:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498849:
	shr(&ts->eax, 0xC);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498852:
	shr(&ts->eax, 0x4);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49885B:
	shr(&ts->eax, 0xB);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498864:
	test(&ts->eflags, ts->al, 0x5);
	if (!ts->eflags.zero) {
        goto loc_498840;
    }

loc_498868:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49886E:
	shr(&ts->eax, 0xD);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

def_498819:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4988C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4988DC;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	if (!ts->eflags.zero) {
        goto loc_4988E1;
    }

loc_4988DC:
	mov(mv, &ts->eax, x86::mem(0x850088, 4));

loc_4988E1:
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4988E6;
    }
	jmp(x86::mem(0x498970, 4));

loc_4988ED:
	push(mv, &ts->esp, 0x93FDEE74);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_49894D;

loc_4988FB:
	push(mv, &ts->esp, 0xDCB9F861);
	goto loc_498946;

loc_498902:
	push(mv, &ts->esp, 0x35102EDF);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_49894D;

loc_498910:
	push(mv, &ts->esp, 0xD7162CFA);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_49894D;

loc_49891E:
	push(mv, &ts->esp, 0x30DA61E1);
	goto loc_498946;

loc_498925:
	push(mv, &ts->esp, 0x75F903F4);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_49894D;

loc_498933:
	push(mv, &ts->esp, 0x6F2421B7);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_49894D;

def_4988E6:
	push(mv, &ts->esp, 0x93FDEE74);

loc_498946:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);

loc_49894D:
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x15E1351B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_4989A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F8E4);
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_498A00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x4, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_498A12;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_498A23;
    }

loc_498A12:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x208, 4));
	mov(&ts->ecx, 0x40);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);

loc_498A23:
	cmp(&ts->eflags, ts->dl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_498A3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x214, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	goto loc_498A52;

loc_498A3E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x210, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_498A52:
	game::sub_51CE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x836348, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_498A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x68, 4));
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_498AB8;
    }
	push(mv, &ts->esp, 0x837198);
	game::sub_517E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x124, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x837188);
	game::sub_517E20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498AB8:
	push(mv, &ts->esp, 0x837178);
	game::sub_517E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x124, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x836550);
	game::sub_517E20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_498AE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x1E0, 4));
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_498B1B;
    }
	push(mv, &ts->esp, 0x837198);
	game::sub_517E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x1F4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x837188);
	game::sub_517E20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_498B1B:
	push(mv, &ts->esp, 0x837178);
	game::sub_517E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi*4) + 0x1F4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x836550);
	game::sub_517E20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_498B40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x208, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x64);
	game::sub_532670(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_498B90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	add(&ts->ecx, 0x124);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_498BA0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->edx);
	if (ts->eflags.zero) {
        goto locret_498BB0;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x2F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_498BA0;
    }
	or_(&ts->eax, 0xFFFFFFFF);

locret_498BB0:
	retn(mv, &ts->esp, 0x4);
}

void sub_498BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	add(&ts->ecx, 0x1F4);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_498BD0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->edx);
	if (ts->eflags.zero) {
        goto locret_498BE0;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_498BD0;
    }
	or_(&ts->eax, 0xFFFFFFFF);

locret_498BE0:
	retn(mv, &ts->esp, 0x4);
}

void sub_498BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0xD);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_498C55;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x5D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5E, 1));
	if (ts->eflags.zero) {
        goto loc_498C0D;
    }
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	goto loc_498C14;

loc_498C0D:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->al);

loc_498C14:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x218, 4));
	imul(&ts->eax, ts->eax, 0xD);
	cmp(&ts->eflags, ts->ecx, 0x3);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->edi) + 0x78DF70, 1));
	if (ts->eflags.zero) {
        goto loc_498C4B;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_498C4B;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_498C4B;
    }
	cmp(&ts->eflags, ts->ecx, 0x5);
	if (ts->eflags.zero) {
        goto loc_498C4B;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_498CF8;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x78DF97, 1));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_498C4B:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x78DF8A, 1));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_498C55:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x5D, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->ecx + 0x5E, 1));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_498C6E;
    }
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setz(ts->eflags, &ts->al);
	goto loc_498C75;

loc_498C6E:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->al);

loc_498C75:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*2), 4));
	mov(&ts->esi, ts->edx);
	add(&ts->esi, ts->eax);
	imul(&ts->esi, ts->esi, 0x22);
	mov(mv, &ts->al, x86::mem(ts->esi + (ts->edi) + 0x78DBCB, 1));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x218, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_498CBF;
    }
	imul(&ts->edx, ts->edx, 0x66);
	mov(mv, &ts->dl, x86::mem(ts->edx + (ts->edi) + 0x78DC0F, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_498CA9;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_498CA9:
	cmp(&ts->eflags, ts->dl, 0x2);
	if (!ts->eflags.zero) {
        goto loc_498CF6;
    }
	cmp(&ts->eflags, ts->esi, 0x4);
	setnz(ts->eflags, &ts->al);
	dec(&ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	and_(&ts->eax, 0x2E);
	retn(mv, &ts->esp, 0x4);

loc_498CBF:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5F, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_498CF6;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_498CE5;
    }
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	imul(&ts->eax, ts->eax, 0x22);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->edi) + 0x78DEFB, 1));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_498CE5:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->al);
	imul(&ts->eax, ts->eax, 0x22);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->edi) + 0x78DEFB, 1));

loc_498CF6:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_498CF8:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_498D00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_498D17;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_498D48;
    }

loc_498D17:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498D82;
    }
	mov(mv, &ts->ecx, x86::mem(0x863448, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_498D3A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F928);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_498D3A:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498D82;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_498D58;
    }

loc_498D48:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F910);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_498D58:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498D82;
    }
	mov(mv, &ts->ecx, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_498D73;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498D82;
    }
	mov(mv, &ts->eax, x86::mem(0x863454, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498D82;
    }

loc_498D73:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F8F4);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);

locret_498D82:
	retn(mv, &ts->esp);
}

void sub_498D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_498DB5;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_498DB5;
    }

loc_498DA7:
	push(mv, &ts->esp, 0x78F910);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_498DB5:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498E0A;
    }
	mov(mv, &ts->ecx, x86::mem(0x863448, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_498DD6;
    }
	push(mv, &ts->esp, 0x78F928);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_498DD6:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498E0A;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_498DA7;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498E0A;
    }
	mov(mv, &ts->ecx, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto locret_498E0A;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498E0A;
    }
	mov(mv, &ts->eax, x86::mem(0x863454, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_498E0A;
    }
	push(mv, &ts->esp, 0x78F8F4);
	game::sub_558F00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_498E0A:
	retn(mv, &ts->esp);
}

void sub_498E10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x863444, 4));
	neg(&ts->esi);
	sbb(&ts->esi, ts->esi);
	and_(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85EF50);
	game::sub_5011A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24, 1));
	if (ts->eflags.zero) {
        goto loc_498E54;
    }
	cmp(&ts->eflags, ts->al, 0x3);
	if (!ts->eflags.zero) {
        goto loc_498E44;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_53DD30(ts, mv);
	add(&ts->esp, 0x4);

loc_498E42:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_498E44:
	cmp(&ts->eflags, ts->al, 0x4);
	if (!ts->eflags.zero) {
        goto loc_498E42;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_53DD70(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_498E54:
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_498E5E;
    }
	pop(mv, &ts->esp, ts->esi);
	goto ___setargv;

loc_498E5E:
	cmp(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_498E42;
    }
	pop(mv, &ts->esp, ts->esi);
	goto sub_510C60;
}

void sub_498E70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	push(mv, &ts->esp, ts->esi);
	neg(&ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x863450, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85EF50);
	game::sub_5011A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_498EEB;
    }
	mov(mv, &ts->esi, x86::mem(0x863444, 4));
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	neg(&ts->esi);
	sbb(&ts->esi, ts->esi);
	and_(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85EF50);
	game::sub_541930(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85B940);
	game::sub_541960(ts, mv);
	mov(&ts->ecx, 0x85EF50);
	game::sub_533680(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500AB0(ts, mv);
	push(mv, &ts->esp, 0x78F958);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_498EEB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F940);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_498F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_499090;
    }
	if (ts->eflags.zero) {
        goto loc_499067;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_498F6B;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_498F45;
    }
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_498F45;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_498F49;

loc_498F45:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);

loc_498F49:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5251A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_498F6B:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x63857DE0);
	if (ts->eflags.zero) {
        goto loc_499011;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (ts->eflags.zero) {
        goto loc_498FD6;
    }
	cmp(&ts->eflags, ts->eax, 0xD72F002A);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_495290(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_498FBE;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_495290(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541120(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);

loc_498FBE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_498FD6:
	mov(&ts->ecx, 0x85AD40);
	game::sub_495270(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x838590);
	game::sub_5010E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_498E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499011:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499038;
    }
	mov(mv, &ts->eax, x86::mem(0x863454, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499038;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_495290(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::nullsub_3(ts, mv);

loc_499038:
	mov(&ts->ecx, 0x8635BC);
	game::sub_511280(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499067:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49907D;
    }
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }

loc_49907D:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499090:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_499105;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4990B8;
    }
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }

loc_4990B8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499105:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499117;
    }
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49915A;
    }

loc_499117:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49915A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x18);

loc_49915A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_499160(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_4FE970(ts, mv);
	push(mv, &ts->esp, 0x9F29D70D);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFECED617);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x84);
	retn(mv, &ts->esp);
}

void sub_4991B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	sub(&ts->esp, 0x280);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4993CA;
    }
	mov(mv, &ts->ecx, x86::mem(0x863450, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_499355;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_498E10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x949F4947);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x949F4948);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB1000CC8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0xDE02CF84);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0xB1000CC8);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85EF50);
	game::sub_514860(ts, mv);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85EF50);
	game::sub_514910(ts, mv);
	goto loc_49938D;

loc_499355:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4993CA;
    }
	mov(mv, &ts->eax, x86::mem(0x863454, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4993CA;
    }
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85B940);
	game::sub_515160(ts, mv);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85B940);
	game::sub_515250(ts, mv);

loc_49938D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xDE075B62);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x2C167533);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(&ts->ecx, ts->esi);
	add(&ts->esp, 0x20);
	game::sub_499160(ts, mv);

loc_4993CA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x280);
	retn(mv, &ts->esp);
}

void sub_4993E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F978);
	mov(&ts->ecx, 0x85B940);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49942C;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49942C;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_533CF0(ts, mv);

loc_49942C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49943D;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B40(ts, mv);

loc_49943D:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_499460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x836350, 1));
	retn(mv, &ts->esp);
}

void sub_499470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	mov(mv, &ts->edx, x86::mem(0x86344C, 4));
	mov(mv, x86::mem(0x836350, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(0x83634C, 4), ts->eax);
	game::sub_54CAF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499550;
    }
	mov(mv, &ts->eax, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499550;
    }
	mov(&ts->ecx, 0x827E88);
	game::std__codecvt_base__do_always_noconv_void_(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499550;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(0x836351, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x827E88);
	game::sub_430570(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x863444, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x30, 4));
	mov(&ts->ecx, 0x827E88);
	mov(mv, x86::mem(0x827ED4, 4), ts->eax);
	game::sub_430590(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49953F;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_437270(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_437370(ts, mv);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_499535;
    }

loc_499527:
	game::sub_57EF60(ts, mv);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499527;
    }

loc_499535:
	mov(&ts->ecx, 0x827E88);
	game::sub_4305A0(ts, mv);

loc_49953F:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_5F4240(ts, mv);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_499550:
	mov(mv, x86::mem(0x836351, 1), 0x0);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4995A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x836350, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4995FA;
    }
	mov(mv, &ts->al, x86::mem(0x836351, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4995C7;
    }
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_5F4230(ts, mv);

loc_4995C7:
	mov(mv, &ts->esi, x86::mem(0x83634C, 4));
	push(mv, &ts->esp, 0x78F910);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4995EE;
    }
	push(mv, &ts->esp, 0x78F910);
	game::sub_557DF0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4995EE:
	push(mv, &ts->esp, 0x0);
	game::sub_557DF0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4995FA:
	mov(&ts->ecx, 0x85AD40);
	game::sub_528560(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_49961F;
    }
	push(mv, &ts->esp, 0x4);
	game::sub_5F4240(ts, mv);
	mov(mv, x86::mem(0x836350, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49961F:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);
	mov(mv, x86::mem(0x836350, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_499640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499682;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_499681;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500460(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x20, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_49966E;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49966E;
    }
	push(mv, &ts->esp, 0x1);
	goto loc_499670;

loc_49966E:
	push(mv, &ts->esp, 0x0);

loc_499670:
	game::sub_499470(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_499681;
    }
	game::sub_4995A0(ts, mv);

loc_499681:
	pop(mv, &ts->esp, ts->esi);

loc_499682:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_499690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49982A;
    }
	if (ts->eflags.zero) {
        goto loc_4997CD;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4996E4;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_4998CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4996E4:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x63857DE0);
	if (ts->eflags.zero) {
        goto loc_499742;
    }
	cmp(&ts->eflags, ts->eax, 0xD72F002A);
	if (!ts->eflags.zero) {
        goto loc_4998CE;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499735;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499735;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_5150D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499735:
	mov(&ts->ecx, ts->esi);
	game::sub_499640(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499742:
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499788;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499788;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501640(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499788:
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	mov(mv, &ts->edx, x86::mem(0x86344C, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::nullsub_3(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4997CD:
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499813;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499813;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501640(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499813:
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_49982A:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_499888;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4998CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499870;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0xC);

loc_499870:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499888:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4998BC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0xC);

loc_4998BC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_4998CE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4998E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	sub(&ts->esp, 0x200);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4999E1;
    }
	mov(mv, &ts->al, x86::mem(0x85B940, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499977;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC4DF3B44);
	push(mv, &ts->esp, 0x4A04E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0xD72F002A);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x2EDBDE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);

loc_499977:
	mov(mv, &ts->ecx, x86::mem(0x863444, 4));
	mov(mv, &ts->edx, x86::mem(0x86344C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, ts->edx);
	game::sub_4FFEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2EDBDE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85B940);
	game::sub_515330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x4A04E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);

loc_4999E1:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499A67;
    }
	mov(mv, &ts->edi, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_499A67;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_512920(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4A04E7C);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->edi);
	game::sub_4FFEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2EDBDE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x50, 1));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_499A4B;
    }
	push(mv, &ts->esp, 0x67F55A89);
	goto loc_499A50;

loc_499A4B:
	push(mv, &ts->esp, 0x54B17DC);

loc_499A50:
	push(mv, &ts->esp, 0xD72F002A);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_499A67:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);
}

void sub_499A70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F988);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_499AEA;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_499ABC;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_499AB0:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499AB0;
    }

loc_499ABC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_499AEA;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_571010(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xD8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5D6130(ts, mv);

loc_499AEA:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_499B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499B98;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x863448, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_499B97;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4FFDD0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_499B9A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_53D630(ts, mv);
	add(&ts->esp, 0x8);

loc_499B97:
	pop(mv, &ts->esp, ts->esi);

loc_499B98:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_499B9A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_499B10;

loc_499B10:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	mov(mv, &ts->edx, x86::mem(0x863448, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541160(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	game::sub_5F41E0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_499BB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499BE4;
    }
	mov(mv, &ts->eax, x86::mem(0x863448, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499BE4;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5138F0(ts, mv);

loc_499BE4:
	mov(&ts->ecx, 0x8635BC);
	game::sub_511280(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	retn(mv, &ts->esp);
}

void sub_499C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_499D01;
    }
	if (ts->eflags.zero) {
        goto loc_499CC1;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_499C73;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_499C4C;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_499CC1;
    }
	game::sub_499BB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499C4C:
	push(mv, &ts->esp, 0xF);
	game::sub_50D180(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x63857DE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5251A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499C73:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x63857DE0);
	if (ts->eflags.zero) {
        goto loc_499CA6;
    }
	cmp(&ts->eflags, ts->eax, 0xD72F002A);
	if (!ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_499B50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499CA6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_499BB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499CC1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0xD72F002A);
	if (ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD72F002A);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499D01:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_499D6D;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499D51;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499D51:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_499D6D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x63857DE0);
	if (ts->eflags.zero) {
        goto loc_499DA4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x63857DE0);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x14);

loc_499DA4:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_499DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x836352, 1));
	retn(mv, &ts->esp);
}

void sub_499DC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x836353, 1));
	retn(mv, &ts->esp);
}

void sub_499DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78F998);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85EF50);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_5012E0(ts, mv);
	mov(&ts->ecx, 0x8364F4);
	mov(mv, x86::mem(0x7F68B4, 4), 0x1);
	game::sub_510A70(ts, mv);
	mov(&ts->ecx, 0x8364F4);
	game::sub_523B40(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_499E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(0x836358, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_499E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x8364F4);
	game::sub_510940(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8364F4);
	game::sub_523BC0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0xB6638240);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x824FA72F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_499EC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836354, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_499F0E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x499E50);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x78F9A8);
	mov(mv, x86::mem(0x836358, 1), 0x0);
	game::sub_57CF70(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(0x836354, 4), ts->eax);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_499F0E;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_499F00:
	game::sub_57EF60(ts, mv);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_499F00;
    }

locret_499F0E:
	retn(mv, &ts->esp);
}

void sub_499F10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE9, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x554, 4));
	if (ts->eflags.zero) {
        goto loc_499F45;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE9, 1), 0x0);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_499F45:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEA, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499F77;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEA, 1), 0x0);
	game::sub_61F820(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->edi);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x20);

loc_499F77:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_499F9A;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEB, 1), 0x0);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_499F9A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_499FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_499F10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_499FCC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_5CE6C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x98, 1), ts->bl);

loc_499FCC:
	mov(mv, &ts->eax, x86::mem(0x836354, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_499FEA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x836358, 1), ts->bl);
	mov(mv, x86::mem(0x836354, 4), ts->ebx);

loc_499FEA:
	mov(&ts->ecx, 0x8A3288);
	game::sub_61C5B0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85EF50);
	mov(mv, x86::mem(0x836352, 1), ts->bl);
	game::sub_501290(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85EF50);
	game::sub_5012E0(ts, mv);
	game::sub_510C70(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_430310(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_49A050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_49A0FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->edi*4) + 0x58, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_49A0FD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49A110(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_49A163;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_49A142;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0xC8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49A142:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->edi*4) + 0xC8, 4));
	push(mv, &ts->esp, 0x78F9C8);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49A163:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49A170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xE4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_49A1B8;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC8, 4));
	mov(&ts->ebx, 0x3);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_49A190:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	add(&ts->esi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49A190;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0xE4, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);

loc_49A1B8:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_49A1C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_49A1DF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_49A1DF;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, ts->edx);

locret_49A1DF:
	retn(mv, &ts->esp, 0x4);
}

void sub_49A1F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x74, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49A2E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49A3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49A460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x3C);
	push(mv, &ts->esp, 0x79AD657F);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x406415E3);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), 0x1);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x48);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_49A620(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A634;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x0);

locret_49A634:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A640(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A654;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x1);

locret_49A654:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A660(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A674;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x2);

locret_49A674:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A680(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A694;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x3);

locret_49A694:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A6A0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A6B4;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x4);

locret_49A6B4:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A6C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A6D4;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x5);

locret_49A6D4:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A6E0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A6F4;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x7);

locret_49A6F4:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A700(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49A714;
    }
	mov(mv, x86::mem(0x83AA04, 4), 0x8);

locret_49A714:
	retn(mv, &ts->esp, 0x14);
}

void sub_49A720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49A73E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49A73E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA28, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49A770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x26782C3E);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49A790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA28, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49A7C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49A7DE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49A7DE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA38, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49A810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xFD487543);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49A830(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA38, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49A860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49A87E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49A87E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA40, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49A8B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x69B745C6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49A8D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA40, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49A900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49A91E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49A91E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA3C, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49A950(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xA2B1F888);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49A970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA3C, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49A9A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49A9BE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49A9BE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA2C, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49A9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x9E5FB82A);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49AA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA2C, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49AA40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49AA5E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49AA5E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA30, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AA90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x418E681D);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49AAB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA30, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49AAE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49AAFE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49AAFE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA34, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x83AA28);
	game::sub_469050(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AB30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xDF21EAC2);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49AB50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83AA34, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3D4CCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49AB80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x83AA50, 4));
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49AB9F;
    }
	dec(&ts->edi);
	if (!ts->eflags.sign) {
        goto loc_49ABAE;
    }
	mov(&ts->edi, 0x1);
	goto loc_49ABAE;

loc_49AB9F:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49ABAE;
    }
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49ABAE;
    }
	xor_(&ts->edi, ts->edi);

loc_49ABAE:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, x86::mem(0x83AA50, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49ABD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x2881AB87);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AA50, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49AC06;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49AC0B;
    }
	mov(&ts->ecx, 0x55DA8BF8);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49AC06:
	mov(&ts->ecx, 0xC50FA35F);

loc_49AC0B:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AC20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49AC35;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49AC46;
    }

loc_49AC35:
	mov(mv, &ts->cl, x86::mem(0x8500C9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8500C9, 1), ts->cl);

loc_49AC46:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AC60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xB660729);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8500C9, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49AC90;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x63C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49AC90:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xCCFA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49ACB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49ACC5;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49ACD6;
    }

loc_49ACC5:
	mov(mv, &ts->cl, x86::mem(0x8500CA, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x8500CA, 1), ts->cl);

loc_49ACD6:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49ACF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xD1009B34);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8500CA, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49AD20;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x63C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49AD20:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xCCFA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AD40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49AD55;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49ADA9;
    }

loc_49AD55:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_49AD70;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B104, 4));
	goto loc_49AD76;

loc_49AD70:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_49AD76:
	push(mv, &ts->esp, ts->esi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA20, 4));
	mov(mv, &ts->esi, x86::mem(0x8650B8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49ADA6;
    }
	push(mv, &ts->esp, 0x1);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_578EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_49ADA6:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);

loc_49ADA9:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49ADC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xF26A5CBF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	mov(&ts->eax, 0xCCFA);
	if (!ts->eflags.parity) {
        goto loc_49ADF1;
    }
	mov(&ts->eax, 0x63C);

loc_49ADF1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49AE15;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49AE26;
    }

loc_49AE15:
	mov(mv, &ts->cl, x86::mem(0x83AA18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x83AA18, 1), ts->cl);

loc_49AE26:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AE40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x85A6CE05);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA18, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AE80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49AE97;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49AEC5;
    }

loc_49AE97:
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49AEBA;
    }
	mov(mv, x86::mem(0x83AA1A, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49AEBA:
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49AEC5;
    }
	mov(mv, x86::mem(0x83AA1A, 1), 0x0);

loc_49AEC5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AEE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xF86A6272);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFF71B);
	add(&ts->eax, 0x8569AB44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AF20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83AC30, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49AF3E;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_49AF4E;
    }
	mov(&ts->eax, 0x2);
	goto loc_49AF4E;

loc_49AF3E:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49AF4E;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49AF4E;
    }
	xor_(&ts->eax, ts->eax);

loc_49AF4E:
	mov(mv, x86::mem(0x83AC30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49AF70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xBC0E6C55);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AC30, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49AFBD;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_49AFA9;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49AFC2;
    }
	mov(&ts->ecx, 0xDBBCF37C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49AFA9:
	mov(&ts->ecx, 0xCAB262DE);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49AFBD:
	mov(&ts->ecx, 0xDBBB4E8F);

loc_49AFC2:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49AFE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x850078, 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA1B, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	setnz(ts->eflags, &ts->cl);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49B00C;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_49B01B;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_49B01B;

loc_49B00C:
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49B01B;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49B01B;
    }
	xor_(&ts->eax, ts->eax);

loc_49B01B:
	mov(mv, x86::mem(0x83AA1B, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B040(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x9FA5EC9E);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x83AA1B, 1));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49B08F;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_49B07B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49B094;
    }
	mov(&ts->ecx, 0xF4B00E99);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B07B:
	mov(&ts->ecx, 0xF75595F2);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B08F:
	mov(&ts->ecx, 0xCCFA);

loc_49B094:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B0B0(x86::thread_state* ts, x86::memory_view* mv) {
	movzx(mv, &ts->eax, x86::mem(0x83AA1C, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49B0D0;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_49B0E0;
    }
	mov(&ts->eax, 0x2);
	goto loc_49B0E0;

loc_49B0D0:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49B0E0;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49B0E0;
    }
	xor_(&ts->eax, ts->eax);

loc_49B0E0:
	mov(mv, x86::mem(0x83AA1C, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xC6269082);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x83AA1C, 1));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49B14F;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_49B13B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49B154;
    }
	mov(&ts->ecx, 0xF4B00E99);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B13B:
	mov(&ts->ecx, 0xF75595F2);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B14F:
	mov(&ts->ecx, 0xCCFA);

loc_49B154:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49B1B0;
    }
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49B1E1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x844AD8, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49B1D9;
    }
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B1E1;
    }

loc_49B1A2:
	mov(&ts->al, 0x1);
	mov(mv, x86::mem(0x844AD8, 1), ts->al);
	mov(mv, x86::mem(0x844AD9, 1), ts->al);
	goto loc_49B1EE;

loc_49B1B0:
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49B1EE;
    }
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49B1D9;
    }
	cmp(mv, &ts->eflags, x86::mem(0x844AD8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_49B1E1;
    }
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49B1A2;
    }

loc_49B1D9:
	mov(mv, x86::mem(0x844AD8, 1), ts->bl);
	goto loc_49B1E8;

loc_49B1E1:
	mov(mv, x86::mem(0x844AD8, 1), 0x1);

loc_49B1E8:
	mov(mv, x86::mem(0x844AD9, 1), ts->bl);

loc_49B1EE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x996463E6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B241;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->eax, 0x1B7ABF8E);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B241:
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x1B7ABF90);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49B277;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49B290;
    }

loc_49B277:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA68, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA68, 1), ts->dl);

loc_49B290:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B2B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x358CDCFD);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA68, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->dl);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0xFFFF3942);
	add(&ts->edx, 0xCCFA);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B2F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49B305;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_49B31E;
    }

loc_49B305:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49B31E:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x4DEAB931);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B36E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49B36E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	lea(mv, &ts->edi, x86::mem(0x83AA64, 4));
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B3A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x56FEB0D2);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA80, 4));
	mov(&ts->eax, 0x3DCCCCCD);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49B400(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B41E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49B41E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	lea(mv, &ts->edi, x86::mem(0x83AA64, 4));
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_49B497;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_49B489;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_49B489:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F9DC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_49B497:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F9DC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49B4B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x1CC4B396);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B4D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA84, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_49B547;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_49B50F;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));

loc_49B50F:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F9E0, 4));
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3DCCCCCD);
	add(&ts->ecx, 0x54);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_49B547:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	goto loc_49B50F;
}

void sub_49B550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B56E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));

loc_49B56E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	lea(mv, &ts->edi, x86::mem(0x83AA64, 4));
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B5A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x28F42AE8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B5C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83AA88, 4));
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x3F800000);
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x3DCCCCCD);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x54);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49B600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	mov(mv, &ts->eax, x86::mem(0x870D1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49B633;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_49B655;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_49B620:
	mov(mv, &ts->edx, x86::mem(0x86E884, 4));
	inc(&ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_49B650;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_49B620;
    }
	goto loc_49B650;

loc_49B633:
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49B655;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49B655;
    }
	nop();

loc_49B640:
	mov(mv, &ts->edx, x86::mem(0x86E87C, 4));
	dec(&ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_49B650;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49B640;
    }

loc_49B650:
	mov(mv, x86::mem(0x870D1C, 4), ts->eax);

loc_49B655:
	mov(mv, &ts->edx, x86::mem(0x86E880, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_49B66F;
    }
	mov(mv, x86::mem(0x870D1C, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49B66F:
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49B67A;
    }
	mov(mv, x86::mem(0x8709D1, 1), 0x1);

loc_49B67A:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xA9A76BBA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x870D1C, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_49B6AE;
    }
	jmp(x86::mem(0x49B728, 4));

loc_49B6B5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78FA1C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B6C8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78FA14);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B6DB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78FA08);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B6EE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9FC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B701:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9F0);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B714:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9E4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);

def_49B6AE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B78D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x87099C, 4), ts->eax);
	game::sub_5BE9F0(ts, mv);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));

loc_49B78D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B7A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xB55E7665);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B7C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x87099C, 4));
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x78, 4), 0x40A00000);
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x54);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49B7F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49B82D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870D18, 4), ts->eax);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49B82D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49B840(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x61A50B8F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870D18, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x876530, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49B8A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_49B8B2;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_49B8CB;
    }

loc_49B8B2:
	mov(mv, &ts->edx, x86::mem(0x870D24, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, x86::mem(0x870D24, 4), ts->eax);

loc_49B8CB:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_49B8E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x5B4AA6E4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x870D24, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49B916;
    }
	push(mv, &ts->esp, 0x63C);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49B916:
	push(mv, &ts->esp, 0x88576CFF);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49B930(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_49B953;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

locret_49B953:
	retn(mv, &ts->esp, 0x8);
}

void sub_49B960(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x381FE1E9);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49B980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49B992;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto locret_49B9D0;
    }

loc_49B992:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_50D150(ts, mv);
	push(mv, &ts->esp, 0x2BBCCA6B);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->esi);

locret_49B9D0:
	retn(mv, &ts->esp, 0x8);
}

void sub_49B9E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x13F0EDEB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49BA00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49BA3D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870CB8, 4), ts->eax);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49BA3D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BA50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x7D3930E7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49BA70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870CB8, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8764D0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49BAB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BACC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BACC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BAE4;
    }

loc_49BACC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BAE4;
    }
	xor_(mv, x86::mem(0x870CBC, 4), 0x1);

loc_49BAE4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x8FE9288E);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xABCC822E);
	add(&ts->ecx, 0xB55E7678);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BB30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49BB66;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870CC0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49BB66:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xA7A683AC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49BB90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870CC0, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8764D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49BBD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BBEC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BBEC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BC04;
    }

loc_49BBEC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BC04;
    }
	xor_(mv, x86::mem(0x870CC4, 4), 0x1);

loc_49BC04:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BC10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xCFBEDB50);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CC4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BC6C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BC6C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BC84;
    }

loc_49BC6C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876510, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BC84;
    }
	xor_(mv, x86::mem(0x870CF8, 4), 0x1);

loc_49BC84:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BC90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x4AC50BCF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CF8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xABCC822E);
	add(&ts->ecx, 0xB55E7678);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BCD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BCEC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BCEC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BD04;
    }

loc_49BCEC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764E8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BD04;
    }
	xor_(mv, x86::mem(0x870CD0, 4), 0x1);

loc_49BD04:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BD10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x6CC3750);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CD0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BD50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49BD86;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870CF4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49BD86:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BD90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xBDE2E94B);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49BDB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870CF4, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x87650C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49BE2D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870CD4, 4), ts->eax);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49BE2D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BE40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x2A2A4AB3);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49BE60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870CD4, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8764EC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49BEA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BEBC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BEBC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BEE5;
    }

loc_49BEBC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764F8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BEE5;
    }
	mov(mv, &ts->ecx, x86::mem(0x870CE0, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870CE0, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49BEE5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BEF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x6F2C7417);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CE0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BF30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BF4C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BF4C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BF75;
    }

loc_49BF4C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764FC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BF75;
    }
	mov(mv, &ts->ecx, x86::mem(0x870CE4, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870CE4, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49BF75:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49BF80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x62925361);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CE4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49BFC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49BFDC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49BFDC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49BFF4;
    }

loc_49BFDC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876504, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49BFF4;
    }
	xor_(mv, x86::mem(0x870CEC, 4), 0x1);

loc_49BFF4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x2522A4E9);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CEC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C05C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C05C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C085;
    }

loc_49C05C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C085;
    }
	mov(mv, &ts->ecx, x86::mem(0x870CDC, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870CDC, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49C085:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x822E4E9B);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CDC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C0D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C0EC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C0EC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C104;
    }

loc_49C0EC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x8764F0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C104;
    }
	xor_(mv, x86::mem(0x870CD8, 4), 0x1);

loc_49C104:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C110(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x95B8F38D);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x870CD8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C140;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x63C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49C140:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xCCFA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49C19D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x48, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x870D08, 4), ts->eax);
	mov(mv, x86::mem(0x8709D1, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_49C19D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C1B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x4CD775AC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_49C1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x870D08, 4));
	add(&ts->ecx, 0x54);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x876520, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49C210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C22C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C22C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C255;
    }

loc_49C22C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876508, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C255;
    }
	mov(mv, &ts->ecx, x86::mem(0x870CF0, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870CF0, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49C255:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xA9C27DFD);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CF0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C2A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C2BC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C2BC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C2D4;
    }

loc_49C2BC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x87651C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C2D4;
    }
	xor_(mv, x86::mem(0x870D04, 4), 0x1);

loc_49C2D4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C2E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x11504D0E);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870D04, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C320(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C33C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C33C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C354;
    }

loc_49C33C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876524, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C354;
    }
	xor_(mv, x86::mem(0x870D0C, 4), 0x1);

loc_49C354:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x4E57D355);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870D0C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C3A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C3BC;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C3BC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C3E5;
    }

loc_49C3BC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876514, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C3E5;
    }
	mov(mv, &ts->ecx, x86::mem(0x870CFC, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870CFC, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49C3E5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xD6F5F38C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870CFC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49C44C;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C44C;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C475;
    }

loc_49C44C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(0x876518, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C475;
    }
	mov(mv, &ts->ecx, x86::mem(0x870D00, 4));
	mov(&ts->eax, 0x1);
	xor_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x870D00, 4), ts->ecx);
	mov(mv, x86::mem(0x8709D1, 1), ts->al);

loc_49C475:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49C480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x571F6C00);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870D00, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49C4D9;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_49C4D9;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_49C4E9;
    }

loc_49C4D9:
	mov(mv, &ts->eax, x86::mem(0x876528, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C4E9;
    }
	xor_(mv, x86::mem(0x870D10, 4), 0x1);

loc_49C4E9:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_49C500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x4CDDBEBB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x870D10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xFFFF3942);
	add(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49C540(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49C5B9;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_49C5EB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_49C5EB;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C5A1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_49C5A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA60);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_49C5A1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA50);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_49C5B9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C5EB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_49C5EB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_49C5F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x836364, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_49C600(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x3);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49C687;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x154, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836364, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5C1000(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	if (ts->eflags.zero) {
        goto loc_49C65C;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C686;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (!ts->eflags.zero) {
        goto loc_49C653;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));

loc_49C653:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	jmp(x86::mem(ts->edx + 0xC, 4));

loc_49C65C:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49C686;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x54, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_49C676;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911C0A4B);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_49C676:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	jmp(x86::mem(ts->eax + 0xC, 4));

loc_49C686:
	pop(mv, &ts->esp, ts->esi);

loc_49C687:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_49C690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14D, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_49C6BA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);

loc_49C6BA:
	cmp(&ts->eflags, ts->edi, 0x5D1A570F);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49C80E;
    }
	if (ts->eflags.zero) {
        goto loc_49C7EB;
    }
	cmp(&ts->eflags, ts->edi, 0x22222222);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49C78D;
    }
	if (ts->eflags.zero) {
        goto loc_49C768;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49C70B;
    }
	cmp(&ts->eflags, ts->edi, 0x11111111);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C70B:
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }

loc_49C718:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14D, 1), ts->bl);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C768:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14D, 1), 0x0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C78D:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49C7CB;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C7CB;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_49C7CB:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C7EB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C80E:
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49C871;
    }
	if (ts->eflags.zero) {
        goto loc_49C83D;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49C718;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_49C600(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C83D:
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	game::sub_5CEC90(ts, mv);
	mov(mv, x86::mem(0x8709D1, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xAF0BBD92);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C871:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_49C956;
    }
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49C8A1;
    }
	game::sub_5BEEA0(ts, mv);

loc_49C8A1:
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_49C93D;
    }
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C8F5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14F, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49C8F5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x22BC94AF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x11111111);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C8F5:
	cmp(mv, &ts->eflags, x86::mem(0x844AD9, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_49C93D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49C93D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF3568B86);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x11111111);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C93D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C956:
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_49C980;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FAA8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C980:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49C99E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA8C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49C99E:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_49C9B6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA74);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_49C9B6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_49C9C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49C9D2;
    }
	cmp(&ts->eflags, ts->eax, 0xC3960EB9);
	if (!ts->eflags.zero) {
        goto locret_49C9E5;
    }

loc_49C9D2:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA50);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_49C9E5:
	retn(mv, &ts->esp, 0x10);
}

void sub_49C9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78FAC0);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::unknown_libname_3(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49CA50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D1F0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);
}

void sub_49CA70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78FAC0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_511320(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49CAD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_505560(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49CB40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D1A0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x14);
}

void sub_49CB60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49CB80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49CB78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_49CB78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49CB80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78FAD0);
	goto sub_510D40;
}

void sub_49CB90(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto locret_49CBAD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_49CBAD:
	retn(mv, &ts->esp, 0x10);
}

void sub_49CBB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49CC03;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_49CC3F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_49CC3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA50);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_49CC03:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49CC3F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_49CC3F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_49CC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49CC83;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x30);
	if (!ts->eflags.zero) {
        goto loc_49CC83;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1, 1), 0x78);
	if (!ts->eflags.zero) {
        goto loc_49CC83;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43DE50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49CC77;
    }
	mov(mv, x86::mem(ts->ecx, 1), 0x1);

loc_49CC77:
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x8);

loc_49CC83:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_49CC8E;
    }
	mov(mv, x86::mem(ts->ecx, 1), 0x0);

locret_49CC8E:
	retn(mv, &ts->esp, 0x8);
}

void sub_49CCA0(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_5864F0;
}

void sub_49CCB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772933);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x78FB2C);
	game::sub_583AF0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x78FAE0);
	mov(mv, x86::mem(ts->edi + 0x4CC, 4), 0x6);
	mov(mv, x86::mem(ts->edi + 0x4D0, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4D4, 4), ts->ebx);
	push(mv, &ts->esp, 0x40000);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x52C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x520, 4), ts->esi);
	game::sub_583B10(ts, mv);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	game::sub_582170(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_582180(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_5712A0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_571380(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_582280(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x783FE5);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x835980);
	game::sub_583B50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x4);

loc_772920:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_510D40;

loc_772928:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	add(&ts->ecx, 0x4C);
	goto sub_49CCA0;

SEH_49CCB0:
	mov(&ts->eax, 0x7DEEEC);
	goto ___CxxFrameHandler;
}

void sub_49CDB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	mov(&ts->eax, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_49CDC0:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49CDC0;
    }
	sub(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49CDFB;
    }
	mov(mv, &ts->eax, x86::mem(0x78FBE0, 4));
	mov(mv, &ts->ecx, x86::mem(0x78FBE4, 4));
	mov(mv, &ts->edx, x86::mem(0x78FBE8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->ax, x86::mem(0x78FBEC, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 2), ts->ax);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_49CDFB:
	mov(&ts->eax, 0x78FB40);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));

loc_49CE03:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49CE03;
    }
	sub(&ts->eax, ts->edx);
	add(&ts->eax, 0x24);
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49CE41;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1E);
	push(mv, &ts->esp, 0x78FB40);
	push(mv, &ts->esp, 0x835980);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x24);

loc_49CE41:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_49CE50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5864F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49CEA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x100);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_49CEE1;
    }
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78FBF0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);

loc_49CEE1:
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x9016A670);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x780207CA);
	push(mv, &ts->esp, ts->edx);
	game::sub_49CDB0(ts, mv);
	add(&ts->esp, 0x114);
	retn(mv, &ts->esp);
}

void sub_49CF10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x64, 1), ts->al);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49CF2D;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);

loc_49CF2D:
	mov(&ts->edi, 0x1);
	mov(&ts->ebx, 0x3);
	goto loc_49CF40;

loc_49CF40:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x78FC10);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	mov(&ts->ebp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x78FBF8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	inc(&ts->edi);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49CF40;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49D08F;
    }
	push(mv, &ts->esp, 0x3);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x78FC10);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_52C2F0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x78FBF8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0xC);

loc_49D08F:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_49D1C6;
    }
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_49D0A0:
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x78FC10);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebp);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebx*4), 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	game::sub_52C2F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49D127;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	goto loc_49D133;

loc_49D127:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);

loc_49D133:
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x78FBF8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49D18A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F228);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	goto loc_49D198;

loc_49D18A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F21C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_49D198:
	game::sub_5426C0(ts, mv);
	mov(&ts->ebx, ts->ebp);
	add(&ts->esp, 0x10);
	add(&ts->edi, 0xC);
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49D0A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x8);

loc_49D1C6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0xC);
}

void sub_49D1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772956);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x34, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x64, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC68);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), 0x78FC58);
	game::sub_542AC0(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xC4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_50DB40(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xB19B00B5);
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x49, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x49, 4));
	if (ts->eflags.zero) {
        goto loc_49D25B;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(&ts->ebp, 0x1);

loc_49D25B:
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x76, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x76, 4));
	if (ts->eflags.zero) {
        goto loc_49D26A;
    }
	mov(mv, x86::mem(ts->esp + (ts->ebp*4) + 0x14, 4), ts->eax);
	inc(&ts->ebp);

loc_49D26A:
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_49CF10(ts, mv);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ebp, 0x1);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	setle(ts->eflags, &ts->dl);
	push(mv, &ts->esp, 0x78FC4C);
	dec(&ts->edx);
	and_(&ts->edx, 0x4F806780);
	add(&ts->edx, 0x84684EE8);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_52C2F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x78FC3C);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC2C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x74, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FC1C);
	push(mv, &ts->esp, 0xD);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_50DBB0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_49D310:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49D310;
    }
	sub(&ts->eax, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49D351;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax), 4));
	push(mv, &ts->esp, ts->edx);
	game::j__malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4FFB10(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_5446F0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_49D35A;

loc_49D351:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_5446F0(ts, mv);

loc_49D35A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_772940:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	goto sub_4B1D80;

loc_772948:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	add(&ts->ecx, 0xC4);
	goto sub_50DB70;

SEH_49D1D0:
	mov(&ts->eax, 0x7DEF18);
	goto ___CxxFrameHandler;
}

void sub_49D380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_49D400(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_49D3BE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xDEAD900D);
	jmp(x86::mem(ts->edx + 0x8, 4));

loc_49D3BE:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	game::sub_5448F0(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xB19BA115);
	if (!ts->eflags.zero) {
        goto loc_49D3F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB19B00B5);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_49D3F1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_49D400(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC407210);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_49D43A;
    }
	movzx(mv, &ts->esi, x86::mem(ts->ecx + 0x64, 1));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49D43A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, 0x54);

loc_49D423:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_49D43A;
    }
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x10, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->ecx - 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_49D432;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_49D432:
	inc(&ts->edx);
	add(&ts->ecx, 0xC);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49D423;
    }

loc_49D43A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_49D440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49D458;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_49D466;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.zero) {
        goto loc_49D458;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_49D458:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D1D0(ts, mv);
	add(&ts->esp, 0x8);

locret_49D466:
	retn(mv, &ts->esp, 0x14);
}

void sub_49D470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49D490(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49D488;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_49D488:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49D490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772968);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78FC58);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_50DB70(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772960:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4B1D80;

SEH_49D490:
	mov(&ts->eax, 0x7DEF3C);
	goto ___CxxFrameHandler;
}

void sub_49D4F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772994);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x118);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_49D53E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_49D1D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_49D53E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772980:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FC74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_49D4F0:
	mov(&ts->eax, 0x7DEF60);
	goto ___CxxFrameHandler;
}

void sub_49D550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7729B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x530);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_49D59E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_49CCB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_49D59E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7729A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FC84);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_49D550:
	mov(&ts->eax, 0x7DEF84);
	goto ___CxxFrameHandler;
}

void sub_49D5B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D5D0;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4D8, 4), 0x0);

loc_49D5D0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49D5E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D5F7;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_49D5F7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->eax, 0x40);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D620;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x30);
	if (!ts->eflags.zero) {
        goto loc_49D620;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1, 1), 0x78);
	if (!ts->eflags.zero) {
        goto loc_49D620;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43DE50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->bl, 0x1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_49D622;

loc_49D620:
	xor_(&ts->bl, ts->bl);

loc_49D622:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xEB0FFE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x4D8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto locret_49D655;
    }
	game::sub_4FF2D0(ts, mv);

locret_49D655:
	retn(mv, &ts->esp, 0x4);
}

void sub_49D660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4CC, 4));
	mov(mv, x86::mem(ts->ecx + 0x4CC, 4), 0x6);
	retn(mv, &ts->esp);
}

void sub_49D680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4D4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xD4, 4));
	mov(mv, x86::mem(ts->ecx + 0xD8, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0xDC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(&ts->ecx, 0x3E);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FC98);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49D6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4D8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4D8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49D6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4D4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD09F00D5);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp);
}

void sub_49D710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D730;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4D8, 4), 0x0);

loc_49D730:
	mov(&ts->ecx, ts->esi);
	game::sub_583B30(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4D4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB19BA115);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49D760(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D84B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_526C10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D84B;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x419, 1));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x419, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_49D7AF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_49CC50(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->esi, 0x1);

loc_49D7AF:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x446, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x446, 4));
	if (ts->eflags.zero) {
        goto loc_49D7D1;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->esi) + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_49CC50(ts, mv);
	mov(mv, x86::mem(ts->esp + (ts->esi*4) + 0x10, 4), ts->eax);
	inc(&ts->esi);

loc_49D7D1:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x473, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x473, 4));
	if (ts->eflags.zero) {
        goto loc_49D7F3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + (ts->esi) + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_49CC50(ts, mv);
	mov(mv, x86::mem(ts->esp + (ts->esi*4) + 0x10, 4), ts->eax);
	inc(&ts->esi);

loc_49D7F3:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x4A0, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x4A0, 4));
	if (ts->eflags.zero) {
        goto loc_49D815;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->esi) + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_49CC50(ts, mv);
	mov(mv, x86::mem(ts->esp + (ts->esi*4) + 0x10, 4), ts->eax);
	inc(&ts->esi);

loc_49D815:
	cmp(&ts->eflags, ts->esi, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49D81F;
    }
	mov(&ts->esi, 0x3);

loc_49D81F:
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49D842;
    }

loc_49D825:
	mov(mv, &ts->dl, x86::mem(ts->esp + (ts->edi) + 0xC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_5409C0(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49D825;
    }

loc_49D842:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x4DC, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);

loc_49D84B:
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_49D850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_49D86B;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_49D86B;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D86B;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_49D86B;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_49D86B:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_49D870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D888;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_49D888:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49D890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49D8AB;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);

loc_49D8AB:
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_49D8C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xCEA5EA10);
	mov(mv, x86::mem(0x8383B4, 1), 0x1);
	game::sub_55DDE0(ts, mv);
	push(mv, &ts->esp, 0x78FCC0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49D8FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x835E34, 4), ts->eax);
	push(mv, &ts->esp, 0x78FCC0);
	goto loc_49D92F;

loc_49D8FD:
	mov(mv, &ts->eax, x86::mem(0x836368, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x6C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto locret_49D94B;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x6D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto locret_49D94B;
    }
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x835E34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836368, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCA8);

loc_49D92F:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x836238, 4), ts->edx);
	mov(mv, x86::mem(0x835978, 4), ts->ecx);
	game::sub_555EE0(ts, mv);
	add(&ts->esp, 0x10);

locret_49D94B:
	retn(mv, &ts->esp);
}

void sub_49D950(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x8383B4, 1), 0x0);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xE8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49D9AA;
    }
	push(mv, &ts->esp, ts->edi);
	nop();

loc_49D970:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49FFA0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49D9A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49D9A3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_49D9A3:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_49D970;
    }
	pop(mv, &ts->esp, ts->edi);

loc_49D9AA:
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49D9BA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_49D9BA:
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(0x836340, 4), 0x0);
	game::sub_54FD40(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x78F240);
	game::sub_555F10(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1B, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6E57AA10);
	mov(mv, x86::mem(ts->esp + 0x23, 1), 0x0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49DA25;
    }
	add(&ts->esp, 0x4);
	goto sub_43BD50;

loc_49DA25:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49DA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78FCE8);
	goto sub_510D40;
}

void sub_49DA40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	sub(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49DA68;
    }
	dec(&ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49DA60;
    }
	sub(&ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_49DAF8;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x10073C4F);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49DA60:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x5A6F817F);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49DA68:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49DAF8;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_49DA88;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xC91A3FDE);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49DA88:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6F6E6C6E);
	game::sub_742B60(ts, mv);
	push(mv, &ts->esp, 0x0);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x636F6E6E);
	setnz(ts->eflags, &ts->bl);
	game::sub_742B60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x706C7567);
	game::sub_742B60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49DAE6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6F6E6C6E);
	game::sub_742B60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x636F6E6E);
	game::sub_742B60(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_49DAE6:
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0x1ADD7F37);
	add(&ts->ebx, 0x3F920248);
	mov(&ts->eax, ts->ebx);

loc_49DAF8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_49DB00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49DC3E;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FD48);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x3);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FD34);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FD2C);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FD24);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xB8A7C6CC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FD10);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x34);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FD08);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x78FD10);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x78FD08);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x34);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49DC3E:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_49DCFC;
    }
	mov(&ts->ebx, 0x639);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_49DC62:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FD10);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FD08);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xB8A7C6CC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_49DCFC:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49DD15;
    }
	mov(&ts->ebx, 0x639);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x1);
	goto loc_49DC62;

loc_49DD15:
	mov(&ts->ebx, 0x39DF715);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x2);
	goto loc_49DC62;
}

void sub_49DD30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_49DD59;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_49DD53;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49DD4D;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x150, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_49DD59;
    }

loc_49DD4D:
	mov(mv, &ts->eax, x86::mem(0x7F44A0, 4));
	retn(mv, &ts->esp);

loc_49DD53:
	mov(mv, &ts->eax, x86::mem(0x7F44A8, 4));
	retn(mv, &ts->esp);

loc_49DD59:
	game::sub_49CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F449C, 4));
	retn(mv, &ts->esp);
}

void sub_49DD70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x150, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_49DD99;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14C, 4));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_49DD93;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49DD99;
    }
	mov(mv, &ts->eax, x86::mem(0x7F4498, 4));
	retn(mv, &ts->esp);

loc_49DD93:
	mov(mv, &ts->eax, x86::mem(0x7F44A8, 4));
	retn(mv, &ts->esp);

loc_49DD99:
	mov(mv, &ts->eax, x86::mem(0x7F44A4, 4));
	retn(mv, &ts->esp);
}

void sub_49DDA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F44AC, 4));
	retn(mv, &ts->esp);
}

void sub_49DDB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F44A0, 4));
	retn(mv, &ts->esp);
}

void sub_49DDC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x150, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_49DDDA;
    }
	game::sub_49CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F449C, 4));
	retn(mv, &ts->esp);

loc_49DDDA:
	mov(mv, &ts->eax, x86::mem(0x7F44A0, 4));
	retn(mv, &ts->esp);
}

void sub_49DDE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F448C, 4));
	retn(mv, &ts->esp);
}

void sub_49DDF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F44B0, 4));
	retn(mv, &ts->esp);
}

void sub_49DE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F4498, 4));
	retn(mv, &ts->esp);
}

void sub_49DE10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0xD5344356);
	push(mv, &ts->esp, 0x78FC4C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78FD5C);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->al);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49DE90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.zero) {
        goto loc_49DE9E;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_49DE9E:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D1D0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);
}

void sub_49DEB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78FD5C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_49DEF2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_49DEF2:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49DF20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x50, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49DF9F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500CC, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49DF9F;
    }
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_49DFA3;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49DF9F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x54, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_49DF9A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x74797065);
	game::sub_742B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49DF9A;
    }
	cmp(&ts->eflags, ts->eax, 0x10);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49DF84;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69A8BC54);
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495490(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_742DB0(ts, mv);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49DF84:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1DB81DB6);
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495490(ts, mv);
	add(&ts->esp, 0xC);

loc_49DF9A:
	game::sub_742DB0(ts, mv);

loc_49DF9F:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49DFA3:
	game::sub_585640(ts, mv);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49DFC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D1D0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);
}

void sub_49DFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49E000(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49DFF8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_49DFF8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49E000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x78FD6C);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5864F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_49E060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E12B;
    }
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, 0x850080);
	game::sub_503260(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x6475706C);
	if (!ts->eflags.zero) {
        goto loc_49E0AE;
    }
	push(mv, &ts->esp, 0x5498E449);
	goto loc_49E10B;

loc_49E0AE:
	cmp(&ts->eflags, ts->eax, 0x66696C74);
	if (!ts->eflags.zero) {
        goto loc_49E0BC;
    }
	push(mv, &ts->esp, 0x346CA432);
	goto loc_49E10B;

loc_49E0BC:
	cmp(&ts->eflags, ts->eax, 0x69706572);
	if (!ts->eflags.zero) {
        goto loc_49E0CA;
    }
	push(mv, &ts->esp, 0xE16C24E3);
	goto loc_49E10B;

loc_49E0CA:
	cmp(&ts->eflags, ts->eax, 0x6D617870);
	if (ts->eflags.zero) {
        goto loc_49E106;
    }
	cmp(&ts->eflags, ts->eax, 0x696E616D);
	if (!ts->eflags.zero) {
        goto loc_49E106;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x4904CDDE);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_49E12B;

loc_49E106:
	push(mv, &ts->esp, 0x39B57034);

loc_49E10B:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_49E12B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xAF0BBD92);
	goto sub_55DDA0;
}

void sub_49E150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E1A0;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6A4EC4AB);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);

loc_49E1A0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xAF0BBD92);
	goto sub_55DDA0;
}

void sub_49E1C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xE, 1), 0xFF);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0xFF);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E262;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49E262;
    }
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49E268;
    }

loc_49E200:
	mov(mv, &ts->al, x86::mem(ts->ebx + (ts->esi), 1));
	cmp(&ts->eflags, ts->al, 0x40);
	if (!ts->eflags.zero) {
        goto loc_49E229;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xA, 1), 0xFF);
	if (!ts->eflags.zero) {
        goto loc_49E262;
    }
	mov(&ts->al, ts->bl);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0xA, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_49E262;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	movsx(&ts->ecx, ts->bl);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	goto loc_49E246;

loc_49E229:
	cmp(&ts->eflags, ts->al, 0x2E);
	if (!ts->eflags.zero) {
        goto loc_49E248;
    }
	mov(&ts->al, ts->bl);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0xB, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_49E262;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	movsx(&ts->edx, ts->bl);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);

loc_49E246:
	if (ts->eflags.zero) {
        goto loc_49E262;
    }

loc_49E248:
	push(mv, &ts->esp, ts->esi);
	inc(&ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E200;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xB, 1));
	mov(mv, &ts->al, x86::mem(ts->esp + 0xA, 1));
	cmp(&ts->eflags, ts->cl, ts->al);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49E270;
    }

loc_49E262:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_49E268:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xB, 1));
	mov(mv, &ts->al, x86::mem(ts->esp + 0xA, 1));

loc_49E270:
	movsx(&ts->edx, ts->al);
	movsx(&ts->esi, ts->cl);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_49E262;
    }
	cmp(&ts->eflags, ts->al, 0xFF);
	if (ts->eflags.zero) {
        goto loc_49E262;
    }
	cmp(&ts->eflags, ts->cl, 0xFF);
	if (ts->eflags.zero) {
        goto loc_49E262;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_49E290(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x6);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49E2BA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x91C92A94);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_49E2BA:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E38C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49E38C;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi, 1));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D3A0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49E312;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x536C452D);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_49E312:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E36A;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49E36A;
    }
	add(&ts->esi, 0x80);
	push(mv, &ts->esp, ts->esi);
	game::sub_49E1C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49E362;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x7E77208C);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_49E362:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_49E36A:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xD29A1A18);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_49E38C:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4DA10F66);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_49E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x836370, 4));
	add(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49E419;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E3F1;
    }
	cmp(&ts->eflags, ts->eax, 0x1F);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49E3F1;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x124, 4));
	cmp(&ts->eflags, ts->esi, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E3F1;
    }
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49E441;
    }

loc_49E3F1:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xA8DA51CF);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E419:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xFF99D845);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E441:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x7E630FAC);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xA365B3D5);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x78F2F8);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49E480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49E4BE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xB34A760F);
	goto sub_51CE60;

loc_49E4BE:
	cmp(&ts->eflags, ts->eax, 0x6475706C);
	if (!ts->eflags.zero) {
        goto loc_49E4CF;
    }
	push(mv, &ts->esp, 0x67F1D911);
	goto loc_49E626;

loc_49E4CF:
	cmp(&ts->eflags, ts->eax, 0x64626572);
	if (!ts->eflags.zero) {
        goto loc_49E4E0;
    }
	push(mv, &ts->esp, 0x91C92A94);
	goto loc_49E626;

loc_49E4E0:
	cmp(&ts->eflags, ts->eax, 0x6D61696C);
	if (!ts->eflags.zero) {
        goto loc_49E4F1;
    }
	push(mv, &ts->esp, 0x7E77208C);
	goto loc_49E626;

loc_49E4F1:
	cmp(&ts->eflags, ts->eax, 0x706D616C);
	if (!ts->eflags.zero) {
        goto loc_49E51A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FE04);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E64C;
    }
	mov(mv, x86::mem(ts->esi + 0x14C, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E51A:
	cmp(&ts->eflags, ts->eax, 0x69706173);
	if (!ts->eflags.zero) {
        goto loc_49E555;
    }
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xD29A1A18);

loc_49E52A:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E555:
	cmp(&ts->eflags, ts->eax, 0x696E616D);
	if (!ts->eflags.zero) {
        goto loc_49E567;
    }
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4DA10F66);
	goto loc_49E52A;

loc_49E567:
	cmp(&ts->eflags, ts->eax, 0x656C656E);
	if (!ts->eflags.zero) {
        goto loc_49E585;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x32);
	push(mv, &ts->esp, 0x6864BFED);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_49E62E;

loc_49E585:
	cmp(&ts->eflags, ts->eax, 0x66696C74);
	if (!ts->eflags.zero) {
        goto loc_49E596;
    }
	push(mv, &ts->esp, 0xFE641264);
	goto loc_49E626;

loc_49E596:
	cmp(&ts->eflags, ts->eax, 0x746F6F79);
	if (!ts->eflags.zero) {
        goto loc_49E5C5;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x87983521);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x78FDEC);
	push(mv, &ts->esp, ts->esi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E5C5:
	cmp(&ts->eflags, ts->eax, 0x697A6970);
	if (!ts->eflags.zero) {
        goto loc_49E5F3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FDC4);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E5F3:
	cmp(&ts->eflags, ts->eax, 0x696D7374);
	if (!ts->eflags.zero) {
        goto loc_49E621;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FD90);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49E621:
	push(mv, &ts->esp, 0x2EB94B88);

loc_49E626:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);

loc_49E62E:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x3098BF25);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_49E64C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49E650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49E6EC;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49E6CE;
    }
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_49E749;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	add(&ts->eax, 0x4C);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	add(&ts->eax, 0xC8);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49E6CE:
	mov(mv, &ts->edi, x86::mem(0x836370, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x10);
	add(&ts->edi, 0xC8);
	mov(mv, x86::mem(0x836375, 1), 0x1);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	goto loc_49E736;

loc_49E6EC:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_49E749;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	add(&ts->ecx, 0xC8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E1C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49E72A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7E77208C);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_49E72A:
	mov(&ts->al, 0x1);
	mov(mv, x86::mem(0x836376, 1), ts->al);
	mov(mv, x86::mem(0x836374, 1), ts->al);

loc_49E736:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F268);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_49E749:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_49E750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49E770(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49E768;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_49E768:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49E770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78FE18);
	goto sub_510D40;
}

void sub_49E780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7729D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E7C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78FE18);
	mov(&ts->eax, ts->esi);

loc_49E7C5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7729C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FE28);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_49E780:
	mov(&ts->eax, 0x7DEFA8);
	goto ___CxxFrameHandler;
}

void sub_49E7E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49E800(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49E7F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_49E7F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49E800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x78FE38);
	goto sub_510D40;
}

void sub_49E810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_49E825;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFB);
	if (!ts->eflags.zero) {
        goto loc_49E845;
    }
	push(mv, &ts->esp, 0x9A58E01C);
	goto loc_49E839;

loc_49E825:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xFC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_49E86E;
    }
	push(mv, &ts->esp, 0x501CDF6F);

loc_49E839:
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49E852;
    }

loc_49E845:
	push(mv, &ts->esp, 0x906B132A);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);

loc_49E852:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);

locret_49E86E:
	retn(mv, &ts->esp);
}

void sub_49E870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x280);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EA0C;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->esi);
	game::sub_73EAD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_73F1F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	game::sub_73ECD0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_73ECE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	game::sub_73F940(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	game::sub_73EAE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	game::sub_73EB70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	game::sub_73EB00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	game::sub_73EB20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	add(&ts->esp, 0x2C);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E922;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49E912;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E922;
    }

loc_49E912:
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);

loc_49E922:
	push(mv, &ts->esp, ts->esi);
	game::sub_73EB40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->eax);
	game::sub_73EB90(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	game::sub_73EBA0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	game::sub_73EBC0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	game::sub_73EBE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->eax);
	game::sub_73EC00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->eax);
	game::sub_73ECB0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->eax);
	game::sub_73EC90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->eax);
	game::sub_73EC20(ts, mv);
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1B0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_73EC70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_73ED70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8C, 4), ts->eax);
	game::sub_73EDC0(ts, mv);
	add(&ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	xor_(&ts->edi, ts->edi);
	nop();

loc_49E9B0:
	push(mv, &ts->esp, ts->edi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_49E9D8;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49E9E0;
    }

loc_49E9D8:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49E9B0;
    }
	goto loc_49E9EF;

loc_49E9E0:
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);

loc_49E9EF:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584820(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EA0C;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);

loc_49EA0C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->edi, ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_49EA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x27C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x290, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);
}

void sub_49EA80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_51F530(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EB0C;
    }
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	game::sub_51F530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EB0C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_49EABB;
    }
	push(mv, &ts->esp, 0xA53035DD);
	goto loc_49EAE0;

loc_49EABB:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_49EADB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x59337816);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49EADB:
	push(mv, &ts->esp, 0xD157C200);

loc_49EAE0:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x59337816);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);

loc_49EB0C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49EB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_49EB67;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_58AD20(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49EB67:
	cmp(&ts->eflags, ts->eax, 0x7567616D);
	if (!ts->eflags.zero) {
        goto loc_49EBB5;
    }
	push(mv, &ts->esp, 0x331F4F58);

loc_49EB73:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x23F1BFA);
	push(mv, &ts->esp, 0x23F1BFA);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	add(&ts->esp, 0x1C);
	inc(&ts->eax);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49EBB5:
	cmp(&ts->eflags, ts->eax, 0x66756C6C);
	if (!ts->eflags.zero) {
        goto loc_49EBC3;
    }
	push(mv, &ts->esp, 0xD155595A);
	goto loc_49EB73;

loc_49EBC3:
	cmp(&ts->eflags, ts->eax, 0x70617373);
	if (!ts->eflags.zero) {
        goto loc_49EBD7;
    }
	mov(mv, x86::mem(0x836388, 4), ts->edi);
	push(mv, &ts->esp, 0xB5EAA702);
	goto loc_49EC23;

loc_49EBD7:
	cmp(&ts->eflags, ts->eax, 0x61737461);
	if (!ts->eflags.zero) {
        goto loc_49EBE5;
    }
	push(mv, &ts->esp, 0x1C098DDF);
	goto loc_49EB73;

loc_49EBE5:
	cmp(&ts->eflags, ts->eax, 0x696E7670);
	if (!ts->eflags.zero) {
        goto loc_49EC1E;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4AD41E75);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49EC1E:
	push(mv, &ts->esp, 0x7AA591CC);

loc_49EC23:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49EC60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EC82;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x110, 4), 0x0);

loc_49EC82:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_49ECE9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49ECD4;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49ECB5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49ECD4;
    }

loc_49ECB5:
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xF9, 1), 0x0);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49ECD4:
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esi + 0xF9, 1), 0x1);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49ECE9:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEF94AFFD);
	mov(mv, x86::mem(ts->esi + 0xF9, 1), 0x1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49ED30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x164, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_49ED44;
    }
	jmp(x86::mem(0x49EDC0, 4));

loc_49ED4B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	goto def_49ED44;

loc_49ED59:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	goto loc_49ED75;

loc_49ED61:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	goto def_49ED44;

loc_49ED6F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));

loc_49ED75:
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->edx);

def_49ED44:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x164, 4));
	if (ts->eflags.zero) {
        goto loc_49EDBD;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49ED97;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_49ED97:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x164, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x164, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEC0(ts, mv);
	add(&ts->esp, 0x14);

loc_49EDBD:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49EDD0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_49EDEE;
    }
	mov(mv, &ts->al, x86::mem(0x8500CA, 1));
	mov(mv, x86::mem(0x836388, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x11C, 1), ts->al);

loc_49EDEE:
	goto sub_49EA80;
}

void sub_49EE00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x155, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49EE36;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0xD29A1A18);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0x14);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49EE36:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49EE40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x50C);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x12, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_49EE69;
    }
	mov(&ts->ebx, 0x836014);
	mov(mv, x86::mem(ts->esp + 0x12, 1), 0x1);

loc_49EE69:
	push(mv, &ts->esp, ts->ebx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2A0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EEC0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xA424C082);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558330(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_49EEC0:
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	xor_(&ts->esi, ts->esi);

loc_49EEC7:
	mov(mv, &ts->eax, x86::mem(0x8358F4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49EEE8;
    }
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49EEC7;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	goto loc_49EF02;

loc_49EEE8:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x12, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49EF00;
    }
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x83590C, 1), ts->cl);

loc_49EF00:
	mov(&ts->al, 0x1);

loc_49EF02:
	movzx(mv, &ts->edx, x86::mem(0x850080, 1));
	mov(mv, &ts->ecx, x86::mem(0x8358F0, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49EF45;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49EF45;
    }
	mov(mv, &ts->eax, x86::mem(0x8358F4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x8358F0, 4), ts->ecx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8358F0, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->ecx + 0x83590B, 1), ts->al);

loc_49EF45:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_49EF50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x92C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_49EFD8;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	add(&ts->eax, 0x918);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11B4, 1), 0x0);
	push(mv, &ts->esp, 0x7F4500);
	mov(mv, x86::mem(0x8363C0, 4), ts->ecx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49EFA7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_49EFA7:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xFB226531);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78FE90);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x18);

loc_49EFD8:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49EFE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49F0DC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->edi, 0x1);
	mov(&ts->ebp, 0x6);

loc_49F014:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEDC);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->edi);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_49F014;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_49F096;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_49F096:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0xABC08912);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F0DC:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1198, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F231;
    }
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49F181;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1180, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F132;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEAC);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F132:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_49F21C;
    }
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F231;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F181:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49F1D7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F1D7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F231;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F1D7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_49F21C;
    }
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F231;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F21C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F231:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49F240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x117C, 4), 0xA);
	mov(mv, x86::mem(ts->ecx + 0x1178, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_49F270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->edi, ts->edi);
	mov(&ts->edi, ts->edi);

loc_49F280:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_49F2C4;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x918, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49F2C4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_58CF60(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x9);
	mov(mv, &ts->eax, x86::mem(0x7F6CB8, 4));
	if (ts->eflags.zero) {
        goto loc_49F2C9;
    }

loc_49F2C4:
	mov(mv, &ts->eax, x86::mem(0x7F6CB4, 4));

loc_49F2C9:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_49F2DB;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FF7C);
	push(mv, &ts->esp, ts->eax);
	goto loc_49F333;

loc_49F2DB:
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49F2ED;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FF68);
	push(mv, &ts->esp, ts->ecx);
	goto loc_49F333;

loc_49F2ED:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_49F2FC;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FF54);
	goto loc_49F32F;

loc_49F2FC:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_49F30F;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FF44);
	push(mv, &ts->esp, ts->eax);
	goto loc_49F333;

loc_49F30F:
	cmp(&ts->eflags, ts->edi, 0x4);
	if (!ts->eflags.zero) {
        goto loc_49F322;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FF30);
	push(mv, &ts->esp, ts->ecx);
	goto loc_49F333;

loc_49F322:
	cmp(&ts->eflags, ts->edi, 0x5);
	if (!ts->eflags.zero) {
        goto loc_49F33B;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FF20);

loc_49F32F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);

loc_49F333:
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_49F33B:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49F280;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x917, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(0x7F6CB8, 4));
	if (!ts->eflags.zero) {
        goto loc_49F359;
    }
	mov(mv, &ts->eax, x86::mem(0x7F6CB4, 4));

loc_49F359:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FF0C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->edi, 0x2);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x910, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x7);

loc_49F380:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x7F6CB8, 4));
	if (!ts->eflags.zero) {
        goto loc_49F38F;
    }
	mov(mv, &ts->eax, x86::mem(0x7F6CB4, 4));

loc_49F38F:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEF8);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebx, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_49F3B4;
    }
	inc(&ts->edi);

loc_49F3B4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ebx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_49F380;
    }
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49F3EF;
    }

loc_49F3C5:
	mov(mv, &ts->ecx, x86::mem(0x7F6CB4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEF8);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F3C5;
    }

loc_49F3EF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_49F400(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(&ts->edi, 0x1);

loc_49F422:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x78FE48);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F47A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FE48);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F47A:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F422;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_49F490(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(&ts->ebx, 0x1);

loc_49F4B2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FE58);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F50A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FE58);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F50A:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F4B2;
    }
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F569;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F569:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_49F570(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FF90);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FE68);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F5E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FE68);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F5E6:
	mov(&ts->ebx, 0x2);
	goto loc_49F5F0;

loc_49F5F0:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F648;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F648:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F5F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_49F660(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(&ts->edi, 0x1);

loc_49F682:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x78FE78);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F6DA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FE78);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F6DA:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F682;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_49F6F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(&ts->edi, 0x1);

loc_49F712:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FF90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49F76A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x783EB4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_49F76A:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49F712;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_49F780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49F7A2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), 0x0);

loc_49F7A2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x696E7670);
	if (!ts->eflags.zero) {
        goto loc_49F7C5;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF2AAB6B5);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x87F32B2A);
	goto loc_49F7DC;

loc_49F7C5:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49F7EF;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3F920248);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2C0E485A);

loc_49F7DC:
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);

loc_49F7EF:
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_49F890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49F8C6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xD99CFE5E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);

loc_49F8C6:
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_49F8E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4D1EA0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_49F8F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49F910;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), 0x0);

loc_49F910:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49F93E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FFA0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_49F93E:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA19617BD);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_49F970(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	movsx(mv, &ts->si, x86::mem(ts->edi, 1));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->si, ts->ax);
	mov(&ts->ebp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_49F9E6;
    }

loc_49F997:
	cmp(&ts->eflags, ts->si, 0x20);
	if (!ts->eflags.zero) {
        goto loc_49F9A1;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);

loc_49F9A1:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_50BC10(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x68, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_49F9DE;
    }
	mov(&ts->eax, ts->esi);
	movsx(mv, &ts->si, x86::mem(ts->edi, 1));
	inc(&ts->ebx);
	inc(&ts->edi);
	test(&ts->eflags, ts->si, ts->si);
	if (!ts->eflags.zero) {
        goto loc_49F997;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_49F9DE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_49F9E8;
    }

loc_49F9E6:
	mov(&ts->eax, ts->ebx);

loc_49F9E8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_49FA00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_49FA10:
	mov(mv, &ts->al, x86::mem(ts->edi, 1));
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_49FA10;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->edi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebx) + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0x1000);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_49FA54;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_49FA30:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0xA);
	if (ts->eflags.zero) {
        goto loc_49FA3F;
    }

loc_49FA35:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x1, 1));
	inc(&ts->eax);
	dec(&ts->edi);
	cmp(&ts->eflags, ts->cl, 0xA);
	if (!ts->eflags.zero) {
        goto loc_49FA35;
    }

loc_49FA3F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	inc(&ts->eax);
	dec(&ts->edi);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->edi) + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_49FA30;
    }

loc_49FA54:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_49FA62;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_49FA62:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->esi) + 0x78, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC00(ts, mv);
	add(&ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->edi, 1), 0xA);
	mov(mv, x86::mem(ts->edi + 0x1, 1), 0x0);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49FA9B;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_49FA9B;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);

loc_49FA9B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_49FAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x72619778);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49FBF0;
    }
	if (ts->eflags.zero) {
        goto loc_49FBA2;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49FB0F;
    }
	if (ts->eflags.zero) {
        goto loc_49FAEE;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_49FADD;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49FB1A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FADD:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FAEE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFE0);
	push(mv, &ts->esp, 0x78FFD8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FB0F:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_49FCFF;
    }

loc_49FB1A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_49FB32;
    }
	inc(&ts->eax);

loc_49FB32:
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_49FB38;
    }
	jmp(x86::mem(0x49FD08, 4));

loc_49FB3F:
	mov(&ts->edi, 0x2);
	goto def_49FB38;

loc_49FB46:
	mov(&ts->edi, 0x3);
	goto def_49FB38;

loc_49FB4D:
	mov(&ts->edi, 0x4);
	goto def_49FB38;

loc_49FB54:
	mov(&ts->edi, 0x8);
	goto def_49FB38;

loc_49FB5B:
	mov(&ts->edi, 0x6);
	goto def_49FB38;

loc_49FB62:
	mov(&ts->edi, 0x5);

def_49FB38:
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FBA2:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49FBC1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_49FBC1:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FBF0:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49FCDA;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_49FC8C;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_49FCFF;
    }
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FFBC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49FCFF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FC8C:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49FCAB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_49FCAB:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FCDA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x14);

loc_49FCFF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);
}

void sub_49FD20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x72619778);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49FE69;
    }
	if (ts->eflags.zero) {
        goto loc_49FE1B;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_49FD8F;
    }
	if (ts->eflags.zero) {
        goto loc_49FD6E;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_49FD5D;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_49FD9A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FD5D:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FD6E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFE0);
	push(mv, &ts->esp, 0x78FFD8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FD8F:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_49FF78;
    }

loc_49FD9A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edi, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_49FDB2;
    }
	inc(&ts->eax);

loc_49FDB2:
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_49FDB8;
    }
	jmp(x86::mem(0x49FF84, 4));

loc_49FDBF:
	mov(&ts->edi, 0x2);
	goto def_49FDB8;

loc_49FDC6:
	mov(&ts->edi, 0x3);
	goto def_49FDB8;

loc_49FDCD:
	mov(&ts->edi, 0x4);
	goto def_49FDB8;

loc_49FDD4:
	mov(&ts->edi, 0x8);
	goto def_49FDB8;

loc_49FDDB:
	mov(&ts->edi, 0x5);

def_49FDB8:
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FE1B:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49FE3A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_49FE3A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FE69:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_49FF53;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_49FF05;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_49FF78;
    }
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FFE8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_49FF78;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FF05:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_49FF24;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_49FF24:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_49FF53:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x14);

loc_49FF78:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);
}

void sub_49FFA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x790024);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49FFF1;
    }
	push(mv, &ts->esp, 0x790014);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49FFF1;
    }
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49FFF1;
    }
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_49FFF1;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_49FFF1:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A0000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xE4, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A007E;
    }
	push(mv, &ts->esp, ts->esi);

loc_4A0017:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x790024);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0076;
    }
	push(mv, &ts->esp, 0x790014);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0076;
    }
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0076;
    }
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0076;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A0074;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A0074;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A0076;
    }

loc_4A0074:
	mov(&ts->ebx, ts->edi);

loc_4A0076:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4A0017;
    }
	pop(mv, &ts->esp, ts->esi);

loc_4A007E:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A0090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4A00B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_49D8C0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4A00B6:
	cmp(&ts->eflags, ts->eax, 0x10073C4F);
	if (!ts->eflags.zero) {
        goto loc_4A00E7;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xA8DE4CD2);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_4A00E7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_49DA40(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x790038);
	push(mv, &ts->esp, ts->eax);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4A0120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78787878);
	push(mv, &ts->esp, 0x0);
	game::sub_49D8C0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4A0140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x2);
	mov(mv, x86::mem(0x8362E0, 1), 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0188;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58FD50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE2B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4A0188;
    }
	mov(mv, &ts->al, x86::mem(0x8500C7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A0188;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F08F0(ts, mv);

loc_4A0188:
	game::sub_5832B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A01A9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4A01A9:
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x836370, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A01C3;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4A01C3:
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(0x836340, 4), 0x0);
	game::sub_54FD40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A01F0;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F44B0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4A01F0:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4A0200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A0215;
    }
	push(mv, &ts->esp, 0x1EB7BF0E);
	goto loc_4A021A;

loc_4A0215:
	push(mv, &ts->esp, 0x4E7212D8);

loc_4A021A:
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_4A0250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A0261;
    }
	mov(&ts->eax, 0x847121DD);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4A0261:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4A0276;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4A0276;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0276;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4A027D;
    }

loc_4A0276:
	mov(&ts->eax, 0xA7DB717F);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4A027D:
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0x4, 1));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_583AC0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4A02BB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A02BB;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EF9E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A02BB;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edi, 0x5);
	setnle(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	and_(&ts->eax, 0x58F7C8DE);
	add(&ts->eax, 0x847121DD);
	retn(mv, &ts->esp);

loc_4A02BB:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xAEB6FD26);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_4A02D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A0303;
    }
	cmp(mv, &ts->eflags, x86::mem(0x866A08, 4), 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A0339;
    }
	game::sub_5EF9E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A0339;
    }
	mov(mv, &ts->edx, x86::mem(0x866A08, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, 0x3);
	setnle(ts->eflags, &ts->al);
	dec(&ts->eax);
	and_(&ts->eax, 0x58F7C8DE);
	add(&ts->eax, 0x847121DD);
	retn(mv, &ts->esp);

loc_4A0303:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x7FBE5C, 4));
	if (!ts->eflags.zero) {
        goto loc_4A0315;
    }
	mov(&ts->eax, 0x847121DD);
	retn(mv, &ts->esp);

loc_4A0315:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4A032A;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4A032A;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A032A;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4A0330;
    }

loc_4A032A:
	mov(&ts->eax, 0xA7DB717F);
	retn(mv, &ts->esp);

loc_4A0330:
	game::sub_5EF9E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A033F;
    }

loc_4A0339:
	mov(&ts->eax, 0xAEB6FD26);
	retn(mv, &ts->esp);

loc_4A033F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x89CF6C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	mov(&ts->eax, 0x847121DD);
	if (ts->eflags.zero) {
        goto locret_4A035C;
    }
	mov(&ts->eax, 0xDD68EABB);

locret_4A035C:
	retn(mv, &ts->esp);
}

void sub_4A0360(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(&ts->ebx, 0x1);
	xor_(&ts->edi, ts->edi);

loc_4A0370:
	mov(mv, &ts->eax, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A03D4;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790050);
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A03B4;
    }
	mov(&ts->eax, ts->esi);
	game::sub_4A0250(ts, mv);
	goto loc_4A03BB;

loc_4A03B4:
	mov(&ts->ecx, ts->esi);
	game::sub_4A02D0(ts, mv);

loc_4A03BB:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->ebx);

loc_4A03D4:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0370;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_4A03F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7729F3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x790060);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A0432;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);

loc_4A0432:
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586950(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x78F544);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7729E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7729E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4957A0;

SEH_4E6210:
	mov(&ts->eax, 0x7E13E4);
	goto ___CxxFrameHandler;
}

void sub_4A0470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xCA4CE1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A049C;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4A04BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790070);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A049C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790070);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x10);

loc_4A04BF:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A04D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x4, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7900A8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x790098);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x790084);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_4A0540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	sub(&ts->eax, 0x0);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A0625;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A06BA;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900F4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900E4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	add(&ts->esp, 0x10);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4A05BE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4A05E1;

loc_4A05BE:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A05D0;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4A05D0:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);

loc_4A05E1:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7900DC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900CC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	add(&ts->esi, 0x2A8);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x2);
	game::sub_50D820(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_4A0625:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900F4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900E4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7900BC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	add(&ts->esi, 0x2A8);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x2);
	game::sub_50D820(ts, mv);

loc_4A06BA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A06D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	sub(&ts->eax, 0x0);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A073C;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A078A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA1FA715F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790114);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF122E057);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79010C);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE84E015C);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x790104);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A073C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF29E90F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790114);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA1FA715F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79010C);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF122E057);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790104);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x30);

loc_4A078A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A0790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A07A5;
    }
	push(mv, &ts->esp, 0x93FDEE74);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A07A5:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A07B8;
    }
	push(mv, &ts->esp, 0xDCB9F861);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A07B8:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A07CB;
    }
	push(mv, &ts->esp, 0x35102EDF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A07CB:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A07DE;
    }
	push(mv, &ts->esp, 0xD7162CFA);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A07DE:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4A07F1;
    }
	push(mv, &ts->esp, 0x30DA61E1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A07F1:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4A0804;
    }
	push(mv, &ts->esp, 0x75F903F4);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_4A0804:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A0810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79011C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A0852;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);

loc_4A0852:
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586950(ts, mv);
	game::sub_58F230(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582510(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A0890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582530(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A08B1;
    }
	push(mv, &ts->esp, 0x719AFE9E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A08B1:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A08C6;
    }
	push(mv, &ts->esp, 0xF600C82B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A08C6:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A08DB;
    }
	push(mv, &ts->esp, 0x36C5FAE4);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A08DB:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A08F0;
    }
	push(mv, &ts->esp, 0xE8140569);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A08F0:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4A0905;
    }
	push(mv, &ts->esp, 0xB24883A);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A0905:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4A091A;
    }
	push(mv, &ts->esp, 0x8CB6E51E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_4A091A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A0920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x719AFE9E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901DC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBC8BF7F0);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901D0);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF600C82B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901C4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF18A58BD);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901B8);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x36C5FAE4);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901AC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78671DB6);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x7901A0);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE8140569);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x790194);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB561DD7B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x790188);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB24883A);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79017C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE9E588C);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79016C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8CB6E51E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79015C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE3B7E70);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79014C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	xor_(&ts->edi, ts->edi);

loc_4A0B22:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79013C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79012C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0xD);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0B22;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A0B80(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	mov(mv, x86::mem(ts->esp, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xA);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	xor_(&ts->eax, ts->eax);

loc_4A0BC3:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->eax*4), 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A0BD1;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0BC3;
    }
	goto loc_4A0BD6;

loc_4A0BD1:
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0BD8;
    }

loc_4A0BD6:
	xor_(&ts->eax, ts->eax);

loc_4A0BD8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->eax, ts->ecx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x7);
	idiv(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A0BFC;
    }
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->edx*4), 4));
	mov(mv, x86::mem(0x850088, 4), ts->edx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x4);

loc_4A0BFC:
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->edx*4), 4));
	mov(mv, x86::mem(0x850088, 4), ts->eax);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A0C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, 0x78F570);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A0C30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A0CA7;
    }
	if (ts->eflags.zero) {
        goto loc_4A0C6D;
    }
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4A0DAE;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4A0CA2;
    }

loc_4A0C6D:
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4A0C81;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4A0C81;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.zero) {
        goto loc_4A0C88;
    }

loc_4A0C81:
	mov(mv, x86::mem(0x850099, 1), 0x0);

loc_4A0C88:
	mov(mv, x86::mem(0x8500C4, 1), 0x1);

loc_4A0C8F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F320);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4A0CA2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A0CA7:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A0C8F;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4A0CA2;
    }
	mov(mv, &ts->edi, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero) {
        goto loc_4A0CF8;
    }
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.zero) {
        goto loc_4A0CF8;
    }
	cmp(&ts->eflags, ts->edi, 0xA);
	if (ts->eflags.zero) {
        goto loc_4A0CF8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4A0D4A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	goto loc_4A0D43;

loc_4A0CF8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4A0D27;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0C10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A0D4A;
    }

loc_4A0D27:
	mov(mv, x86::mem(0x850099, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4A0D43:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);

loc_4A0D4A:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4A0CA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x8);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	if (!ts->eflags.zero) {
        goto loc_4A0DBA;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4A0D92;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0C10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A0CA2;
    }

loc_4A0D92:
	mov(mv, x86::mem(0x850098, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4A0DAE:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A0DBA:
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4A0CA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A0DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0E0A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A0E0A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A0E71;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A0E48;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7901E8);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A0E48:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8B207E1A);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A0E71:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A0E90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(&ts->esi, 0x1);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4A0EA0:
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790200);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A0EA0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A0EF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x27C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x290, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A0F40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x27C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x290, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A0F90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	sub(&ts->esp, 0x27C);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A0FFD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1097;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, 0x835FB8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4A1066;

loc_4A0FFD:
	mov(mv, &ts->edx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1031;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835BF8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A108A;
    }

loc_4A1031:
	mov(mv, &ts->edx, x86::mem(0x835BF8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A0F40(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, 0x835FB8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x835BF8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x836014);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1066:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x790210);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x4);

loc_4A108A:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1097:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x4);
}

} // namespace game 
